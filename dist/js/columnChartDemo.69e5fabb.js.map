{"version":3,"file":"js/columnChartDemo.69e5fabb.js","mappings":"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","sources":["webpack://oms-frontend/./src/views/demo/columnChartDemo.vue","webpack://oms-frontend/./src/views/demo/columnChartDemo.vue?f22b"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <div id=\"columnChart\"></div>\n  </div>\n</template>\n\n<script setup>\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nconst xData = ref([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Y\"]);\nconst res = ref({\n  blue: [100, 200, 300, 30, 90, 40, 320, 270, 50, 370, 278, 1000],\n  green: [10, 30, 40, 90, 78, 270, 340, 37, 98, 270, 45, 340],\n  purple: 500,\n  yellowLine: [30, 50, 90, 10, 80, 60, 70, 39, 79, 50, 20, 38],\n  orangeLine: [10, 80, 60, 70, 39, 79, 50, 20, 38, 90, 49, 90],\n});\n// 处理横坐标轴\nconst constructxAxis = data => {\n  const transformedData = data.map((month, index) => ({\n    data: Array.from({ length: data.length }, (_, i) => (i === index ? month : \"\")),\n  }));\n  return transformedData;\n};\n// 处理柱形数据\nconst constructData = data => {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const obj = {};\n    obj.data = Array(i).fill(\"\").concat(data[i]);\n    result.push(obj);\n  }\n  return result;\n};\nonMounted(() => {\n  var chartDom = document.getElementById(\"columnChart\");\n  var myChart = echarts.init(chartDom);\n  let xAxisData = constructxAxis(xData.value);\n  xAxisData.forEach(item => {\n    item.type = \"category\";\n    item.position = \"bottom\";\n  });\n  // 蓝色数据 销售毛利（累计预）\n  let blueData = constructData(res.value.blue);\n  blueData.forEach((item, index) => {\n    item.name = \"销售毛利（累计预）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  // 绿色数据 销售毛利（累计实）\n  let greenData = constructData(res.value.green);\n  greenData.forEach((item, index) => {\n    item.name = \"销售毛利（累计实）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  //年度毛利（年度目标）\n  let purpleData = {\n    name: \"年度毛利（年度目标）\",\n    type: \"bar\",\n    xAxisIndex: 12,\n    barWidth: 30,\n    itemStyle: {\n      color: \"purple\",\n    },\n    data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", res.value.purple],\n  };\n  //销售毛利率（年度预算）\n  const orangeLineData = {\n    name: \"销售毛利率（年度预算）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"orange\",\n    },\n    data: res.value.orangeLine,\n  };\n  //销售毛利率（实际累计）\n  const yellowLineData = {\n    name: \"销售毛利率（实际累计）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"yellow\",\n    },\n    data: res.value.yellowLine,\n  };\n  // 所有数据\n  let seriesData = [];\n  blueData.forEach(item => {\n    seriesData.push(item);\n  });\n  greenData.forEach(item => {\n    seriesData.push(item);\n  });\n  seriesData.push(purpleData);\n  seriesData.push(orangeLineData);\n  seriesData.push(yellowLineData);\n  var option;\n  option = {\n    // 整体图形样式\n    // grid: {\n    //   show: true,\n    //   left: \"15%\",\n    //   top: \"25%\",\n    //   right: \"15%\",\n    //   // bottom: \"5%\",\n    //   backgroundColor: \"rgba(224, 17, 17, 1)\",\n    //   borderColor: \"rgba(96, 67, 67, 1)\",\n    // },\n    legend: {\n      data: [\n        \"销售毛利（累计预）\",\n        \"销售毛利（累计实）\",\n        \"销售毛利率（年度预算）\",\n        \"销售毛利率（实际累计）\",\n        \"年度毛利（年度目标）\",\n      ],\n      x: \"center\", //可设定图例在左、右、居中\n      y: \"bottom\", //可设定图例在上、下、居中\n    },\n    // 提示\n    tooltip: {\n      trigger: \"axis\",\n      formatter(params) {\n        if (params.length > 4) {\n          let arr = params.slice(0, 4);\n          let str = `<div style=\"margin: 0 8px\">\n                  <span> ${arr[2].axisValue}</span>:\n                </div>`;\n          arr.forEach(item => {\n            str += `<div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${item.color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${item.seriesName}</span>:\n                  <span>${item.value}</span>\n                </div>`;\n          });\n          return str;\n        } else {\n          return `<div style=\"margin: 0 8px\">\n                    <span> ${params[0].axisValue}</span>:\n                  </div>\n                  <div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${params[0].color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${params[0].seriesName}</span>: <span>${params[0].value}</span>\n                  </div>`;\n        }\n      },\n    },\n    // X坐标系\n    xAxis: xAxisData,\n    // Y坐标系\n    yAxis: [\n      {\n        type: \"value\",\n        name: \"毛利\",\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n      {\n        type: \"value\",\n        name: \"毛利率\",\n        min: 0,\n        max: 100,\n        axisLabel: {\n          formatter: \"{value} %\",\n        },\n        interval: 10,\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n    ],\n    // 柱形和折线数据\n    series: seriesData,\n  };\n  option && myChart.setOption(option);\n});\n</script>\n\n<style lang=\"scss\">\n#columnChart {\n  height: 700px;\n}\n</style>\n","import script from \"./columnChartDemo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./columnChartDemo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./columnChartDemo.vue?vue&type=style&index=0&id=60435982&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["xData","ref","res","blue","green","purple","yellowLine","orangeLine","constructxAxis","data","transformedData","map","month","index","Array","from","length","_","i","constructData","result","obj","fill","concat","push","onMounted","chartDom","document","getElementById","myChart","echarts","xAxisData","value","forEach","item","type","position","blueData","name","barGap","xAxisIndex","barWidth","greenData","purpleData","itemStyle","color","orangeLineData","yAxisIndex","yellowLineData","seriesData","option","legend","x","y","tooltip","trigger","formatter","params","arr","slice","str","axisValue","seriesName","xAxis","yAxis","splitLine","show","axisLine","min","max","axisLabel","interval","series","setOption","__exports__"],"sourceRoot":""}