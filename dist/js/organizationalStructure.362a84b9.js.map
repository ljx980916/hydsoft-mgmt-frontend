{"version":3,"file":"js/organizationalStructure.362a84b9.js","mappings":"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","sources":["webpack://oms-frontend/./src/api/organizationTree.js","webpack://oms-frontend/./src/views/staffStatistics/IndentedTree.vue","webpack://oms-frontend/./src/views/staffStatistics/IndentedTree.vue?c81e","webpack://oms-frontend/./src/views/staffStatistics/organizationalStructure.vue","webpack://oms-frontend/./src/views/staffStatistics/organizationalStructure.vue?f0bc"],"sourcesContent":["import request from '@/utils/request'\n\nexport function getDeptTree (parameter) {\n    return request({\n        url: '/calendarEvent/getDeptTree',\n        method: 'get',\n        params: parameter\n    })\n}","<template>\n  <div class=\"relative\">\n    <div ref=\"treeContainer\">\n    </div>\n    <div class=\"mask\"></div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nconst bgColorMap = new Map([\n  [1 , '#6587F6'],\n  [2 , '#E8ECFF'],\n  [3 , '#F6F8FC'],\n  [4 , '#FFFFFF']\n])\n\nexport default defineComponent({\n  name: 'IndentedTree',\n  props: {\n    treeData: {\n      type: Object,\n      required: true\n    },\n    width : {\n      type : Number,\n      default : 300\n    },\n    scale : {\n      type : Number,\n      default : 1\n    },\n    nodeName : {\n      type : String,\n      default : 'name'\n    }\n  },\n  mounted() {\n    this.createTree();\n  },\n  updated(){\n    this.createTree();\n  },\n  methods: {\n    createTree() {\n      let _this=this\n      // 禁用拖拽行为\n      var ElementView = joint.dia.ElementView.extend({\n        pointerdown: function () { },\n        pointermove: function () { },\n        pointerup: function () { }\n    });\n    var LinkView = joint.dia.LinkView.extend({\n        addVertex: function (evt, x, y) { },\n        removeVertex: function (endType) { },\n        pointerdown: function (evt, x, y) { }\n    });\n      const graph = new joint.dia.Graph();\n      \n      let currentY = 0;\n\n      function calculatePosition(node, level=0) {\n        let divideLen = (''+node[_this.nodeName]).split(/-/gi).length\n        let x = 0\n        x = level * 14 + (8* (divideLen-1))\n\n        // if(divideLen === 2){\n        //   x = level * 41\n        // }else if(divideLen===3 ){\n        //   x = level * 51\n        // }else if(divideLen===4 ){\n        //   x = level * 61\n        // }else{\n        //  x = level * 50 + ((divideLen===3?15:20) * (divideLen-1))\n        // }\n        node.x = x\n        node.y = currentY;\n        currentY += 40;\n        if (node.children) {\n          for (let i = 0; i < node.children.length; i++) {\n            calculatePosition(\n              node.children[i],\n              level + 1\n            );\n          }\n        }\n      }\n      // Clone the tree data to avoid modifying the original data\n      const clonedTree = JSON.parse(JSON.stringify(this.treeData));\n\n      // Calculate positions for each node in the tree\n      calculatePosition(clonedTree, 0, 0);\n      const paper = new joint.dia.Paper({\n        el: this.$refs.treeContainer,\n        model: graph,\n        width: this.width,\n        height: currentY*this.scale,\n        gridSize: 1,\n        elementView: ElementView,\n        linkView: LinkView\n      });\n      paper.scale(this.scale)\n      function createNode(node) {\n        let divideLen = (''+node[_this.nodeName]).split(/-/gi).length\n        const rect = new joint.shapes.standard.Rectangle({\n          position: { x: node.x, y: node.y },\n          size: { width: 60+((divideLen-1)*38), height: 32 },\n          attrs: {\n            body: { \n                    fill: bgColorMap.get(divideLen) || 'lightblue', \n                    stroke: '#E0E6F1',//边框颜色\n                    'stroke-width': 1,//边框大小 \n                  },\n            label: { text: node[_this.nodeName],fill : divideLen===1?\"#F5ECFE\":\"#778092\",'font-size': 12,textVerticalAnchor: '0.4em' },\n          }\n        });\n        graph.addCell(rect);\n\n        if (node.children) {\n          for (let i = 0; i < node.children.length; i++) {\n            const child = createNode(node.children[i]);\n\n            const link = new joint.shapes.standard.Link({\n              source: { id: rect.id },\n              target: { id: child.id },\n              router: { name: 'manhattan' }\n            });\n            link.source(rect, {\n                selector: 'body',\n                anchor: {\n                    name: 'bottomLeft',\n                    args: {\n                        dx: 10,\n                        dy: 0\n                    }\n                }\n            });\n            link.attr({\n                line: {\n                    stroke: '#E0E6F1',\n                    strokeWidth: 1,\n                    sourceMarker: {\n                        'type': 'path',\n                        'stroke': 'transparent',\n                        'fill': 'transparent',\n                        'd': 'M 10 -5 0 0 10 5 Z'\n                    },\n                    targetMarker: {\n                        'type': 'path',\n                        'stroke': 'transparent',\n                        'fill': 'transparent',\n                        'd': 'M 10 -5 0 0 10 5 Z'\n                    }\n                }\n            });\n            graph.addCell(link);\n          }\n        }\n\n        return rect;\n      }\n\n      createNode(clonedTree);\n    }\n  }\n})\n</script>\n\n<style scoped>\n.relative{\n  position: relative;\n}\n.mask {\n  position:absolute;\n  left: 0;\n  top:0;\n  right:0;\n  bottom:0;\n  z-index: 1;\n}\n</style>\n","import { render } from \"./IndentedTree.vue?vue&type=template&id=16f71d42&scoped=true\"\nimport script from \"./IndentedTree.vue?vue&type=script&lang=js\"\nexport * from \"./IndentedTree.vue?vue&type=script&lang=js\"\n\nimport \"./IndentedTree.vue?vue&type=style&index=0&id=16f71d42&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16f71d42\"]])\n\nexport default __exports__","<template>\n    <div class=\"defaultPadding relative\" ref=\"treeContainerRef\">\n        <div class=\"radio-group-absolute\">\n            <a-radio-group type=\"button\" v-show=\"sourceData.length\" v-model:model-value=\"currentPage\" @change=\"handleRadioChange\">\n                <a-radio value=\"tree\">树状</a-radio>\n                <a-radio value=\"list\">列表</a-radio>\n            </a-radio-group>\n        </div>\n        <div v-show=\"currentPage === 'tree'\" :class=\"['treeBox',treeLoading && 'flex-center-h100']\">\n            <a-spin v-if=\"treeLoading\" :loading=\"treeLoading\" dot tip=\"数据正在加载中...\" class=\"spin\">\n            </a-spin>\n            <vue3-tree-org\n                v-else\n                :data=\"depTreeInfo.data\"\n                :collapsable=\"false\"\n                :horizontal=\"false\"\n                :scalable=\"false\"\n                :draggable=\"false\"\n                :define-menus=\"null\"\n                :node-draggable=\"false\"\n                :default-expand-level=\"Infinity\"\n                :label-class-name=\"labelClassNameFn\"\n                :toolBar=\"{ scale: false, restore: false, expand: false, zoom: false, fullscreen: false }\"\n            >\n                <!-- 自定义节点内容 -->\n                <template v-slot=\"{node}\">\n                    <div v-if=\"node.$$data.isSubdivision\">\n                        <indented-tree \n                            :treeData=\"sourceData.filter(item=>item.deptName === node.$$data.dept)[0]\" \n                            nodeName=\"deptName\"\n                            :width=\"depTreeInfo.width\"\n                            :scale=\"depTreeInfo.scale\" \n                        />\n                    </div>\n                    <div class=\"tree-org-node__text node-label\" v-else>\n                        {{ node.label }}\n                    </div>\n                </template>\n            </vue3-tree-org>\n        </div>\n        <div v-show=\"currentPage === 'list'\">\n            <div class=\"m-b-20\">\n                <span>BG筛选 :  &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" class=\"m-r-70\" v-model:model-value=\"listTabs\" @change=\"handleListTabsChange\">\n                    <a-radio value=\"all\">全部</a-radio>\n                    <a-radio v-for=\"(item,i) of sourceData\" :value=\"item.deptName\">{{ item.deptName }}</a-radio>\n                </a-radio-group>\n                <span>展开至 : &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" v-model:model-value=\"expandTabs\" @change=\"handleExpandTabsChange\">\n                    <a-radio value=\"level1\">一级部门</a-radio>\n                    <a-radio value=\"level2\">二级部门</a-radio>\n                    <a-radio value=\"all\">末级部门</a-radio>\n                </a-radio-group>\n            </div>\n            <a-table\n                :columns=\"tableInfo.columns\"\n                :data=\"tableInfo.data\"\n                :bordered=\"{cell:true}\"\n                column-resizable\n                :scroll=\"{ maxHeight: tableInfo.maxHeight }\"\n                :scrollbar=\"false\"\n                :pagination=\"false\"\n                :expanded-keys=\"tableInfo.defaultExpandedKeys\"\n                :loading=\"tableInfo.loading\"\n                ref=\"tableRef\"\n                @expanded-change=\"expandedChange\"\n                >\n            </a-table>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref, nextTick, shallowRef, computed } from 'vue';\nimport { getDeptTree } from '../../api/organizationTree'\nimport IndentedTree from './IndentedTree.vue'\nimport { dataAddKey,toInteger } from '../../utils/util'\n\nconst treeContainerRef = ref(null)\nconst tableRef = ref(null);\nconst treeRoot = {\n  id:1,\n  label:\"慧博云通\",\n  isSubdivision : false,\n  style:{\n    \"color\":\"#FFFFFF\",\n    \"background\":\"#5370FF\",\n    width:\"190px\",\n    \"letter-spacing\":\".2em\",\n    'font-size':\"13px\",\n    height : \"30px\",\n    \"line-height\": \"10px\"\n },\n  children : []\n}\nconst depTreeInfo = reactive({\n    data : {},\n    width : 304,\n    scale : 1\n})\nconst currentPage = ref('tree')\nconst handleRadioChange = val=>{\n    currentPage.value = val\n    let tree = treeContainerRef.value\n    if(val === 'list'){\n        nextTick(()=>{\n            if(tableRef.value && tableInfo.maxHeight === '600px'){\n                let head = tableRef.value.$el;\n                let innerHeight = window.innerHeight;\n                let elHeight = head.getBoundingClientRect().top;\n                tableInfo.maxHeight = innerHeight - elHeight - 30 + \"px\";\n            }\n        })\n    }\n}\nconst listTabs = ref('all')\nconst handleListTabsChange = val=>{\n    listTabs.value = val\n    tableInfo.data = filterData(sourceData.value,val)\n}\nconst labelClassNameFn = (record)=>{\n    if(record.id === 1)return 'rootNode'\n}\nconst expandTabs = ref('level1')\nconst handleExpandTabsChange = val=>{\n    expandTabs.value = val\n    tableInfo.defaultExpandedKeys = filterLevelkeys(sourceData.value,val)\n}\nconst tableInfo = reactive({\n    columns : [\n        {\n            title: '部门名称',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            width : 270    \n        },\n        {\n            title: '总裁室分管执行副总裁',\n            dataIndex: 'evpName',\n            key: 'evpName',\n            width : 206\n        },\n        {\n            title: '业务主管副总裁',\n            dataIndex: 'bgName',\n            key: 'bgName',\n            width : 156\n        },\n        {\n            title: '部门负责人',\n            dataIndex: 'empName',\n            key: 'empName',\n            width : 170\n        },\n        {\n            title: '部门总人数',\n            dataIndex: 'deptTotal',\n            key: 'deptTotal',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = record[column.dataIndex]\n                if(typeof(val) === 'number'){\n                    if(val === 0){\n                        return '-'\n                    }\n                    return <span innerHTML={toInteger(val, 0, false)}></span>\n                }\n                return val\n            }    \n        },\n        {\n            title: '部门创建日期',\n            dataIndex: 'createTime',\n            key: 'createTime',\n            width : 258\n        }\n    ],\n    data : [],\n    maxHeight : '600px',\n    loading :false,\n    defaultExpandedKeys : []\n})\n\nconst expandedChange = rowKeys => {\n  tableInfo.defaultExpandedKeys = rowKeys;\n};\nlet sourceData = shallowRef([])\n//树根节点样式\nlet rootNodeStyleWidth=ref('190px'),\n    rootNodeStyleFontSize=ref('13px'),\n    rootNodeStyleHeigt=ref('30px'),\n    rootNodeStyleLineHeight=ref('10px')\n\nconst treeLoading = ref(false)\nconst asyncDrawGraph = async() => {\n  treeLoading.value = true\n  let depTreeData = await getDeptTree()\n  if(depTreeData.code === '200'){\n    let filterData = depTreeData.data.filter(item=>(''+item.deptName).startsWith('BG'))\n    let expandedKeys = []\n    filterData.forEach((item,index)=>{\n      treeRoot.children.push({\n        id: item.deptName,\n        label:item.deptName, \n        isSubdivision : true,\n        dept : item.deptName,\n      })\n      item.id=index\n      expandedKeys.push(item.id)\n    })\n    sourceData.value = filterData\n    dataAddKey(filterData,\"key\",\"id\") \n    tableInfo.data = filterData\n    tableInfo.defaultExpandedKeys = expandedKeys\n    let tree = treeContainerRef.value\n    let getContentWidth = tree && parseInt(getComputedStyle(tree).width)\n    if(filterData.length >2){\n        let constrain = Math.floor(getContentWidth/filterData.length)\n        depTreeInfo.width = constrain - 20\n        let scale = +(depTreeInfo.width/242).toFixed(2)\n        depTreeInfo.scale = scale\n        //设置树根节点跟随放大比例放大\n        rootNodeStyleWidth.value = Math.ceil(190*scale)+'px'\n        rootNodeStyleFontSize.value= Math.ceil(13*scale)+'px'\n        rootNodeStyleHeigt.value = Math.ceil(30*scale)+'px'\n        rootNodeStyleLineHeight.value = Math.ceil(10*scale)+'px'\n    }\n    depTreeInfo.data = treeRoot\n  }\n  treeLoading.value = false\n}\nonMounted(()=>{\n    asyncDrawGraph()\n})\n\nconst filterData = (arr,key)=>{\n    if(arr.length){\n        if(key === 'all'){\n            return arr\n        }else {\n            return arr.filter(item=>item.deptName === key)\n        }\n    }\n}\n\nconst filterLevelkeys = (arr,key)=>{\n    if(arr.length){\n        let expandKeys = []\n        switch (key) {\n            case 'all':\n                function getKeys(arr){\n                    arr.forEach(item=>{\n                        expandKeys.push(item.key)\n                        if(item?.children?.length){\n                            getKeys(item.children)\n                        }\n                    })\n                }\n                getKeys(arr)\n                break;\n            case 'level1' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                })\n                break;\n            case 'level2' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                    if(item?.children?.length){\n                       item.children.forEach(jtem=>{\n                        expandKeys.push(jtem.key)\n                       })\n                    }\n                })\n                break;\n            default:\n                expandKeys = []\n                break;\n        }\n        return expandKeys\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.relative{\n    position: relative;\n    height: 90%;\n}\n.spin{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n.radio-group-absolute{\n    position: absolute;\n    top: 26px;\n    right: 30px;\n    z-index: 1;\n}\n.radio-group-fixed{\n    position: fixed;\n    right: 60px;\n    z-index: 1;\n}\n.flex-center-h100{\n    display: flex;\n    justify-content: center; \n    align-items: center; \n    height: 100%;\n}\n.treeBox {\n  :deep(.zm-tree-org .zoom-container){\n    overflow: visible;\n  }\n  :deep(.zm-tree-org .zm-draggable) {\n    position: static;\n    transform: translateY(0) !important;\n  }\n  :deep(.tree-org-node__children .tree-org-node .tree-org-node__content){\n    left: -10%;\n  }\n  :deep(.tree-org-node.is-leaf .tree-org-node__content .tree-org-node__inner){ \n    box-shadow: none;\n  }\n  :deep(.tree-org-node__children:before){\n    border-color: #E0E6F1;\n  }\n  :deep(.tree-org-node:not(:first-child):before, .tree-org-node:not(:last-child):after){\n    border-color: #E0E6F1;\n  }\n  :deep(.tree-org-node:after){\n    border-color: #E0E6F1;\n  }\n  :deep(.rootNode){\n    width : v-bind(rootNodeStyleWidth) !important;\n    height : v-bind(rootNodeStyleHeigt) !important;\n    font-size : v-bind(rootNodeStyleFontSize) !important;\n    display : flex;\n    justify-content:center;\n    align-items : center;\n  }\n  :deep(.tree-org-node:after){\n    left: 0;\n    width: 100%;\n  }\n  :deep(.tree-org-node__children .tree-org-node:last-child){\n    position: absolute;\n    right: 0;\n    transform: translateX(100%);\n  }\n  :deep(.tree-org-node__children .tree-org-node:last-child:before){\n    width: 0;\n  }\n  \n}\n.m-r-70{\n    margin-right: 70px;\n}\n</style>","import script from \"./organizationalStructure.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./organizationalStructure.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./organizationalStructure.vue?vue&type=style&index=0&id=09c5297f&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09c5297f\"]])\n\nexport default __exports__"],"names":["getDeptTree","parameter","request","url","method","params","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","bgColorMap","Map","defineComponent","name","props","treeData","type","Object","required","width","Number","default","scale","nodeName","String","mounted","this","createTree","updated","methods","_this","ElementView","joint","dia","extend","pointerdown","pointermove","pointerup","LinkView","addVertex","evt","x","y","removeVertex","endType","graph","Graph","currentY","calculatePosition","node","level","divideLen","split","length","children","i","clonedTree","JSON","parse","stringify","paper","Paper","el","$refs","treeContainer","model","height","gridSize","elementView","linkView","createNode","rect","shapes","standard","Rectangle","position","size","attrs","body","fill","get","stroke","label","text","textVerticalAnchor","addCell","child","link","Link","source","id","target","router","selector","anchor","args","dx","dy","attr","line","strokeWidth","sourceMarker","targetMarker","__exports__","render","treeContainerRef","tableRef","treeRoot","isSubdivision","style","depTreeInfo","reactive","data","currentPage","handleRadioChange","val","value","nextTick","tableInfo","maxHeight","head","$el","innerHeight","window","elHeight","getBoundingClientRect","top","listTabs","handleListTabsChange","filterData","sourceData","labelClassNameFn","record","expandTabs","handleExpandTabsChange","defaultExpandedKeys","filterLevelkeys","columns","title","dataIndex","key","cellStyle","column","toInteger","loading","expandedChange","rowKeys","shallowRef","rootNodeStyleWidth","rootNodeStyleFontSize","rootNodeStyleHeigt","rootNodeStyleLineHeight","treeLoading","asyncDrawGraph","async","depTreeData","code","filter","item","deptName","startsWith","expandedKeys","forEach","index","push","dept","dataAddKey","tree","getContentWidth","parseInt","getComputedStyle","constrain","Math","floor","toFixed","ceil","onMounted","arr","expandKeys","getKeys","jtem"],"sourceRoot":""}