{"version":3,"file":"js/lookChart.b79388a9.js","mappings":"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","sources":["webpack://oms-frontend/./src/api/lookChart.js","webpack://oms-frontend/./src/views/ringAnalyze/lookChart.vue","webpack://oms-frontend/./src/views/ringAnalyze/lookChart.vue?931d"],"sourcesContent":["import request from '@/utils/request'\n\nexport function queryYoyAnalysisDept(parameter) {\n    return request({\n        url: '/yoyAnalysis/queryYoyAnalysisDept',\n        method: 'post',\n        data: parameter\n    })\n}\n\nexport function queryYoyAnalysisChart(parameter) {\n    return request({\n        url: '/yoyAnalysis/queryYoyAnalysisChart',\n        method: 'post',\n        data: parameter\n    })\n}\n\n//部门维度环比分析看图\nexport function getDeptEcharts(parameter) {\n    return request({\n        url: '/LinkAnalysis/getDeptEcharts',\n        method: 'post',\n        data: parameter\n    })\n}\n\n//客户维度环比分析看图\nexport function getCustomerEcharts(parameter) {\n    return request({\n        url: '/LinkAnalysis/getCustomerEcharts',\n        method: 'post',\n        data: parameter\n    })\n}\n\n//项目维度环比分析看图\nexport function getProjectEchartsUsingPOST(parameter) {\n    return request({\n        url: '/LinkAnalysis/getProjectEcharts',\n        method: 'post',\n        data: parameter\n    })\n}\n// 同比分析客户维度看图\nexport function queryCustomerYoyAnalysisChart(parameter) {\n    return request({\n        url: '/yoyAnalysis/queryCustomerYoyAnalysisChart',\n        method: 'post',\n        data: parameter\n    })\n}\n// 同比分析项目维度看图\nexport function getProjectEcharts(parameter) {\n    return request({\n        url: '/yoyAnalysis/getProjectEcharts',\n        method: 'post',\n        data: parameter\n    })\n}\n\n//查询客户\nexport function getCustomer(parameter) {\n    return request({\n        url: '/LinkAnalysis/getCustomer',\n        method: 'post',\n        data: parameter\n    })\n}\n\n//查询项目\nexport function getProject(parameter) {\n    return request({\n        url: '/LinkAnalysis/getProject',\n        method: 'post',\n        data: parameter\n    })\n}\n","<template>\n    <div class=\"defaultPadding\">\n        <header class=\"flex-center\">\n            <div class=\"flex\">\n                <div class=\"m-r-90\">\n                    <span>\n                        <img :src=\"barChart\" width=\"26\" class=\"img\">\n                    </span>\n                    <a-select :style=\"{width:'192px'}\" v-model:model-value=\"barChartSelect\" @change=\"selectChange\">\n                        <a-option \n                            v-for=\"item of barChartOptions\" \n                            :key=\"item.dataIndex\"\n                            :value=\"item.dataIndex\"\n                        >\n                            {{ item.title }}\n                        </a-option>\n                    </a-select>\n                </div>\n                <div class=\"m-r-80\">\n                    <img :src=\"lineChart\" width=\"26\" class=\"img\">\n                    <a-radio-group type=\"button\" size=\"large\" v-model:model-value=\"lineChartSelect\" @change=\"selectChange\">\n                        <a-radio value=\"colNo12\">C1发薪人数</a-radio>\n                        <a-radio value=\"colNo13\">R/S/G/C2发薪人数</a-radio>\n                    </a-radio-group>\n                </div>\n                <div>\n                    <a-button type=\"primary\" @click=\"handleSwitchDept\">切换{{ sourceTypeMap[sourceType] }}</a-button>\n                </div>\n            </div>\n        </header>\n        <main>\n            <a-spin :loading=\"chartContainerLoading\" tip=\"数据加载中...\" style=\"width: 100%;\">\n                <div ref=\"chartContainerRef\" class=\"chartContainer\">\n            </div>\n            </a-spin>\n        </main>\n    </div>\n    <a-modal v-model:visible=\"switchDeptModal.visible\" width=\"650px\" title-align=\"start\">\n        <template #title>\n            <span class=\"modal-title\">切换{{ sourceTypeMap[sourceType] }}</span>\n        </template>\n        <a-spin :loading=\"switchDeptModal.loading\" style=\"width:100%\" tip=\"数据加载中...\">\n            <a-cascader-panel :options=\"switchDeptModal.options\" v-model=\"switchDeptModal.selectItem\" expand-child/>\n        </a-spin>\n        <template #footer>\n            <div style=\"text-align: center;\">\n                <a-button type=\"outline\" class=\"m-r-10\" @click=\"switchDeptModal.visible=false\">取消</a-button>\n                <a-button type=\"primary\" @click=\"handleSwitchDeptModalOK\">确定</a-button>\n            </div>\n        </template>\n    </a-modal>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref, unref,onBeforeMount } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept,queryYoyAnalysisChart,queryCustomerYoyAnalysisChart,getProjectEcharts,getCustomer,getProject} from '@/api/lookChart'\nimport { Message } from \"@arco-design/web-vue\";\nimport { getCurrentTime } from '@/utils/util'\nlet { year,month } = getCurrentTime();\nconst barChart = require('@/assets/images/barChart.svg')\nconst lineChart = require('@/assets/images/lineChart.svg')\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nlet { barChartOptions,deptId,sourceType,deptName,customerName,projectName,title,taxRate,projectId } = window.history.state\nbarChartOptions = JSON.parse(barChartOptions).filter(item=>item.title !== '发薪人数')\nconst chartContainerRef = ref(null)\nconst chartContainerLoading = ref(false)\nlet sourceTypeMap = {\n    dept : '部门',\n    customer : '客户',\n    project : '项目'\n}\nlet myChart\nconst barChartSelect = ref('colNo2')\nconst lineChartSelect = ref('colNo12')\nconst selectChange =()=>{\n    updateData()\n}\nconst switchDeptModal = reactive({\n    visible : false,\n    selectItem : '',\n    options : [],\n    loading : false\n})\nconst handleSwitchDept = ()=>{\n    switchDeptModal.visible = true\n    if(switchDeptModal.options.length === 0){\n        switch (sourceType) {\n            case 'dept':\n                getDeptData()\n                break;\n            case 'customer':\n                getAllCustomerData()\n                break;\n            case 'project':\n                getAllProjecttData()\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst getDeptData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            interval : month-1\n        }\n        queryYoyAnalysisDept(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.deptId\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllCustomerData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : month-1\n        }\n        getCustomer(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.title\n                        item.label = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllProjecttData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : month-1\n        }\n        getProject(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.label = item.title\n                        item.value = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            item.label = item.projectName\n                            item.value = item.projectName\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\n//部门数据\nconst getChartData = (id)=>{\n    let params = {\n        deptId : id || deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        tagKey : \"yoyAnalysis\",\n        interval : month-1,\n    }\n    chartContainerLoading.value = true\n    queryYoyAnalysisChart(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//客户数据\nconst getCustomerChart = (name)=>{\n    let params = {\n        deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        interval : month-1,\n        tagKey:\"yoyAnalysis2\",\n        title : name || title,\n    }\n    chartContainerLoading.value = true\n    queryCustomerYoyAnalysisChart(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//项目数据\nconst getProjectEchart = (obj)=>{\n    let params = {\n        deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        interval : month-1,\n        title : obj?.projectName || projectName,\n        tagKey:\"yoyAnalysis3\",\n        taxRate : obj?.taxRate || taxRate,\n        projectId : obj?.projectId || projectId\n    }\n    chartContainerLoading.value = true\n    getProjectEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//遍历树结构按条件找对应的数据\nfunction getOptionItem (arr,searchObj){\n    let currentSelectItem = {}\n    function searchItem(arr){\n        arr.forEach(item=>{\n            Object.keys(searchObj).forEach(key=>{\n                if(item[key] === searchObj[key]){\n                    currentSelectItem = item\n                }\n            })\n            if(item?.children?.length){\n                searchItem(item.children)\n            }\n        })\n    }\n    searchItem(arr)\n    return currentSelectItem\n}\n\nconst handleSwitchDeptModalOK = ()=>{\n    switchDeptModal.visible = false\n    if(switchDeptModal.selectItem){\n        let item\n        switch (sourceType) {\n            case 'dept':\n             item = getOptionItem(switchDeptModal.options,{ deptId : switchDeptModal.selectItem })\n            $bus.emit(\"updateStructure\", [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: item.deptName,\n                    isBack : true\n                },\n            ]);\n                getChartData(item.deptId)\n                break;\n            case 'customer':\n                 item = getOptionItem(switchDeptModal.options,{ title : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.title,\n                        isBack : true\n                    },\n                ]);\n                getCustomerChart(item.title)\n                break;\n            case 'project':\n                 item = getOptionItem(switchDeptModal.options,{ projectName : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    { type: \"text\", color: \"#333\", msg:  `${item.groupCustomerName}-${customerName}`},\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.projectName,\n                        isBack : true\n                    },\n                ]);\n                let { finPcode ,taxRate,projectName } = item\n                getProjectEchart({\n                    projectId :finPcode,\n                    taxRate,\n                    projectName\n                })\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst updateData = ()=>{\n    let breadList\n    switch (sourceType) {\n        case 'dept':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: deptName,\n                    isBack : true\n                },\n            ]\n            getChartData()\n            break;\n        case 'customer':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: title,\n                    isBack : true\n                },\n            ]\n            getCustomerChart()\n            break;\n        case 'project':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                { type: \"text\", color: \"#333\", msg:  `${title}-${customerName}`},\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: projectName,\n                    isBack : true\n                },\n            ]\n            getProjectEchart()\n            break;\n        default:\n            break;\n    }\n    $bus.emit(\"updateStructure\", breadList);\n}\nonBeforeMount(()=>{\n    updateData()\n})\n\nconst chartOptions = {\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                    color: '#999'\n                }\n            }\n        },\n        grid: {\n            left : '15%',\n        },\n        xAxis: [\n            {\n                type: 'category',\n                axisTick: {\n                        alignWithLabel: true\n                    },\n                data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul','Aug','Sep','Oct','Nov','Dec'],\n            },\n        ],\n        yAxis: [\n            {\n                type: 'value',\n                position: 'right',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                min : 10,\n                max : 100,\n                type: 'value',\n                position: 'left',\n                offset: 80,\n                boundaryGap: [0, 0.01],\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}%'\n                },\n                splitLine:{show: false}\n            },\n            {\n                type: 'value',\n                position: 'left',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            }\n        ],\n        series: []\n    }\nonMounted(()=>{\n    myChart = echarts.init(unref(chartContainerRef));\n    chartOptions && myChart.setOption(chartOptions);\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.img {\n    vertical-align: middle;\n    margin: 0 12px;\n}\n.m-r-90{\n    margin-right: 90px;\n}\n.m-r-80{\n    margin-right: 80px;\n}\n.chartContainer{\n    height: 600px;\n}\n.modal-title {\n  color: #5a5a5a;\n  font-size: 14px;\n  font-weight: bold;\n}\n</style>","import script from \"./lookChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./lookChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./lookChart.vue?vue&type=style&index=0&id=579e3a39&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-579e3a39\"]])\n\nexport default __exports__"],"names":["queryYoyAnalysisDept","parameter","request","url","method","data","queryYoyAnalysisChart","getDeptEcharts","getCustomerEcharts","getProjectEchartsUsingPOST","queryCustomerYoyAnalysisChart","getProjectEcharts","getCustomer","getProject","year","month","getCurrentTime","barChart","require","lineChart","$bus","getCurrentInstance","appContext","config","globalProperties","barChartOptions","deptId","sourceType","deptName","customerName","projectName","title","taxRate","projectId","window","history","state","JSON","parse","filter","item","chartContainerRef","ref","chartContainerLoading","myChart","sourceTypeMap","dept","customer","project","barChartSelect","lineChartSelect","selectChange","updateData","switchDeptModal","reactive","visible","selectItem","options","loading","handleSwitchDept","length","getDeptData","getAllCustomerData","getAllProjecttData","params","interval","then","res","code","recursionDelChildren","arr","forEach","value","children","Message","error","message","catch","err","finally","label","getChartData","id","barType","unref","lineType","tagKey","lastYear","thisYear","chartOptions","legend","bottom","series","name","type","yAxisIndex","itemStyle","color","bar","line","setOption","getCustomerChart","getProjectEchart","obj","getOptionItem","searchObj","currentSelectItem","searchItem","Object","keys","key","handleSwitchDeptModalOK","emit","msg","isBack","groupCustomerName","finPcode","breadList","onBeforeMount","tooltip","trigger","axisPointer","crossStyle","grid","left","xAxis","axisTick","alignWithLabel","yAxis","position","alignTicks","axisLine","show","lineStyle","axisLabel","formatter","splitLine","min","max","offset","boundaryGap","onMounted","echarts","__exports__"],"sourceRoot":""}