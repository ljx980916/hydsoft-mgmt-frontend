{"version":3,"file":"js/menuManage.6ed66cef.js","mappings":"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","sources":["webpack://mgmt-frontend/./src/views/system/constColumns.js","webpack://mgmt-frontend/./src/components/tableContainer.vue","webpack://mgmt-frontend/./src/components/tableContainer.vue?de49","webpack://mgmt-frontend/./src/views/system/menuManage.vue","webpack://mgmt-frontend/./src/views/system/menuManage.vue?bf75"],"sourcesContent":["// 用户管理表头\nexport const userListColumns = [\n  {\n    title: '工号',\n    dataIndex: 'workNo',\n  }, \n  {\n    title: '姓名',\n    dataIndex: 'name',\n    slotName : 'name',\n  },\n  {\n    title: '所属部门',\n    dataIndex: 'deptName',\n  },\n  {\n    title: '邮箱',\n    dataIndex: 'email',\n  }, \n  {\n    title: '账户状态',\n    dataIndex: 'flag',\n    slotName:'flag_view',\n        \n  },\n  {\n    title: '操作',\n    dataIndex: 'action',\n    slotName : 'action',\n  }\n];\n// 菜单管理表头\nexport const menuListColumns= [\n    {\n      title: '菜单名称',\n      dataIndex: 'name',\n      key: 'name',\n      width: '20%'\n    },\n    {\n      title: '图标',\n      dataIndex: 'icon',\n      key: 'icon',\n    },\n    {\n      title: '类型',\n      dataIndex: 'type',\n      key: 'type',\n      slotName : 'type_view'\n    },\n    {\n      title: '排序号',\n      dataIndex: 'sort',\n      key: 'sort',\n    },\n    {\n      title: 'URL',\n      dataIndex: 'url',\n      key: 'url',\n    },\n    {\n      title: '授权标识',\n      dataIndex: 'perms',\n      key: 'perms',\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      key: 'action',\n\n      slotName : 'action'\n    }\n  ]\n// 角色管理表头\nexport const roleListColumns = [\n    {\n        title: '角色名称',\n        dataIndex: 'name',\n      },\n      {\n        title: '备注',\n        dataIndex: 'remarks',\n        \n      },\n      {\n        title: '角色编码',\n        dataIndex: 'code',\n        \n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        width : 200\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        slotName : 'action'\n      }\n]","<template>\n  <div>\n    <div>\n      <div class=\"m-b-20\">\n        <div class=\"flex-between\" style=\"height: 40px;\">\n          <a-radio-group type=\"button\" size=\"large\" :model-value=\"props.chekedValue\" @change=\"radioChange\">\n            <a-radio v-for=\"item of props.tabs\" :value=\"item.key\">{{ item.name }}</a-radio>\n          </a-radio-group>\n          <slot></slot>\n        </div>\n        <div>\n          <div class=\"tool-grid\">\n            <!-- 只看我的 -->\n            <div v-if=\"props.menuName === 'USER'\">\n              <a-switch :value=\"switchStatus\" @change=\"handleSwitch\">\n                <template #checked>ON</template>\n                <template #unchecked>OFF</template>\n              </a-switch>\n              <span>只看我的</span>\n            </div>\n            <!-- 导出excel -->\n            <a-button type=\"primary\" v-if=\"props.menuName === 'USER'\">\n              <template #icon>\n                <icon-download />\n              </template>\n              <template #default>导出excel</template>\n            </a-button>\n            <!-- 配置列 -->\n            <a-button class=\"config\" type=\"primary\" @click=\"handleSetColumns\" v-if=\"props.menuName === 'USER'\">\n              <template #icon>\n                <icon-home />\n              </template>\n              <template #default>配置列</template>\n            </a-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 表格内容 -->\n    <div>\n      <a-table\n        :columns=\"(props.tableColumns.length && props.tableColumns) || tableInfo.tableColumns\"\n        :data=\"(props.tableData.length && props.tableData) || tableInfo.tableData\"\n        column-resizable\n        :bordered=\"false\"\n        :scroll=\"{ x: '100%', y: props.scrollY }\"\n        :scrollbar=\"false\"\n        :loading=\"props.loading\"\n        :pagination=\"{\n          total: paginationTotal,\n          current: paginationCurrent,\n          pageSize: paginationPageSize,\n          showTotal: true,\n          showPageSize: true,\n          showJumper: true,\n          onChange: paginationChange,\n          onPageSizeChange: paginationPageSizeChange,\n        }\"\n      >\n        <template #type_view=\"{ record }\">\n          <div>{{ record.type === 0 ? \"目录\" : record.type === 1 ? \"菜单\" : \"按钮\" }}</div>\n        </template>\n        <template #role_view=\"{ record }\">\n          <div v-for=\"(item, i) in record.roles\" :key=\"i\">{{ item.name }}</div>\n        </template>\n        <template #flag_view=\"{ record }\">\n          <span class=\"red\" v-if=\"record.flag === 0\">禁用</span>\n          <span class=\"green\" v-if=\"record.flag === 1\">启用</span>\n        </template>\n        <template #action=\"{ record }\">\n          <a-popconfirm content=\"你确定要启用这个用户吗?\" type=\"error\" @ok=\"handleUpdateFlag(record)\">\n            <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 0\">启用</a-button>\n          </a-popconfirm>\n          <a-divider v-if=\"props.menuName == 'user' && record.flag === 0\" direction=\"vertical\" />\n          <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 0\" style=\"color: #999999\">禁用</a-button>\n          <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 1\" style=\"color: #999999\">启用</a-button>\n          <a-divider v-if=\"props.menuName == 'user' && record.flag === 1\" direction=\"vertical\" />\n          <a-popconfirm content=\"你确定要禁用这个用户吗?\" type=\"error\" @ok=\"handleUpdateFlag(record)\">\n            <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 1\">禁用</a-button>\n          </a-popconfirm>\n          <!-- 查看 -->\n          <a-button type=\"text\" v-if=\"props.menuName == 'USER'\" @click=\"handleDetail(record, 'view')\">查看</a-button>\n          <a-divider v-if=\"props.menuName == 'user'\" direction=\"vertical\" />\n          <!-- 编辑 -->\n          <a-button\n            v-if=\"permissions.includes('menu:edit') && record.code !== 'admin'\"\n            type=\"text\"\n            @click=\"handleEdit(record, 'edit')\"\n          >\n            编辑\n          </a-button>\n          <a-divider\n            v-if=\"props.menuName == 'menu' || (props.menuName == 'role' && record.code !== 'admin')\"\n            direction=\"vertical\"\n          />\n          <!-- 删除 -->\n          <a-popconfirm content=\"确定要删除吗?\" type=\"error\" @ok=\"handleDeleteMenu(record)\">\n            <a-button\n              type=\"text\"\n              v-if=\"\n                permissions.includes('menu:delete') &&\n                (props.menuName == 'menu' || (props.menuName == 'role' && record.code !== 'admin'))\n              \"\n            >\n              删除\n            </a-button>\n          </a-popconfirm>\n        </template>\n      </a-table>\n    </div>\n    <!-- 表单数据 -->\n    <a-modal v-model:visible=\"modalVisible\" title=\"选择表格项\">\n      <a-checkbox-group @change=\"columnSelected\" v-model=\"defaultCheckList\">\n        <a-checkbox v-for=\"item of setColumns\" :key=\"item.dataIndex\" :value=\"item.dataIndex\">\n          {{ item.title }}\n        </a-checkbox>\n      </a-checkbox-group>\n      <template #footer>\n        <a-button type=\"primary\" @click=\"columnOK\">确定</a-button>\n      </template>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref } from \"vue\";\nimport { userListColumns } from \"../views/system/constColumns\";\nimport { Message } from \"@arco-design/web-vue\";\nimport { useMenuStore } from \"../store/index\";\nconst permissions = useMenuStore().getPermission;\nconst props = defineProps({\n  tabs: {\n    type: Array,\n    default: () => [],\n  },\n  chekedValue: {\n    type: String,\n    default: \"\",\n  },\n  // 表头\n  tableColumns: {\n    type: Array,\n    default: () => [],\n  },\n  // 表单数据\n  tableData: {\n    type: Array,\n    default: () => [],\n  },\n  // 菜单名称(根据菜单名称判断显示指定按钮)\n  menuName: {\n    type: String,\n    default: \"\",\n  },\n  loading : {\n    type : Boolean,\n    default : false\n  },\n  scrollY : {\n    type : String,\n    default : '600px'\n  },\n  setColumns: {\n    type: Array,\n    default: () => [],\n  },\n  switchStatus: {\n    type: Boolean,\n    default: false,\n  },\n  exportExcel: {\n    type: String,\n    default: \"\",\n  },\n  paginationTotal: {\n    type: Number,\n    default: 10,\n  },\n  paginationCurrent: {\n    type: Number,\n    default: 1,\n  },\n  paginationPageSize: {\n    type: Number,\n    default: 10,\n  },\n});\n// 表头信息\nconst tableInfo = reactive({\n  tableColumns: [\n    {\n      title: \"自定义列1\",\n      dataIndex: \"customColumn1\",\n      width: 200,\n    },\n    {\n      title: \"自定义列2\",\n      dataIndex: \"customColumn2\",\n      width: 200,\n    },\n    {\n      title: \"自定义列3\",\n      dataIndex: \"customColumn3\",\n      width: 200,\n    },\n    {\n      title: \"自定义列4\",\n      dataIndex: \"customColumn4\",\n      width: 200,\n    },\n    {\n      title: \"自定义列5\",\n      dataIndex: \"customColumn5\",\n      width: 200,\n    },\n    {\n      title: \"自定义列6\",\n      dataIndex: \"customColumn6\",\n      width: 200,\n    },\n  ],\n  tableData: [],\n});\nconst emit = defineEmits([\n  \"switchClick\",\n  \"paginationCurrentChange\",\n  \"paginationPageSizeChange\",\n  \"handleEdit\",\n  \"handleDeleteMenu\",\n  \"handleUpdateFlag\",\n  \"columnOK\",\n  \"radioChange\",\n]);\nconst modalVisible = ref(false);\nconst defaultCheckList = ref([]);\nconst checkedValues = ref([]);\nconst userTableColumns = ref(userListColumns);\nlet actionColumn = userListColumns.filter(item => item.dataIndex !== \"action\") || [];\n// 打开配置列\nconst handleSetColumns = () => {\n  modalVisible.value = true;\n};\n// 配置列多选框更改\nconst columnSelected = values => {\n  checkedValues.value = values;\n};\n// 打开配置列勾选表格中已有的表头\nconst setTableColumns = () => {\n  let cachColumns = JSON.parse(localStorage.getItem(\"userListColumns\"));\n  if (cachColumns) {\n    userTableColumns.value = cachColumns;\n    defaultCheckList.value = cachColumns.map(item => item.dataIndex);\n  } else {\n    var selectedColumsArr = [];\n    actionColumn.forEach(item => {\n      selectedColumsArr.push(item.dataIndex);\n      defaultCheckList.value = selectedColumsArr;\n    });\n  }\n};\nsetTableColumns();\n// 配置列确认\nconst columnOK = () => {\n  if (defaultCheckList.value.length === 1 && defaultCheckList.value[0] === \"action\") {\n    return Message.error(\"至少选择一项\");\n  } else {\n    emit(\"columnOK\", defaultCheckList.value);\n    modalVisible.value = false;\n  }\n};\n// 只看我的\nconst handleSwitch = bool => {\n  emit(\"switchClick\", !bool);\n};\n// 更改当前页\nconst paginationChange = current => {\n  emit(\"paginationCurrentChange\", current);\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  emit(\"paginationPageSizeChange\", pageSize);\n};\n// 编辑\nconst handleEdit = (record, type) => {\n  emit(\"handleEdit\", record, type);\n};\n// 删除\nconst handleDeleteMenu = record => {\n  emit(\"handleDeleteMenu\", record);\n};\n// 查看\nconst handleDetail = record => {\n  emit(\"handleDetail\", record);\n};\n// 更改状态\nconst handleUpdateFlag = record => {\n  emit(\"handleUpdateFlag\", record);\n};\n//tab切换\nconst radioChange = val => {\n  emit(\"radioChange\", val);\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.header-grid {\n  display: grid;\n  grid-template-columns: 10fr 6fr;\n  gap: 20px;\n}\n.tool-grid {\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  column-gap: 15px;\n  row-gap: 20px;\n  grid-auto-flow: row;\n}\n.m-b-20 {\n  margin-bottom: 20px;\n}\n.config {\n  position: absolute;\n  width: 100px;\n  top: 210px;\n  height: 36px;\n  right: 70px;\n}\n</style>\n","import script from \"./tableContainer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./tableContainer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./tableContainer.vue?vue&type=style&index=0&id=53477c82&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-53477c82\"]])\n\nexport default __exports__","<template>\n  <div class=\"defaultPadding\">\n    <!-- 添加菜单 -->\n    <a-button type=\"primary\" v-if=\"permissions.includes('menu:add')\" @click=\"handleAddMenu\">\n      <template #icon>\n        <icon-plus />\n      </template>\n      <template #default>添加菜单</template>\n    </a-button>\n    <!-- 表格内容 -->\n    <TableContainer\n      class=\"m-t-20\"\n      column-resizable\n      :scroll=\"{ y: 600 }\"\n      :scrollbar=\"false\"\n      :paginationTotal=\"dataContent.pagination.total\"\n      :paginationPageSize=\"dataContent.pagination.pageSize\"\n      :paginationCurrent=\"dataContent.pagination.pageNum\"\n      :loading=\"dataContent.loading\"\n      :tableColumns=\"dataContent.columns\"\n      :table-data=\"dataContent.dataSource\"\n      :menu-name=\"dataContent.menuName\"\n      @handleEdit=\"handleEditMenu\"\n      @handleDeleteMenu=\"handleDeleteMenu\"\n      @paginationCurrentChange=\"paginationCurrentChange\"\n      @paginationPageSizeChange=\"paginationPageSizeChange\"\n    ></TableContainer>\n    <!-- 添加菜单表单 -->\n    <a-modal :mask=\"true\" v-model:visible=\"addMenuModal\" title=\"添加菜单\" @ok=\"handleFormOk\">\n      <a-form :model=\"form\">\n        <a-form-item field=\"类型\" label=\"类型\">\n          <a-radio-group v-model=\"form.type\">\n            <a-radio :value=\"0\">目录</a-radio>\n            <a-radio :value=\"1\">菜单</a-radio>\n            <a-radio :value=\"2\">按钮</a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item field=\"菜单名称\" label=\"菜单名称\">\n          <a-input type=\"text\" placeholder=\"请输入菜单名称\" v-model=\"form.name\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"上级菜单\" label=\"上级菜单\">\n          <a-cascader\n            v-model=\"form.parentId\"\n            :options=\"casList\"\n            :expandTrigger=\"'hover'\"\n            check-strictly\n            placeholder=\"请选择上级菜单\"\n          />\n        </a-form-item>\n        <a-form-item field=\"菜单URL\" label=\"菜单URL\">\n          <a-input type=\"text\" placeholder=\"请输入菜单路径\" v-model=\"form.url\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"授权标识\" label=\"授权标识\">\n          <a-input type=\"text\" placeholder=\"请输入授权标识\" v-model=\"form.perms\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"排序号\" label=\"排序号\">\n          <a-input-number placeholder=\"请输入排序号\" v-model=\"form.sort\"></a-input-number>\n        </a-form-item>\n        <a-form-item field=\"图标\" label=\"图标\">\n          <a-input type=\"text\" placeholder=\"请输入图标\" v-model=\"form.icon\"></a-input>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref, toRaw, onBeforeMount } from \"vue\";\nimport { useMenuStore } from \"../../store/index\";\nimport { menuListColumns } from \"./constColumns\";\nimport { list, addList, editMenu, delMenu } from \"@/api/menu\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nimport { Message } from \"@arco-design/web-vue\";\nimport TableContainer from \"@/components/tableContainer.vue\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nconst menuStore = useMenuStore()\nconst permissions = menuStore.getPermission;\nonBeforeMount(() => {\n  $bus.emit(\"updateStructure\", [{ type: \"text\", color: \"#333\", msg: \"菜单列表\" }]);\n});\n// 表格配置信息\nconst dataContent = reactive({\n  columns: menuListColumns,\n  dataSource: [],\n  loading: false,\n  pagination: {\n    pageNum: 1,\n    pageSize: 10,\n    total: 0,\n  },\n  menuName: \"menu\",\n});\nconst addMenuModal = ref(false);\nconst form = reactive({\n  type: \"\",\n  name: \"\",\n  parentId: \"\",\n  url: \"\",\n  perms: \"\",\n  sort: undefined,\n  icon: \"\",\n});\nconst menuId = ref(\"\");\nconst casList = ref([]);\nconst treeData = arr => {\n  const treeArr = [];\n  arr.forEach(item => {\n    let obj = { label: item.name, value: item.id };\n    if (item.children && item.children.length) {\n      obj.children = treeData(item.children);\n      treeArr.push(obj);\n    } else {\n      treeArr.push(obj);\n    }\n  });\n  return treeArr;\n};\n// 获取列表数据\nconst getList = () => {\n  list().then(res => {\n    if (res.code === \"000000000000\") {\n      let arr = [];\n      res.data.forEach(item => {\n        item.children = [];\n        item.key = item.id;\n        if (item.parentId === \"000000\") {\n          arr.push(item);\n        }\n        res.data.forEach(val => {\n          if (val.parentId === item.id) {\n            item.children.push(val);\n          }\n        });\n      });\n      dataContent.dataSource = arr;\n      dataContent.pagination.total = Number(dataContent.dataSource.length);\n      casList.value = [\n        {\n          label: \"一级菜单\",\n          value: \"000000\",\n          children: treeData(arr.slice()),\n        },\n      ];\n    }\n  });\n};\ngetList();\n// 更改当前页码\nconst paginationCurrentChange = current => {\n  dataContent.pagination.pageNum = current;\n  getList();\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  dataContent.pagination.pageSize = pageSize;\n  getList();\n};\n// 添加菜单\nconst handleAddMenu = () => {\n  addMenuModal.value = true;\n  (form.type = \"\"),\n    (form.name = \"\"),\n    (form.parentId = \"\"),\n    (form.url = \"\"),\n    (form.perms = \"\"),\n    (form.sort = undefined),\n    (form.icon = \"\");\n};\n// 编辑\nconst handleEditMenu = record => {\n  addMenuModal.value = true;\n  menuId.value = record.id;\n  (form.type = record.type),\n    (form.name = record.name),\n    (form.parentId = record.parentId),\n    (form.url = record.url),\n    (form.perms = record.perms),\n    (form.sort = record.sort),\n    (form.icon = record.icon);\n};\n// 删除\nconst handleDeleteMenu = record => {\n  delMenu(record).then(res => {\n    if (res.code === \"000000000000\") {\n      Message.success(\"删除成功\");\n      getList();\n      $bus.emit(\"updateMenu\");\n      menuStore.menuSideBar().then(()=>{\n        Message.success(\"菜单已更新\");\n      })\n    } else {\n      Message.error(res.message);\n    }\n  });\n};\n// 添加菜单 确定\nconst handleFormOk = () => {\n  let values = toRaw(form);\n  values.id = menuId.value;\n  if (menuId.value === \"\") {\n    addList(values).then(res => {\n      if (res.code === \"000000000000\") {\n        Message.success(\"新建成功!\");\n        getList();\n        $bus.emit(\"updateMenu\");\n      } else {\n        Message.error(res.message);\n      }\n    });\n  } else {\n    editMenu(values).then(res => {\n      if (res.code === \"000000000000\") {\n        Message.success(\"更新成功!\");\n        getList();\n        $bus.emit(\"updateMenu\");\n      } else {\n        Message.error(res.message);\n      }\n    });\n    menuId.value = \"\";\n  }\n  menuStore.menuSideBar().then(()=>{\n    Message.success(\"菜单已更新\");\n  })\n};\n</script>\n\n<style lang=\"scss\">\n.m-t-20 {\n  margin-top: 20px;\n}\n</style>\n","import script from \"./menuManage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./menuManage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./menuManage.vue?vue&type=style&index=0&id=54386806&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userListColumns","title","dataIndex","slotName","menuListColumns","key","width","roleListColumns","permissions","useMenuStore","getPermission","tableInfo","reactive","tableColumns","tableData","modalVisible","ref","defaultCheckList","checkedValues","userTableColumns","actionColumn","filter","item","handleSetColumns","value","columnSelected","values","setTableColumns","cachColumns","JSON","parse","localStorage","getItem","map","selectedColumsArr","forEach","push","columnOK","length","Message","error","emit","handleSwitch","bool","paginationChange","current","paginationPageSizeChange","pageSize","handleEdit","record","type","handleDeleteMenu","handleDetail","handleUpdateFlag","radioChange","val","__exports__","$bus","getCurrentInstance","appContext","config","globalProperties","menuStore","onBeforeMount","color","msg","dataContent","columns","dataSource","loading","pagination","pageNum","total","menuName","addMenuModal","form","name","parentId","url","perms","sort","undefined","icon","menuId","casList","treeData","arr","treeArr","obj","label","id","children","getList","list","then","res","code","data","Number","slice","paginationCurrentChange","handleAddMenu","handleEditMenu","delMenu","success","menuSideBar","message","handleFormOk","toRaw","addList","editMenu"],"sourceRoot":""}