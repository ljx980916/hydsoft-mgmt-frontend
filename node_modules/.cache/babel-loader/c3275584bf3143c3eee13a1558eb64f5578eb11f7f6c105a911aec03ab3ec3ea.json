{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar grid_1 = __importDefault(require(\"./grid\"));\nfunction layout(data, options) {\n  if (!data.nodes || data.nodes.length === 0) return data;\n  var width = options.width;\n  var height = options.height;\n  var nodeMinGap = options.nodeMinGap;\n  // 2. 网格布局\n  var CELL_W = 10000;\n  var CELL_H = 10000;\n  data.nodes.forEach(function (node) {\n    var nodeWidth = node.size[0] || 50;\n    var nodeHeight = node.size[1] || 50;\n    CELL_W = Math.min(nodeWidth, CELL_W);\n    CELL_H = Math.min(nodeHeight, CELL_H);\n  });\n  var grid = new grid_1.default();\n  grid.init(width, height, {\n    CELL_H: CELL_H,\n    CELL_W: CELL_W\n  });\n  data.nodes.forEach(function (d) {\n    var gridpoint = grid.occupyNearest(d);\n    if (gridpoint) {\n      gridpoint.node = {\n        id: d.id,\n        size: d.size\n      };\n      d.x = gridpoint.x;\n      d.y = gridpoint.y;\n      d.dx = gridpoint.dx;\n      d.dy = gridpoint.dy;\n    }\n  });\n  // 加入节点size\n  for (var i = 0; i < data.nodes.length; i++) {\n    //  节点宽度大于网格宽度，则往当前网格的右边插入列\n    var node = data.nodes[i];\n    var result = grid.findGridByNodeId(node.id);\n    if (!result) throw new Error(\"can not find node cell\");\n    var column = result.column,\n      row = result.row;\n    if (node.size[0] + nodeMinGap > CELL_W) {\n      var addGridSize = Math.ceil((node.size[0] + nodeMinGap) / CELL_W) - 1;\n      var realAdd = addGridSize;\n      // 优化，假设同一列，不同行存在两个size为2的节点，遍历到第一个节点的时候，会往右插入两列，遍历到第二个节点，又往右插入。就会导致多余的网格\n      for (var j = 0; j < addGridSize; j++) {\n        var hasColumn = grid.additionColumn.indexOf(column + j + 1) > -1;\n        if (hasColumn && !grid.cells[column + j + 1][row].node) {\n          realAdd--;\n        } else {\n          break;\n        }\n      }\n      grid.insertColumn(column, realAdd);\n    }\n    // 节点高度大于网格宽度，则往当前网格的下边插入行\n    if (node.size[1] + nodeMinGap > CELL_H) {\n      var addGridSize = Math.ceil((node.size[1] + nodeMinGap) / CELL_H) - 1;\n      var realAdd = addGridSize;\n      for (var j = 0; j < addGridSize; j++) {\n        var hasColumn = grid.additionRow.indexOf(row + j + 1) > -1;\n        if (hasColumn && !grid.cells[column][row + j + 1].node) {\n          realAdd--;\n        } else {\n          break;\n        }\n      }\n      grid.insertRow(row, realAdd);\n    }\n  }\n  // 同步节点坐标\n  for (var i = 0; i < grid.columnNum; i++) {\n    var _loop_1 = function (j) {\n      var cell = grid.cells[i][j];\n      if (cell.node) {\n        var node = data.nodes.find(function (node) {\n          var _a;\n          return node.id === ((_a = cell === null || cell === void 0 ? void 0 : cell.node) === null || _a === void 0 ? void 0 : _a.id);\n        });\n        if (node) {\n          node.x = cell.x + node.size[0] / 2;\n          node.y = cell.y + node.size[1] / 2;\n        }\n      }\n    };\n    for (var j = 0; j < grid.rowNum; j++) {\n      _loop_1(j);\n    }\n  }\n}\nexports.default = layout;","map":{"version":3,"mappings":"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","names":["layout","data","options","nodes","length","width","height","nodeMinGap","CELL_W","CELL_H","forEach","node","nodeWidth","size","nodeHeight","Math","min","grid","grid_1","init","d","gridpoint","occupyNearest","id","x","y","dx","dy","i","result","findGridByNodeId","Error","row","addGridSize","ceil","realAdd","j","hasColumn","additionColumn","indexOf","column","cells","insertColumn","additionRow","insertRow","columnNum","cell","find","rowNum","exports"],"sourceRoot":"","sources":["../../../src/layout/er/forceGrid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}