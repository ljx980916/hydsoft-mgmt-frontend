{"ast":null,"code":"import { throttle } from '@antv/util';\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      // 可选 mouseenter || click\n      // 选择 click 会监听 touch，mouseenter 不会监听\n      trigger: 'mouseenter',\n      activeState: 'active',\n      inactiveState: 'inactive',\n      resetSelected: false,\n      shouldUpdate: function shouldUpdate() {\n        return true;\n      }\n    };\n  },\n  getEvents: function getEvents() {\n    if (this.get('trigger') === 'mouseenter') {\n      return {\n        'node:mouseenter': 'setAllItemStates',\n        'combo:mouseenter': 'setAllItemStates',\n        'node:mouseleave': 'clearActiveState',\n        'combo:mouseleave': 'clearActiveState'\n      };\n    }\n    return {\n      'node:click': 'setAllItemStates',\n      'combo:click': 'setAllItemStates',\n      'canvas:click': 'clearActiveState',\n      'node:touchstart': 'setOnTouchStart',\n      'combo:touchstart': 'setOnTouchStart',\n      'canvas:touchstart': 'clearOnTouchStart'\n    };\n  },\n  setOnTouchStart: function setOnTouchStart(e) {\n    var self = this;\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n      if (event1 && event2) {\n        return;\n      }\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n    self.setAllItemStates(e);\n  },\n  clearOnTouchStart: function clearOnTouchStart(e) {\n    var self = this;\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n      if (event1 && event2) {\n        return;\n      }\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n    self.clearActiveState(e);\n  },\n  setAllItemStates: function setAllItemStates(e) {\n    clearTimeout(this.timer);\n    this.throttleSetAllItemStates(e, this);\n  },\n  clearActiveState: function clearActiveState(e) {\n    var _this = this;\n    // avoid clear state frequently, it costs a lot since all the items' states on the graph need to be cleared\n    this.timer = setTimeout(function () {\n      _this.throttleClearActiveState(e, _this);\n    }, 50);\n  },\n  throttleSetAllItemStates: throttle(function (e, self) {\n    var item = e.item;\n    var graph = self.graph;\n    if (!graph || graph.destroyed) return;\n    self.item = item;\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'activate'\n    }, self)) {\n      return;\n    }\n    var activeState = self.activeState;\n    var inactiveState = self.inactiveState;\n    var nodes = graph.getNodes();\n    var combos = graph.getCombos();\n    var edges = graph.getEdges();\n    var vEdges = graph.get('vedges');\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n    var inactiveItems = self.inactiveItems || {};\n    var activeItems = self.activeItems || {};\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      var nodeId = node.getID();\n      var hasSelected = node.hasState('selected');\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(node, 'selected', false);\n        }\n      }\n      if (activeItems[nodeId]) {\n        graph.setItemState(node, activeState, false);\n        delete activeItems[nodeId];\n      }\n      if (inactiveState && !inactiveItems[nodeId]) {\n        graph.setItemState(node, inactiveState, true);\n        inactiveItems[nodeId] = node;\n      }\n    }\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      var comboId = combo.getID();\n      var hasSelected = combo.hasState('selected');\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(combo, 'selected', false);\n        }\n      }\n      if (activeItems[comboId]) {\n        graph.setItemState(combo, activeState, false);\n        delete activeItems[comboId];\n      }\n      if (inactiveState && !inactiveItems[comboId]) {\n        graph.setItemState(combo, inactiveState, true);\n        inactiveItems[comboId] = combo;\n      }\n    }\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var edgeId = edge.getID();\n      if (activeItems[edgeId]) {\n        graph.setItemState(edge, activeState, false);\n        delete activeItems[edgeId];\n      }\n      if (inactiveState && !inactiveItems[edgeId]) {\n        graph.setItemState(edge, inactiveState, true);\n        inactiveItems[edgeId] = edge;\n      }\n    }\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      var vEdgeId = vEdge.getID();\n      if (activeItems[vEdgeId]) {\n        graph.setItemState(vEdge, activeState, false);\n        delete activeItems[vEdgeId];\n      }\n      if (inactiveState && !inactiveItems[vEdgeId]) {\n        graph.setItemState(vEdge, inactiveState, true);\n        inactiveItems[vEdgeId] = vEdge;\n      }\n    }\n    if (item && !item.destroyed) {\n      if (inactiveState) {\n        graph.setItemState(item, inactiveState, false);\n        delete inactiveItems[item.getID()];\n      }\n      if (!activeItems[item.getID()]) {\n        graph.setItemState(item, activeState, true);\n        activeItems[item.getID()] = item;\n      }\n      var rEdges = item.getEdges();\n      var rEdgeLegnth = rEdges.length;\n      for (var i = 0; i < rEdgeLegnth; i++) {\n        var edge = rEdges[i];\n        var edgeId = edge.getID();\n        var otherEnd = void 0;\n        if (edge.getSource() === item) {\n          otherEnd = edge.getTarget();\n        } else {\n          otherEnd = edge.getSource();\n        }\n        var otherEndId = otherEnd.getID();\n        if (inactiveState && inactiveItems[otherEndId]) {\n          graph.setItemState(otherEnd, inactiveState, false);\n          delete inactiveItems[otherEndId];\n        }\n        if (!activeItems[otherEndId]) {\n          graph.setItemState(otherEnd, activeState, true);\n          activeItems[otherEndId] = otherEnd;\n        }\n        if (inactiveItems[edgeId]) {\n          graph.setItemState(edge, inactiveState, false);\n          delete inactiveItems[edgeId];\n        }\n        if (!activeItems[edgeId]) {\n          graph.setItemState(edge, activeState, true);\n          activeItems[edgeId] = edge;\n        }\n        edge.toFront();\n      }\n    }\n    self.activeItems = activeItems;\n    self.inactiveItems = inactiveItems;\n    graph.emit('afteractivaterelations', {\n      item: e.item,\n      action: 'activate'\n    });\n  }, 50, {\n    trailing: true,\n    leading: true\n  }),\n  throttleClearActiveState: throttle(function (e, self) {\n    var graph = self.get('graph');\n    if (!graph || graph.destroyed) return;\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'deactivate'\n    }, self)) return;\n    var activeState = self.activeState;\n    var inactiveState = self.inactiveState;\n    var activeItems = self.activeItems || {};\n    var inactiveItems = self.inactiveItems || {};\n    Object.values(activeItems).filter(function (item) {\n      return !item.destroyed;\n    }).forEach(function (item) {\n      graph.clearItemStates(item, activeState);\n    });\n    Object.values(inactiveItems).filter(function (item) {\n      return !item.destroyed;\n    }).forEach(function (item) {\n      graph.clearItemStates(item, inactiveState);\n    });\n    self.activeItems = {};\n    self.inactiveItems = {};\n    graph.emit('afteractivaterelations', {\n      item: e.item || self.get('item'),\n      action: 'deactivate'\n    });\n  }, 50, {\n    trailing: true,\n    leading: true\n  })\n};","map":{"version":3,"names":["throttle","getDefaultCfg","trigger","activeState","inactiveState","resetSelected","shouldUpdate","getEvents","get","setOnTouchStart","e","self","touches","originalEvent","event1","event2","preventDefault","console","warn","setAllItemStates","clearOnTouchStart","clearActiveState","clearTimeout","timer","throttleSetAllItemStates","_this","setTimeout","throttleClearActiveState","item","graph","destroyed","event","action","nodes","getNodes","combos","getCombos","edges","getEdges","vEdges","nodeLength","length","comboLength","edgeLength","vEdgeLength","inactiveItems","activeItems","i","node","nodeId","getID","hasSelected","hasState","setItemState","combo","comboId","edge","edgeId","vEdge","vEdgeId","rEdges","rEdgeLegnth","otherEnd","getSource","getTarget","otherEndId","toFront","emit","trailing","leading","Object","values","filter","forEach","clearItemStates"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@antv/g6-pc/es/behavior/activate-relations.js"],"sourcesContent":["import { throttle } from '@antv/util';\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      // 可选 mouseenter || click\n      // 选择 click 会监听 touch，mouseenter 不会监听\n      trigger: 'mouseenter',\n      activeState: 'active',\n      inactiveState: 'inactive',\n      resetSelected: false,\n      shouldUpdate: function shouldUpdate() {\n        return true;\n      }\n    };\n  },\n  getEvents: function getEvents() {\n    if (this.get('trigger') === 'mouseenter') {\n      return {\n        'node:mouseenter': 'setAllItemStates',\n        'combo:mouseenter': 'setAllItemStates',\n        'node:mouseleave': 'clearActiveState',\n        'combo:mouseleave': 'clearActiveState'\n      };\n    }\n    return {\n      'node:click': 'setAllItemStates',\n      'combo:click': 'setAllItemStates',\n      'canvas:click': 'clearActiveState',\n      'node:touchstart': 'setOnTouchStart',\n      'combo:touchstart': 'setOnTouchStart',\n      'canvas:touchstart': 'clearOnTouchStart'\n    };\n  },\n  setOnTouchStart: function setOnTouchStart(e) {\n    var self = this;\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n      if (event1 && event2) {\n        return;\n      }\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n    self.setAllItemStates(e);\n  },\n  clearOnTouchStart: function clearOnTouchStart(e) {\n    var self = this;\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n      if (event1 && event2) {\n        return;\n      }\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n    self.clearActiveState(e);\n  },\n  setAllItemStates: function setAllItemStates(e) {\n    clearTimeout(this.timer);\n    this.throttleSetAllItemStates(e, this);\n  },\n  clearActiveState: function clearActiveState(e) {\n    var _this = this;\n    // avoid clear state frequently, it costs a lot since all the items' states on the graph need to be cleared\n    this.timer = setTimeout(function () {\n      _this.throttleClearActiveState(e, _this);\n    }, 50);\n  },\n  throttleSetAllItemStates: throttle(function (e, self) {\n    var item = e.item;\n    var graph = self.graph;\n    if (!graph || graph.destroyed) return;\n    self.item = item;\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'activate'\n    }, self)) {\n      return;\n    }\n    var activeState = self.activeState;\n    var inactiveState = self.inactiveState;\n    var nodes = graph.getNodes();\n    var combos = graph.getCombos();\n    var edges = graph.getEdges();\n    var vEdges = graph.get('vedges');\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n    var inactiveItems = self.inactiveItems || {};\n    var activeItems = self.activeItems || {};\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      var nodeId = node.getID();\n      var hasSelected = node.hasState('selected');\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(node, 'selected', false);\n        }\n      }\n      if (activeItems[nodeId]) {\n        graph.setItemState(node, activeState, false);\n        delete activeItems[nodeId];\n      }\n      if (inactiveState && !inactiveItems[nodeId]) {\n        graph.setItemState(node, inactiveState, true);\n        inactiveItems[nodeId] = node;\n      }\n    }\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      var comboId = combo.getID();\n      var hasSelected = combo.hasState('selected');\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(combo, 'selected', false);\n        }\n      }\n      if (activeItems[comboId]) {\n        graph.setItemState(combo, activeState, false);\n        delete activeItems[comboId];\n      }\n      if (inactiveState && !inactiveItems[comboId]) {\n        graph.setItemState(combo, inactiveState, true);\n        inactiveItems[comboId] = combo;\n      }\n    }\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      var edgeId = edge.getID();\n      if (activeItems[edgeId]) {\n        graph.setItemState(edge, activeState, false);\n        delete activeItems[edgeId];\n      }\n      if (inactiveState && !inactiveItems[edgeId]) {\n        graph.setItemState(edge, inactiveState, true);\n        inactiveItems[edgeId] = edge;\n      }\n    }\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      var vEdgeId = vEdge.getID();\n      if (activeItems[vEdgeId]) {\n        graph.setItemState(vEdge, activeState, false);\n        delete activeItems[vEdgeId];\n      }\n      if (inactiveState && !inactiveItems[vEdgeId]) {\n        graph.setItemState(vEdge, inactiveState, true);\n        inactiveItems[vEdgeId] = vEdge;\n      }\n    }\n    if (item && !item.destroyed) {\n      if (inactiveState) {\n        graph.setItemState(item, inactiveState, false);\n        delete inactiveItems[item.getID()];\n      }\n      if (!activeItems[item.getID()]) {\n        graph.setItemState(item, activeState, true);\n        activeItems[item.getID()] = item;\n      }\n      var rEdges = item.getEdges();\n      var rEdgeLegnth = rEdges.length;\n      for (var i = 0; i < rEdgeLegnth; i++) {\n        var edge = rEdges[i];\n        var edgeId = edge.getID();\n        var otherEnd = void 0;\n        if (edge.getSource() === item) {\n          otherEnd = edge.getTarget();\n        } else {\n          otherEnd = edge.getSource();\n        }\n        var otherEndId = otherEnd.getID();\n        if (inactiveState && inactiveItems[otherEndId]) {\n          graph.setItemState(otherEnd, inactiveState, false);\n          delete inactiveItems[otherEndId];\n        }\n        if (!activeItems[otherEndId]) {\n          graph.setItemState(otherEnd, activeState, true);\n          activeItems[otherEndId] = otherEnd;\n        }\n        if (inactiveItems[edgeId]) {\n          graph.setItemState(edge, inactiveState, false);\n          delete inactiveItems[edgeId];\n        }\n        if (!activeItems[edgeId]) {\n          graph.setItemState(edge, activeState, true);\n          activeItems[edgeId] = edge;\n        }\n        edge.toFront();\n      }\n    }\n    self.activeItems = activeItems;\n    self.inactiveItems = inactiveItems;\n    graph.emit('afteractivaterelations', {\n      item: e.item,\n      action: 'activate'\n    });\n  }, 50, {\n    trailing: true,\n    leading: true\n  }),\n  throttleClearActiveState: throttle(function (e, self) {\n    var graph = self.get('graph');\n    if (!graph || graph.destroyed) return;\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'deactivate'\n    }, self)) return;\n    var activeState = self.activeState;\n    var inactiveState = self.inactiveState;\n    var activeItems = self.activeItems || {};\n    var inactiveItems = self.inactiveItems || {};\n    Object.values(activeItems).filter(function (item) {\n      return !item.destroyed;\n    }).forEach(function (item) {\n      graph.clearItemStates(item, activeState);\n    });\n    Object.values(inactiveItems).filter(function (item) {\n      return !item.destroyed;\n    }).forEach(function (item) {\n      graph.clearItemStates(item, inactiveState);\n    });\n    self.activeItems = {};\n    self.inactiveItems = {};\n    graph.emit('afteractivaterelations', {\n      item: e.item || self.get('item'),\n      action: 'deactivate'\n    });\n  }, 50, {\n    trailing: true,\n    leading: true\n  })\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}