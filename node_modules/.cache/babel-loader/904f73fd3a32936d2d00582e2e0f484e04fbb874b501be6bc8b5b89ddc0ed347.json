{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_month_picker = _resolveComponent(\"a-month-picker\");\n  const _component_a_col = _resolveComponent(\"a-col\");\n  const _component_icon_export = _resolveComponent(\"icon-export\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_row = _resolveComponent(\"a-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_row, {\n    gutter: [14, 20],\n    align: \"center\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_col, {\n      flex: \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_month_picker, {\n        \"model-value\": $setup.monthVal,\n        onChange: $setup.handleMothPicker\n      }, null, 8 /* PROPS */, [\"model-value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_col, {\n      flex: \"85px\"\n    }), _createVNode(_component_a_col, {\n      flex: \"85px\"\n    }), _createVNode(_component_a_col, {\n      flex: \"auto\"\n    }), _createVNode(_component_a_col, {\n      flex: \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        type: \"primary\",\n        loading: $setup.exportLoading,\n        onClick: $setup.handleExport\n      }, {\n        icon: _withCtx(() => [_createVNode(_component_icon_export)]),\n        default: _withCtx(() => [_createTextVNode(\"导出本页\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_a_row, null, {\n    default: _withCtx(() => [_createVNode(_component_a_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"TableContainer\"], {\n        \"column-resizable\": \"\",\n        scrollY: \"600px\",\n        scrollbar: false,\n        loading: $setup.dataContent.loading,\n        paginationTotal: $setup.dataContent.pagination.total,\n        paginationPageSize: $setup.dataContent.pagination.pageSize,\n        paginationCurrent: $setup.dataContent.pagination.pageNum,\n        tableColumns: $setup.dataContent.columns,\n        \"table-data\": $setup.dataContent.dataSource,\n        onPaginationCurrentChange: $setup.paginationCurrentChange,\n        onPaginationPageSizeChange: $setup.paginationPageSizeChange\n      }, null, 8 /* PROPS */, [\"loading\", \"paginationTotal\", \"paginationPageSize\", \"paginationCurrent\", \"tableColumns\", \"table-data\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAgB;;;;;;;uBAA3BC,oBAqCM,OArCNC,UAqCM,GApCFC,aAiBQC;IAjBAC,MAAM,EAAE,QAAO;IAAEC,KAAK,EAAC;;sBAC3B,MAEQ,CAFRH,aAEQI;MAFDC,IAAI,EAAC;IAAO;wBACf,MAA0E,CAA1EL,aAA0EM;QAAnD,aAAW,EAAEC,eAAQ;QAAGC,QAAM,EAAED;;;QAE3DP,aACQI;MADDC,IAAI,EAAC;IAAM,IAElBL,aACQI;MADDC,IAAI,EAAC;IAAM,IAElBL,aAA2BI;MAApBC,IAAI,EAAC;IAAM,IAClBL,aAOQI;MAPDC,IAAI,EAAC;IAAO;wBACf,MAKS,CALTL,aAKSS;QALCC,IAAI,EAAC,SAAS;QAAEC,OAAO,EAAEJ,oBAAa;QAAGK,OAAK,EAAEL;;QAC/CM,IAAI,WACb,MAAe,CAAfb,aAAec;QAENC,OAAO,WAAC,MAAI,kBAAJ,MAAI;;;;;;;MAI/Bf,aAiBQC;sBAhBJ,MAeQ,CAfRD,aAeQI;MAfAY,IAAI,EAAE;IAAE;wBACZ,MAaiB,CAbjBhB,aAaiBO;QAZb,kBAAgB,EAAhB,EAAgB;QAChBU,OAAO,EAAC,OAAO;QACdC,SAAS,EAAE,KAAK;QAChBP,OAAO,EAAEJ,kBAAW,CAACI,OAAO;QAC5BQ,eAAe,EAAEZ,kBAAW,CAACa,UAAU,CAACC,KAAK;QAC7CC,kBAAkB,EAAEf,kBAAW,CAACa,UAAU,CAACG,QAAQ;QACnDC,iBAAiB,EAAEjB,kBAAW,CAACa,UAAU,CAACK,OAAO;QACjDC,YAAY,EAAEnB,kBAAW,CAACoB,OAAO;QACjC,YAAU,EAAEpB,kBAAW,CAACqB,UAAU;QAClCC,yBAAuB,EAAEtB,8BAAuB;QAChDuB,0BAAwB,EAAEvB","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_a_row","gutter","align","_component_a_col","flex","_component_a_month_picker","$setup","onChange","_component_a_button","type","loading","onClick","icon","_component_icon_export","default","span","scrollY","scrollbar","paginationTotal","pagination","total","paginationPageSize","pageSize","paginationCurrent","pageNum","tableColumns","columns","dataSource","onPaginationCurrentChange","onPaginationPageSizeChange"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/dataManagement/empInfo.vue"],"sourcesContent":["<template>\n    <div class=\"defaultPadding\">\n        <a-row :gutter=\"[14,20]\" align=\"center\">\n            <a-col flex=\"120px\">\n                <a-month-picker v-bind:model-value=\"monthVal\" @change=\"handleMothPicker\"/>\n            </a-col>\n            <a-col flex=\"85px\">\n            </a-col>\n            <a-col flex=\"85px\">\n            </a-col>\n            <a-col flex=\"auto\"></a-col>\n            <a-col flex=\"100px\">\n                <a-button type=\"primary\" :loading=\"exportLoading\" @click=\"handleExport\">\n                <template #icon>\n                  <icon-export />\n                </template>\n                <template #default>导出本页</template>\n              </a-button>\n            </a-col>\n        </a-row>\n        <a-row>\n            <a-col :span=\"24\">\n                <TableContainer\n                    column-resizable\n                    scrollY=\"600px\"\n                    :scrollbar=\"false\"\n                    :loading=\"dataContent.loading\"\n                    :paginationTotal=\"dataContent.pagination.total\"\n                    :paginationPageSize=\"dataContent.pagination.pageSize\"\n                    :paginationCurrent=\"dataContent.pagination.pageNum\"\n                    :tableColumns=\"dataContent.columns\"\n                    :table-data=\"dataContent.dataSource\"\n                    @paginationCurrentChange=\"paginationCurrentChange\"\n                    @paginationPageSizeChange=\"paginationPageSizeChange\"\n                    >\n                </TableContainer>\n            </a-col>\n        </a-row>\n    </div>\n</template>\n\n<script setup>\nimport TableContainer from \"@/components/tableContainer.vue\";\nimport { empInfo, exportExcel } from '../../api/empInfo.js'\nimport { onBeforeMount, reactive, ref } from \"vue\";\nimport { Message } from \"@arco-design/web-vue\";\nimport moment from 'moment'\n\nconst monthVal = ref(new Date())\n\nconst handleMothPicker = (value,date)=>{\n    monthVal.value = date\n    getData()\n}\n\nconst dataContent = reactive({\n    loading : false,\n    columns : [\n        {\n            title: '员工编号',\n            dataIndex: 'empCode',\n            key: 'empCode',\n            width : 110    \n        },\n        {\n            title: '员工姓名',\n            dataIndex: 'empName',\n            key: 'empName',\n            width : 110    \n        },\n        {\n            title: '成本中心',\n            dataIndex: 'costCenterName',\n            key: 'costCenterName',\n            width : 110\n        },\n        {\n            title: '所属实体',\n            dataIndex: 'entityName',\n            key: 'entityName',\n            width : 250   \n        },\n        {\n            title: '在职状态',\n            dataIndex: 'status',\n            key: 'status',\n            width : 110    \n        },\n        {\n            title: '所属部门',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            width : 200    \n        },\n        {\n            title: '部门经理',\n            dataIndex: 'deptManager',\n            key: 'deptManager',\n            width : 110    \n        },\n        {\n            title: '客户名称',\n            dataIndex: 'customerName',\n            key: 'customerName',\n            width : 250\n        },\n        {\n            title: '项目名称',\n            dataIndex: 'projectName',\n            key: 'projectName',\n            width : 220   \n        },\n        {\n            title: '入职时间',\n            dataIndex: 'hireDate',\n            key: 'hireDate',\n            width : 110   \n        },   \n        {\n            title: '离职时间',\n            dataIndex: 'dismissDate',\n            key: 'dismissDate',\n            width : 150    \n        },\n        {\n            title: '职位',\n            dataIndex: 'position',\n            key: 'position',\n            width : 150   \n        },   \n        {\n            title: '工作地',\n            dataIndex: 'workPlace',\n            key: 'workPlace',\n            width : 110   \n        },   \n        {\n            title: '员工属性',\n            dataIndex: 'empAttr',\n            key: 'empAttr',\n            width : 110   \n        },\n    ],\n    dataSource : [],\n    pagination : {\n        pageSize : 20,\n        pageNum : 1,\n        total : 10\n    }\n\n})\n\nconst exportLoading = ref(false)\nconst handleExport = ()=>{\n    exportLoading.value = true\n    let params = {\n        month : moment(monthVal.value).format('yyyy-MM')\n    }\n    exportExcel(params)\n    .then(res => {\n      const blob = new Blob([res]);\n      const fileName = `C1人员信息_${moment(monthVal.value).format('yyyyMM')}.xlsx`;\n      const link = document.createElement(\"a\");\n      link.download = fileName;\n      link.style.display = \"none\";\n      link.href = URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      document.body.removeChild(link);\n    })\n    .catch(() => {\n      Message.error(\"导出失败\");\n    })\n    .finally(() => {\n        exportLoading.value = false;\n    });\n}\n\nonBeforeMount(()=>{\n    getData()\n})\n\nconst getData = ()=>{\n    let params={\n        month : moment(monthVal.value).format('yyyy-MM'),\n        pageNum : dataContent.pagination.pageNum,\n        pageSize : dataContent.pagination.pageSize\n    }\n    dataContent.loading = true\n    empInfo(params).then(res=>{\n        if(res.code === '000000000000'){\n            let { list,total} = res.data\n            dataContent.pagination.total = !isNaN(+total) && +total\n            Array.isArray(list) && list.forEach((item,i)=>{\n                item.key = item.empCode\n            })\n            dataContent.dataSource = list\n        }\n    }).catch(e=>{\n        Message.error(e.message || '请求失败')\n    }).finally(()=>{\n        dataContent.loading = false\n    })\n} \nconst paginationCurrentChange = (pageNum)=>{\n    dataContent.pagination.pageNum = pageNum\n    getData()\n}\nconst paginationPageSizeChange = (pageSize)=>{\n    dataContent.pagination.pageSize = pageSize\n    getData()\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}