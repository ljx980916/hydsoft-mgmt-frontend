{"ast":null,"code":"import { clone } from '@antv/util';\nimport degree from './degree';\n/**\n *  k-core算法 找出符合指定核心度的紧密关联的子图结构\n * @param graphData 图数据\n * @param k 核心度数\n */\n\nvar kCore = function kCore(graphData, k) {\n  var _a;\n  if (k === void 0) {\n    k = 1;\n  }\n  var data = clone(graphData);\n  var _b = data.nodes,\n    nodes = _b === void 0 ? [] : _b;\n  var _c = data.edges,\n    edges = _c === void 0 ? [] : _c;\n  var _loop_1 = function _loop_1() {\n    // 获取图中节点的度数\n    var degrees = degree({\n      nodes: nodes,\n      edges: edges\n    });\n    var nodeIds = Object.keys(degrees); // 按照度数进行排序\n\n    nodeIds.sort(function (a, b) {\n      var _a, _b;\n      return ((_a = degrees[a]) === null || _a === void 0 ? void 0 : _a.degree) - ((_b = degrees[b]) === null || _b === void 0 ? void 0 : _b.degree);\n    });\n    var minIndexId = nodeIds[0];\n    if (!nodes.length || ((_a = degrees[minIndexId]) === null || _a === void 0 ? void 0 : _a.degree) >= k) {\n      return \"break\";\n    }\n    var originIndex = nodes.findIndex(function (node) {\n      return node.id === minIndexId;\n    }); // 移除度数小于k的节点\n\n    nodes.splice(originIndex, 1); // 移除度数小于k的节点相关的边\n\n    edges = edges.filter(function (edge) {\n      return !(edge.source === minIndexId || edge.target === minIndexId);\n    });\n  };\n  while (true) {\n    var state_1 = _loop_1();\n    if (state_1 === \"break\") break;\n  }\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n};\nexport default kCore;","map":{"version":3,"names":["clone","degree","kCore","graphData","k","_a","data","_b","nodes","_c","edges","_loop_1","degrees","nodeIds","Object","keys","sort","a","b","minIndexId","length","originIndex","findIndex","node","id","splice","filter","edge","source","target","state_1"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@antv/algorithm/es/k-core.js"],"sourcesContent":["import { clone } from '@antv/util';\nimport degree from './degree';\n/**\n *  k-core算法 找出符合指定核心度的紧密关联的子图结构\n * @param graphData 图数据\n * @param k 核心度数\n */\n\nvar kCore = function kCore(graphData, k) {\n  var _a;\n\n  if (k === void 0) {\n    k = 1;\n  }\n\n  var data = clone(graphData);\n  var _b = data.nodes,\n      nodes = _b === void 0 ? [] : _b;\n  var _c = data.edges,\n      edges = _c === void 0 ? [] : _c;\n\n  var _loop_1 = function _loop_1() {\n    // 获取图中节点的度数\n    var degrees = degree({\n      nodes: nodes,\n      edges: edges\n    });\n    var nodeIds = Object.keys(degrees); // 按照度数进行排序\n\n    nodeIds.sort(function (a, b) {\n      var _a, _b;\n\n      return ((_a = degrees[a]) === null || _a === void 0 ? void 0 : _a.degree) - ((_b = degrees[b]) === null || _b === void 0 ? void 0 : _b.degree);\n    });\n    var minIndexId = nodeIds[0];\n\n    if (!nodes.length || ((_a = degrees[minIndexId]) === null || _a === void 0 ? void 0 : _a.degree) >= k) {\n      return \"break\";\n    }\n\n    var originIndex = nodes.findIndex(function (node) {\n      return node.id === minIndexId;\n    }); // 移除度数小于k的节点\n\n    nodes.splice(originIndex, 1); // 移除度数小于k的节点相关的边\n\n    edges = edges.filter(function (edge) {\n      return !(edge.source === minIndexId || edge.target === minIndexId);\n    });\n  };\n\n  while (true) {\n    var state_1 = _loop_1();\n\n    if (state_1 === \"break\") break;\n  }\n\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n};\n\nexport default kCore;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,YAAY;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAG,SAASA,KAAK,CAACC,SAAS,EAAEC,CAAC,EAAE;EACvC,IAAIC,EAAE;EAEN,IAAID,CAAC,KAAK,KAAK,CAAC,EAAE;IAChBA,CAAC,GAAG,CAAC;EACP;EAEA,IAAIE,IAAI,GAAGN,KAAK,CAACG,SAAS,CAAC;EAC3B,IAAII,EAAE,GAAGD,IAAI,CAACE,KAAK;IACfA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;EACnC,IAAIE,EAAE,GAAGH,IAAI,CAACI,KAAK;IACfA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;EAEnC,IAAIE,OAAO,GAAG,SAASA,OAAO,GAAG;IAC/B;IACA,IAAIC,OAAO,GAAGX,MAAM,CAAC;MACnBO,KAAK,EAAEA,KAAK;MACZE,KAAK,EAAEA;IACT,CAAC,CAAC;IACF,IAAIG,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC;;IAEpCC,OAAO,CAACG,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAC3B,IAAIb,EAAE,EAAEE,EAAE;MAEV,OAAO,CAAC,CAACF,EAAE,GAAGO,OAAO,CAACK,CAAC,CAAC,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACJ,MAAM,KAAK,CAACM,EAAE,GAAGK,OAAO,CAACM,CAAC,CAAC,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACN,MAAM,CAAC;IAChJ,CAAC,CAAC;IACF,IAAIkB,UAAU,GAAGN,OAAO,CAAC,CAAC,CAAC;IAE3B,IAAI,CAACL,KAAK,CAACY,MAAM,IAAI,CAAC,CAACf,EAAE,GAAGO,OAAO,CAACO,UAAU,CAAC,MAAM,IAAI,IAAId,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACJ,MAAM,KAAKG,CAAC,EAAE;MACrG,OAAO,OAAO;IAChB;IAEA,IAAIiB,WAAW,GAAGb,KAAK,CAACc,SAAS,CAAC,UAAUC,IAAI,EAAE;MAChD,OAAOA,IAAI,CAACC,EAAE,KAAKL,UAAU;IAC/B,CAAC,CAAC,CAAC,CAAC;;IAEJX,KAAK,CAACiB,MAAM,CAACJ,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE9BX,KAAK,GAAGA,KAAK,CAACgB,MAAM,CAAC,UAAUC,IAAI,EAAE;MACnC,OAAO,EAAEA,IAAI,CAACC,MAAM,KAAKT,UAAU,IAAIQ,IAAI,CAACE,MAAM,KAAKV,UAAU,CAAC;IACpE,CAAC,CAAC;EACJ,CAAC;EAED,OAAO,IAAI,EAAE;IACX,IAAIW,OAAO,GAAGnB,OAAO,EAAE;IAEvB,IAAImB,OAAO,KAAK,OAAO,EAAE;EAC3B;EAEA,OAAO;IACLtB,KAAK,EAAEA,KAAK;IACZE,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAED,eAAeR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}