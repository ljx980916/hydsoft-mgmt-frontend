{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as g from '../g/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as mvc from '../mvc/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport V from '../V/index.mjs';\n\n// Vertex Handles\nvar VertexHandle = mvc.View.extend({\n  tagName: 'circle',\n  svgElement: true,\n  className: 'marker-vertex',\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown',\n    dblclick: 'onDoubleClick',\n    dbltap: 'onDoubleClick'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  attributes: {\n    'r': 6,\n    'fill': '#33334F',\n    'stroke': '#FFFFFF',\n    'stroke-width': 2,\n    'cursor': 'move'\n  },\n  position: function (x, y) {\n    const {\n      vel,\n      options\n    } = this;\n    const {\n      scale\n    } = options;\n    let matrix = V.createSVGMatrix().translate(x, y);\n    if (scale) matrix = matrix.scale(scale);\n    vel.transform(matrix, {\n      absolute: true\n    });\n  },\n  onPointerDown: function (evt) {\n    if (this.options.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    this.options.paper.undelegateEvents();\n    this.delegateDocumentEvents(null, evt.data);\n    this.trigger('will-change', this, evt);\n  },\n  onPointerMove: function (evt) {\n    this.trigger('changing', this, evt);\n  },\n  onDoubleClick: function (evt) {\n    this.trigger('remove', this, evt);\n  },\n  onPointerUp: function (evt) {\n    this.trigger('changed', this, evt);\n    this.undelegateDocumentEvents();\n    this.options.paper.delegateEvents();\n  }\n});\nexport const Vertices = ToolView.extend({\n  name: 'vertices',\n  options: {\n    handleClass: VertexHandle,\n    snapRadius: 20,\n    redundancyRemoval: true,\n    vertexAdding: true,\n    stopPropagation: true,\n    scale: null\n  },\n  children: [{\n    tagName: 'path',\n    selector: 'connection',\n    className: 'joint-vertices-path',\n    attributes: {\n      'fill': 'none',\n      'stroke': 'transparent',\n      'stroke-width': 10,\n      'cursor': 'cell'\n    }\n  }],\n  handles: null,\n  events: {\n    'mousedown .joint-vertices-path': 'onPathPointerDown',\n    'touchstart .joint-vertices-path': 'onPathPointerDown'\n  },\n  onRender: function () {\n    if (this.options.vertexAdding) {\n      this.renderChildren();\n      this.updatePath();\n    }\n    this.resetHandles();\n    this.renderHandles();\n    return this;\n  },\n  update: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n    if (vertices.length === this.handles.length) {\n      this.updateHandles();\n    } else {\n      this.resetHandles();\n      this.renderHandles();\n    }\n    if (this.options.vertexAdding) {\n      this.updatePath();\n    }\n    return this;\n  },\n  resetHandles: function () {\n    var handles = this.handles;\n    this.handles = [];\n    this.stopListening();\n    if (!Array.isArray(handles)) return;\n    for (var i = 0, n = handles.length; i < n; i++) {\n      handles[i].remove();\n    }\n  },\n  renderHandles: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n    for (var i = 0, n = vertices.length; i < n; i++) {\n      var vertex = vertices[i];\n      var handle = new this.options.handleClass({\n        index: i,\n        paper: this.paper,\n        scale: this.options.scale,\n        guard: evt => this.guard(evt)\n      });\n      handle.render();\n      handle.position(vertex.x, vertex.y);\n      this.simulateRelatedView(handle.el);\n      handle.vel.appendTo(this.el);\n      this.handles.push(handle);\n      this.startHandleListening(handle);\n    }\n  },\n  updateHandles: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n    for (var i = 0, n = vertices.length; i < n; i++) {\n      var vertex = vertices[i];\n      var handle = this.handles[i];\n      if (!handle) return;\n      handle.position(vertex.x, vertex.y);\n    }\n  },\n  updatePath: function () {\n    var connection = this.childNodes.connection;\n    if (connection) connection.setAttribute('d', this.relatedView.getSerializedConnection());\n  },\n  startHandleListening: function (handle) {\n    var relatedView = this.relatedView;\n    if (relatedView.can('vertexMove')) {\n      this.listenTo(handle, 'will-change', this.onHandleWillChange);\n      this.listenTo(handle, 'changing', this.onHandleChanging);\n      this.listenTo(handle, 'changed', this.onHandleChanged);\n    }\n    if (relatedView.can('vertexRemove')) {\n      this.listenTo(handle, 'remove', this.onHandleRemove);\n    }\n  },\n  getNeighborPoints: function (index) {\n    var linkView = this.relatedView;\n    var vertices = linkView.model.vertices();\n    var prev = index > 0 ? vertices[index - 1] : linkView.sourceAnchor;\n    var next = index < vertices.length - 1 ? vertices[index + 1] : linkView.targetAnchor;\n    return {\n      prev: new g.Point(prev),\n      next: new g.Point(next)\n    };\n  },\n  onHandleWillChange: function (_handle, evt) {\n    this.focus();\n    const {\n      relatedView,\n      options\n    } = this;\n    relatedView.model.startBatch('vertex-move', {\n      ui: true,\n      tool: this.cid\n    });\n    if (!options.stopPropagation) relatedView.notifyPointerdown(...relatedView.paper.getPointerArgs(evt));\n  },\n  onHandleChanging: function (handle, evt) {\n    const {\n      options,\n      relatedView: linkView\n    } = this;\n    var index = handle.options.index;\n    var [normalizedEvent, x, y] = linkView.paper.getPointerArgs(evt);\n    var vertex = {\n      x,\n      y\n    };\n    this.snapVertex(vertex, index);\n    linkView.model.vertex(index, vertex, {\n      ui: true,\n      tool: this.cid\n    });\n    handle.position(vertex.x, vertex.y);\n    if (!options.stopPropagation) linkView.notifyPointermove(normalizedEvent, x, y);\n  },\n  onHandleChanged: function (_handle, evt) {\n    const {\n      options,\n      relatedView: linkView\n    } = this;\n    if (options.vertexAdding) this.updatePath();\n    if (!options.redundancyRemoval) return;\n    var verticesRemoved = linkView.removeRedundantLinearVertices({\n      ui: true,\n      tool: this.cid\n    });\n    if (verticesRemoved) this.render();\n    this.blur();\n    linkView.model.stopBatch('vertex-move', {\n      ui: true,\n      tool: this.cid\n    });\n    if (this.eventData(evt).vertexAdded) {\n      linkView.model.stopBatch('vertex-add', {\n        ui: true,\n        tool: this.cid\n      });\n    }\n    var [normalizedEvt, x, y] = linkView.paper.getPointerArgs(evt);\n    if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvt, x, y);\n    linkView.checkMouseleave(normalizedEvt);\n  },\n  snapVertex: function (vertex, index) {\n    var snapRadius = this.options.snapRadius;\n    if (snapRadius > 0) {\n      var neighbors = this.getNeighborPoints(index);\n      var prev = neighbors.prev;\n      var next = neighbors.next;\n      if (Math.abs(vertex.x - prev.x) < snapRadius) {\n        vertex.x = prev.x;\n      } else if (Math.abs(vertex.x - next.x) < snapRadius) {\n        vertex.x = next.x;\n      }\n      if (Math.abs(vertex.y - prev.y) < snapRadius) {\n        vertex.y = neighbors.prev.y;\n      } else if (Math.abs(vertex.y - next.y) < snapRadius) {\n        vertex.y = next.y;\n      }\n    }\n  },\n  onHandleRemove: function (handle, evt) {\n    var index = handle.options.index;\n    var linkView = this.relatedView;\n    linkView.model.removeVertex(index, {\n      ui: true\n    });\n    if (this.options.vertexAdding) this.updatePath();\n    linkView.checkMouseleave(util.normalizeEvent(evt));\n  },\n  onPathPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    var normalizedEvent = util.normalizeEvent(evt);\n    var vertex = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY).toJSON();\n    var relatedView = this.relatedView;\n    relatedView.model.startBatch('vertex-add', {\n      ui: true,\n      tool: this.cid\n    });\n    var index = relatedView.getVertexIndex(vertex.x, vertex.y);\n    this.snapVertex(vertex, index);\n    relatedView.model.insertVertex(index, vertex, {\n      ui: true,\n      tool: this.cid\n    });\n    this.update();\n    var handle = this.handles[index];\n    this.eventData(normalizedEvent, {\n      vertexAdded: true\n    });\n    handle.onPointerDown(normalizedEvent);\n  },\n  onRemove: function () {\n    this.resetHandles();\n  }\n}, {\n  VertexHandle: VertexHandle // keep as class property\n});","map":{"version":3,"names":["g","util","mvc","ToolView","V","VertexHandle","View","extend","tagName","svgElement","className","events","mousedown","touchstart","dblclick","dbltap","documentEvents","mousemove","touchmove","mouseup","touchend","touchcancel","attributes","position","x","y","vel","options","scale","matrix","createSVGMatrix","translate","transform","absolute","onPointerDown","evt","guard","stopPropagation","preventDefault","paper","undelegateEvents","delegateDocumentEvents","data","trigger","onPointerMove","onDoubleClick","onPointerUp","undelegateDocumentEvents","delegateEvents","Vertices","name","handleClass","snapRadius","redundancyRemoval","vertexAdding","children","selector","handles","onRender","renderChildren","updatePath","resetHandles","renderHandles","update","relatedView","vertices","model","length","updateHandles","stopListening","Array","isArray","i","n","remove","vertex","handle","index","render","simulateRelatedView","el","appendTo","push","startHandleListening","connection","childNodes","setAttribute","getSerializedConnection","can","listenTo","onHandleWillChange","onHandleChanging","onHandleChanged","onHandleRemove","getNeighborPoints","linkView","prev","sourceAnchor","next","targetAnchor","Point","_handle","focus","startBatch","ui","tool","cid","notifyPointerdown","getPointerArgs","normalizedEvent","snapVertex","notifyPointermove","verticesRemoved","removeRedundantLinearVertices","blur","stopBatch","eventData","vertexAdded","normalizedEvt","notifyPointerup","checkMouseleave","neighbors","Math","abs","removeVertex","normalizeEvent","onPathPointerDown","snapToGrid","clientX","clientY","toJSON","getVertexIndex","insertVertex","onRemove"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/jointjs/src/linkTools/Vertices.mjs"],"sourcesContent":["import * as g from '../g/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as mvc from '../mvc/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport V from '../V/index.mjs';\n\n\n// Vertex Handles\nvar VertexHandle = mvc.View.extend({\n    tagName: 'circle',\n    svgElement: true,\n    className: 'marker-vertex',\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown',\n        dblclick: 'onDoubleClick',\n        dbltap: 'onDoubleClick'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    attributes: {\n        'r': 6,\n        'fill': '#33334F',\n        'stroke': '#FFFFFF',\n        'stroke-width': 2,\n        'cursor': 'move'\n    },\n    position: function(x, y) {\n        const { vel, options } = this;\n        const { scale } = options;\n        let matrix = V.createSVGMatrix().translate(x, y);\n        if (scale) matrix = matrix.scale(scale);\n        vel.transform(matrix, { absolute: true });\n    },\n    onPointerDown: function(evt) {\n        if (this.options.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.options.paper.undelegateEvents();\n        this.delegateDocumentEvents(null, evt.data);\n        this.trigger('will-change', this, evt);\n    },\n    onPointerMove: function(evt) {\n        this.trigger('changing', this, evt);\n    },\n    onDoubleClick: function(evt) {\n        this.trigger('remove', this, evt);\n    },\n    onPointerUp: function(evt) {\n        this.trigger('changed', this, evt);\n        this.undelegateDocumentEvents();\n        this.options.paper.delegateEvents();\n    }\n});\n\nexport const Vertices = ToolView.extend({\n    name: 'vertices',\n    options: {\n        handleClass: VertexHandle,\n        snapRadius: 20,\n        redundancyRemoval: true,\n        vertexAdding: true,\n        stopPropagation: true,\n        scale: null\n    },\n    children: [{\n        tagName: 'path',\n        selector: 'connection',\n        className: 'joint-vertices-path',\n        attributes: {\n            'fill': 'none',\n            'stroke': 'transparent',\n            'stroke-width': 10,\n            'cursor': 'cell'\n        }\n    }],\n    handles: null,\n    events: {\n        'mousedown .joint-vertices-path': 'onPathPointerDown',\n        'touchstart .joint-vertices-path': 'onPathPointerDown'\n    },\n    onRender: function() {\n        if (this.options.vertexAdding) {\n            this.renderChildren();\n            this.updatePath();\n        }\n        this.resetHandles();\n        this.renderHandles();\n        return this;\n    },\n    update: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        if (vertices.length === this.handles.length) {\n            this.updateHandles();\n        } else {\n            this.resetHandles();\n            this.renderHandles();\n        }\n        if (this.options.vertexAdding) {\n            this.updatePath();\n        }\n        return this;\n    },\n    resetHandles: function() {\n        var handles = this.handles;\n        this.handles = [];\n        this.stopListening();\n        if (!Array.isArray(handles)) return;\n        for (var i = 0, n = handles.length; i < n; i++) {\n            handles[i].remove();\n        }\n    },\n    renderHandles: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        for (var i = 0, n = vertices.length; i < n; i++) {\n            var vertex = vertices[i];\n            var handle = new (this.options.handleClass)({\n                index: i,\n                paper: this.paper,\n                scale: this.options.scale,\n                guard: evt => this.guard(evt)\n            });\n            handle.render();\n            handle.position(vertex.x, vertex.y);\n            this.simulateRelatedView(handle.el);\n            handle.vel.appendTo(this.el);\n            this.handles.push(handle);\n            this.startHandleListening(handle);\n        }\n    },\n    updateHandles: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        for (var i = 0, n = vertices.length; i < n; i++) {\n            var vertex = vertices[i];\n            var handle = this.handles[i];\n            if (!handle) return;\n            handle.position(vertex.x, vertex.y);\n        }\n    },\n    updatePath: function() {\n        var connection = this.childNodes.connection;\n        if (connection) connection.setAttribute('d', this.relatedView.getSerializedConnection());\n    },\n    startHandleListening: function(handle) {\n        var relatedView = this.relatedView;\n        if (relatedView.can('vertexMove')) {\n            this.listenTo(handle, 'will-change', this.onHandleWillChange);\n            this.listenTo(handle, 'changing', this.onHandleChanging);\n            this.listenTo(handle, 'changed', this.onHandleChanged);\n        }\n        if (relatedView.can('vertexRemove')) {\n            this.listenTo(handle, 'remove', this.onHandleRemove);\n        }\n    },\n    getNeighborPoints: function(index) {\n        var linkView = this.relatedView;\n        var vertices = linkView.model.vertices();\n        var prev = (index > 0) ? vertices[index - 1] : linkView.sourceAnchor;\n        var next = (index < vertices.length - 1) ? vertices[index + 1] : linkView.targetAnchor;\n        return {\n            prev: new g.Point(prev),\n            next: new g.Point(next)\n        };\n    },\n    onHandleWillChange: function(_handle, evt) {\n        this.focus();\n        const { relatedView, options } = this;\n        relatedView.model.startBatch('vertex-move', { ui: true, tool: this.cid });\n        if (!options.stopPropagation) relatedView.notifyPointerdown(...relatedView.paper.getPointerArgs(evt));\n    },\n    onHandleChanging: function(handle, evt) {\n        const { options, relatedView: linkView } = this;\n        var index = handle.options.index;\n        var [normalizedEvent, x, y] = linkView.paper.getPointerArgs(evt);\n        var vertex = { x, y };\n        this.snapVertex(vertex, index);\n        linkView.model.vertex(index, vertex, { ui: true, tool: this.cid });\n        handle.position(vertex.x, vertex.y);\n        if (!options.stopPropagation) linkView.notifyPointermove(normalizedEvent, x, y);\n    },\n    onHandleChanged: function(_handle, evt) {\n        const { options, relatedView: linkView } = this;\n        if (options.vertexAdding) this.updatePath();\n        if (!options.redundancyRemoval) return;\n        var verticesRemoved = linkView.removeRedundantLinearVertices({ ui: true, tool: this.cid });\n        if (verticesRemoved) this.render();\n        this.blur();\n        linkView.model.stopBatch('vertex-move', { ui: true, tool: this.cid });\n        if (this.eventData(evt).vertexAdded) {\n            linkView.model.stopBatch('vertex-add', { ui: true, tool: this.cid });\n        }\n        var [normalizedEvt, x, y] = linkView.paper.getPointerArgs(evt);\n        if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvt, x, y);\n        linkView.checkMouseleave(normalizedEvt);\n    },\n    snapVertex: function(vertex, index) {\n        var snapRadius = this.options.snapRadius;\n        if (snapRadius > 0) {\n            var neighbors = this.getNeighborPoints(index);\n            var prev = neighbors.prev;\n            var next = neighbors.next;\n            if (Math.abs(vertex.x - prev.x) < snapRadius) {\n                vertex.x = prev.x;\n            } else if (Math.abs(vertex.x - next.x) < snapRadius) {\n                vertex.x = next.x;\n            }\n            if (Math.abs(vertex.y - prev.y) < snapRadius) {\n                vertex.y = neighbors.prev.y;\n            } else if (Math.abs(vertex.y - next.y) < snapRadius) {\n                vertex.y = next.y;\n            }\n        }\n    },\n    onHandleRemove: function(handle, evt) {\n        var index = handle.options.index;\n        var linkView = this.relatedView;\n        linkView.model.removeVertex(index, { ui: true });\n        if (this.options.vertexAdding) this.updatePath();\n        linkView.checkMouseleave(util.normalizeEvent(evt));\n    },\n    onPathPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        var normalizedEvent = util.normalizeEvent(evt);\n        var vertex = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY).toJSON();\n        var relatedView = this.relatedView;\n        relatedView.model.startBatch('vertex-add', { ui: true, tool: this.cid });\n        var index = relatedView.getVertexIndex(vertex.x, vertex.y);\n        this.snapVertex(vertex, index);\n        relatedView.model.insertVertex(index, vertex, { ui: true, tool: this.cid });\n        this.update();\n        var handle = this.handles[index];\n        this.eventData(normalizedEvent, { vertexAdded: true });\n        handle.onPointerDown(normalizedEvent);\n    },\n    onRemove: function() {\n        this.resetHandles();\n    }\n}, {\n    VertexHandle: VertexHandle // keep as class property\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}