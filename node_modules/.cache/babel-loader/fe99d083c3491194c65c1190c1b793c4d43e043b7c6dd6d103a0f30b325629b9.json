{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from \"vue\";\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const tableSpan = computed(() => {\n    const span = {};\n    if (spanMethod.value) {\n      data.value.forEach((record, rowIndex) => {\n        columns.value.forEach((column, columnIndex) => {\n          var _a, _b;\n          const {\n            rowspan = 1,\n            colspan = 1\n          } = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n            record: record.raw,\n            column,\n            rowIndex,\n            columnIndex\n          })) != null ? _b : {};\n          if (rowspan > 1 || colspan > 1) {\n            span[`${rowIndex}-${columnIndex}`] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n    for (const indexKey of Object.keys(tableSpan.value)) {\n      const indexArray = indexKey.split(\"-\").map(item => Number(item));\n      const span = tableSpan.value[indexKey];\n      for (let i = 1; i < span[0]; i++) {\n        data2.push(`${indexArray[0] + i}-${indexArray[1]}`);\n        for (let j = 1; j < span[1]; j++) {\n          data2.push(`${indexArray[0] + i}-${indexArray[1] + j}`);\n        }\n      }\n      for (let i = 1; i < span[1]; i++) {\n        data2.push(`${indexArray[0]}-${indexArray[1] + i}`);\n      }\n    }\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\nexport { useSpan };","map":{"version":3,"names":["computed","useSpan","spanMethod","data","columns","tableSpan","span","value","forEach","record","rowIndex","column","columnIndex","_a","_b","rowspan","colspan","call","raw","removedCells","data2","indexKey","Object","keys","indexArray","split","map","item","Number","i","push","j"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@arco-design/web-vue/es/table/hooks/use-span.js"],"sourcesContent":["import { computed } from \"vue\";\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const tableSpan = computed(() => {\n    const span = {};\n    if (spanMethod.value) {\n      data.value.forEach((record, rowIndex) => {\n        columns.value.forEach((column, columnIndex) => {\n          var _a, _b;\n          const { rowspan = 1, colspan = 1 } = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n            record: record.raw,\n            column,\n            rowIndex,\n            columnIndex\n          })) != null ? _b : {};\n          if (rowspan > 1 || colspan > 1) {\n            span[`${rowIndex}-${columnIndex}`] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n    for (const indexKey of Object.keys(tableSpan.value)) {\n      const indexArray = indexKey.split(\"-\").map((item) => Number(item));\n      const span = tableSpan.value[indexKey];\n      for (let i = 1; i < span[0]; i++) {\n        data2.push(`${indexArray[0] + i}-${indexArray[1]}`);\n        for (let j = 1; j < span[1]; j++) {\n          data2.push(`${indexArray[0] + i}-${indexArray[1] + j}`);\n        }\n      }\n      for (let i = 1; i < span[1]; i++) {\n        data2.push(`${indexArray[0]}-${indexArray[1] + i}`);\n      }\n    }\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\nexport { useSpan };\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,MAAMC,OAAO,GAAG,CAAC;EACfC,UAAU;EACVC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAGL,QAAQ,CAAC,MAAM;IAC/B,MAAMM,IAAI,GAAG,CAAC,CAAC;IACf,IAAIJ,UAAU,CAACK,KAAK,EAAE;MACpBJ,IAAI,CAACI,KAAK,CAACC,OAAO,CAAC,CAACC,MAAM,EAAEC,QAAQ,KAAK;QACvCN,OAAO,CAACG,KAAK,CAACC,OAAO,CAAC,CAACG,MAAM,EAAEC,WAAW,KAAK;UAC7C,IAAIC,EAAE,EAAEC,EAAE;UACV,MAAM;YAAEC,OAAO,GAAG,CAAC;YAAEC,OAAO,GAAG;UAAE,CAAC,GAAG,CAACF,EAAE,GAAG,CAACD,EAAE,GAAGX,UAAU,CAACK,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGM,EAAE,CAACI,IAAI,CAACf,UAAU,EAAE;YACxGO,MAAM,EAAEA,MAAM,CAACS,GAAG;YAClBP,MAAM;YACND,QAAQ;YACRE;UACF,CAAC,CAAC,KAAK,IAAI,GAAGE,EAAE,GAAG,CAAC,CAAC;UACrB,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;YAC9BV,IAAI,CAAE,GAAEI,QAAS,IAAGE,WAAY,EAAC,CAAC,GAAG,CAACG,OAAO,EAAEC,OAAO,CAAC;UACzD;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,OAAOV,IAAI;EACb,CAAC,CAAC;EACF,MAAMa,YAAY,GAAGnB,QAAQ,CAAC,MAAM;IAClC,MAAMoB,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMC,QAAQ,IAAIC,MAAM,CAACC,IAAI,CAAClB,SAAS,CAACE,KAAK,CAAC,EAAE;MACnD,MAAMiB,UAAU,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKC,MAAM,CAACD,IAAI,CAAC,CAAC;MAClE,MAAMrB,IAAI,GAAGD,SAAS,CAACE,KAAK,CAACc,QAAQ,CAAC;MACtC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,IAAI,CAAC,CAAC,CAAC,EAAEuB,CAAC,EAAE,EAAE;QAChCT,KAAK,CAACU,IAAI,CAAE,GAAEN,UAAU,CAAC,CAAC,CAAC,GAAGK,CAAE,IAAGL,UAAU,CAAC,CAAC,CAAE,EAAC,CAAC;QACnD,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,IAAI,CAAC,CAAC,CAAC,EAAEyB,CAAC,EAAE,EAAE;UAChCX,KAAK,CAACU,IAAI,CAAE,GAAEN,UAAU,CAAC,CAAC,CAAC,GAAGK,CAAE,IAAGL,UAAU,CAAC,CAAC,CAAC,GAAGO,CAAE,EAAC,CAAC;QACzD;MACF;MACA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,IAAI,CAAC,CAAC,CAAC,EAAEuB,CAAC,EAAE,EAAE;QAChCT,KAAK,CAACU,IAAI,CAAE,GAAEN,UAAU,CAAC,CAAC,CAAE,IAAGA,UAAU,CAAC,CAAC,CAAC,GAAGK,CAAE,EAAC,CAAC;MACrD;IACF;IACA,OAAOT,KAAK;EACd,CAAC,CAAC;EACF,OAAO;IACLf,SAAS;IACTc;EACF,CAAC;AACH,CAAC;AACD,SAASlB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}