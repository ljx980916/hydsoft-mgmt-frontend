{"ast":null,"code":"import isFunction from './is-function';\n/**\n * _.memoize(calColor);\n * _.memoize(calColor, (...args) => args[0]);\n * @param f\n * @param resolver\n */\nexport default (function (f, resolver) {\n  if (!isFunction(f)) {\n    throw new TypeError('Expected a function');\n  }\n  var memoized = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    // 使用方法构造 key，如果不存在 resolver，则直接取第一个参数作为 key\n    var key = resolver ? resolver.apply(this, args) : args[0];\n    var cache = memoized.cache;\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = f.apply(this, args);\n    // 缓存起来\n    cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new Map();\n  return memoized;\n});","map":{"version":3,"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AAEtC;;;;;;AAMA,gBAAe,UAACC,CAAW,EAAEC,QAAqC;EAChE,IAAI,CAACF,UAAU,CAACC,CAAC,CAAC,EAAE;IAClB,MAAM,IAAIE,SAAS,CAAC,qBAAqB,CAAC;;EAG5C,IAAMC,QAAQ,GAAG;IAAU;SAAA,UAAO,EAAPC,qBAAO,EAAPA,IAAO;MAAPC;;IACzB;IACA,IAAMC,GAAG,GAAGL,QAAQ,GAAGA,QAAQ,CAACM,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;IAC3D,IAAMG,KAAK,GAAGL,QAAQ,CAACK,KAAK;IAE5B,IAAIA,KAAK,CAACC,GAAG,CAACH,GAAG,CAAC,EAAE;MAClB,OAAOE,KAAK,CAACE,GAAG,CAACJ,GAAG,CAAC;;IAEvB,IAAMK,MAAM,GAAGX,CAAC,CAACO,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;IAClC;IACAG,KAAK,CAACI,GAAG,CAACN,GAAG,EAAEK,MAAM,CAAC;IACtB,OAAOA,MAAM;EACf,CAAC;EAEDR,QAAQ,CAACK,KAAK,GAAG,IAAIK,GAAG,EAAE;EAE1B,OAAOV,QAAQ;AACjB,CAAC","names":["isFunction","f","resolver","TypeError","memoized","_i","args","key","apply","cache","has","get","result","set","Map"],"sourceRoot":"src/","sources":["lodash/memoize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}