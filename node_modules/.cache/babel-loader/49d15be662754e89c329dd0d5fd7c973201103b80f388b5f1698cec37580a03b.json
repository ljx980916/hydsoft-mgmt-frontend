{"ast":null,"code":"import { head, isNil, last } from '@antv/util';\nimport extended from '../util/extended';\nimport interval from '../util/interval';\nimport strictLimit from '../util/strict-limit';\n/**\n * 计算线性的 ticks，使用 wilkinson extended 方法\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function linear(cfg) {\n  var min = cfg.min,\n    max = cfg.max,\n    tickCount = cfg.tickCount,\n    nice = cfg.nice,\n    tickInterval = cfg.tickInterval,\n    minLimit = cfg.minLimit,\n    maxLimit = cfg.maxLimit;\n  var ticks = extended(min, max, tickCount, nice).ticks;\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\n    return strictLimit(cfg, head(ticks), last(ticks));\n  }\n  if (tickInterval) {\n    return interval(min, max, tickInterval).ticks;\n  }\n  return ticks;\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,YAAY;AAE9C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,sBAAsB;AAE9C;;;;;AAKA,eAAc,SAAUC,MAAM,CAACC,GAAgB;EACrC,OAAG,GAA6DA,GAAG,IAAhE;IAAEC,GAAG,GAAwDD,GAAG,IAA3D;IAAEE,SAAS,GAA6CF,GAAG,UAAhD;IAAEG,IAAI,GAAuCH,GAAG,KAA1C;IAAEI,YAAY,GAAyBJ,GAAG,aAA5B;IAAEK,QAAQ,GAAeL,GAAG,SAAlB;IAAEM,QAAQ,GAAKN,GAAG,SAAR;EACnE,IAAMO,KAAK,GAAGX,QAAQ,CAACY,GAAG,EAAEP,GAAG,EAAEC,SAAS,EAAEC,IAAI,CAAC,CAACI,KAAK;EAEvD,IAAI,CAACb,KAAK,CAACW,QAAQ,CAAC,IAAI,CAACX,KAAK,CAACY,QAAQ,CAAC,EAAE;IACxC,OAAOR,WAAW,CAACE,GAAG,EAAEP,IAAI,CAACc,KAAK,CAAC,EAAEZ,IAAI,CAACY,KAAK,CAAC,CAAC;;EAEnD,IAAIH,YAAY,EAAE;IAChB,OAAOP,QAAQ,CAACW,GAAG,EAAEP,GAAG,EAAEG,YAAY,CAAC,CAACG,KAAK;;EAE/C,OAAOA,KAAK;AACd","names":["head","isNil","last","extended","interval","strictLimit","linear","cfg","max","tickCount","nice","tickInterval","minLimit","maxLimit","ticks","min"],"sourceRoot":"","sources":["../../src/tick-method/linear.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}