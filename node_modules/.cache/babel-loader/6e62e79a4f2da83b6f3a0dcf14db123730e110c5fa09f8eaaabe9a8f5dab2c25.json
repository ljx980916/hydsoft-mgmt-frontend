{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DagreCompoundLayout = void 0;\nvar base_1 = require(\"./base\");\nvar dagre_compound_1 = require(\"dagre-compound\");\nvar util_1 = require(\"../util\");\nvar DagreCompoundLayout = /** @class */function (_super) {\n  __extends(DagreCompoundLayout, _super);\n  function DagreCompoundLayout(options) {\n    var _this = _super.call(this) || this;\n    /** layout 方向, 可选 TB, BT, LR, RL */\n    _this.rankdir = 'TB';\n    /** 节点水平间距(px) */\n    _this.nodesep = 50;\n    /** 边水平间距(px) */\n    _this.edgesep = 5;\n    /** 每一层节点之间间距 */\n    _this.ranksep = 50;\n    /** 是否保留布局连线的控制点 */\n    _this.controlPoints = true;\n    /** 是否保留使用布局计算的锚点 */\n    _this.anchorPoint = true;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.combos = [];\n    /** 迭代结束的回调函数 */\n    _this.onLayoutEnd = function () {};\n    _this.updateCfg(options);\n    return _this;\n  }\n  DagreCompoundLayout.prototype.getDefaultCfg = function () {\n    return {\n      rankdir: 'TB',\n      align: undefined,\n      begin: undefined,\n      nodeSize: undefined,\n      nodesep: 50,\n      ranksep: 50,\n      controlPoints: true,\n      anchorPoint: true // 是否使用布局计算的锚点\n    };\n  };\n\n  DagreCompoundLayout.prototype.init = function (data) {\n    var hiddenNodes = data.hiddenNodes || []; // 被隐藏的节点\n    var hiddenEdges = data.hiddenEdges || []; // 被隐藏的边\n    var hiddenCombos = data.hiddenCombos || []; // 赋值 hiddenCombos\n    // 确保此次排序按照用户输入顺序\n    this.nodes = this.getDataByOrder((data.nodes || []).concat(hiddenNodes));\n    this.edges = this.getDataByOrder((data.edges || []).concat(hiddenEdges));\n    this.combos = (data.combos || []).concat(hiddenCombos.map(function (hc) {\n      return __assign(__assign({}, hc), {\n        collapsed: true\n      });\n    }));\n  };\n  DagreCompoundLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges;\n    if (!nodes) return;\n    var _a = self.getLayoutConfig(),\n      graphDef = _a.graphDef,\n      graphOption = _a.graphOption,\n      graphSettings = _a.graphSettings;\n    var renderInfo = (0, dagre_compound_1.buildGraph)(graphDef, graphOption, graphSettings);\n    var flattenedRenderInfo = (0, dagre_compound_1.flatGraph)(renderInfo, true); // 打平数据进行遍历\n    this.updatePosition(flattenedRenderInfo);\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n  /**\n   * combo 模式下查找节点完整路径\n   * @param nodeId\n   * @private\n   */\n  DagreCompoundLayout.prototype.getNodePath = function (nodeId) {\n    var self = this;\n    var nodes = self.nodes,\n      combos = self.combos;\n    var targetNode = nodes.find(function (n) {\n      return n.id === nodeId;\n    });\n    var findPath = function (comboId, fullPath) {\n      if (fullPath === void 0) {\n        fullPath = [];\n      }\n      var combo = combos.find(function (c) {\n        return c.id === comboId;\n      });\n      if (combo) {\n        fullPath.unshift(comboId);\n        if (combo.parentId) {\n          return findPath(combo.parentId, fullPath);\n        }\n        return fullPath;\n      }\n      return fullPath;\n    };\n    if (targetNode && targetNode.comboId) {\n      return findPath(targetNode.comboId, [nodeId]);\n    }\n    return [nodeId];\n  };\n  /** 准备 dagre-compound 布局参数 */\n  DagreCompoundLayout.prototype.getLayoutConfig = function () {\n    var _a, _b, _c;\n    var self = this;\n    var nodes = self.nodes,\n      edges = self.edges,\n      combos = self.combos,\n      nodeSize = self.nodeSize,\n      rankdir = self.rankdir,\n      align = self.align,\n      edgesep = self.edgesep,\n      nodesep = self.nodesep,\n      ranksep = self.ranksep,\n      settings = self.settings;\n    var compound = (combos || []).reduce(function (pre, cur) {\n      var matchedNodes = nodes.filter(function (n) {\n        return n.comboId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n      var matchedCombos = (combos || []).filter(function (n) {\n        return n.parentId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n      if (matchedNodes.length || matchedCombos.length) {\n        pre[cur.id] = __spreadArray(__spreadArray([], matchedNodes, true), matchedCombos, true);\n      }\n      return pre;\n    }, {});\n    /** 计算 nodeSize */\n    var nodeSizeFunc;\n    if (!nodeSize) {\n      nodeSizeFunc = function (d) {\n        if (d && d.size) {\n          if ((0, util_1.isArray)(d.size)) {\n            return d.size;\n          }\n          if ((0, util_1.isObject)(d.size)) {\n            return [d.size.width || 40, d.size.height || 40];\n          }\n          return [d.size, d.size];\n        }\n        return [40, 40];\n      };\n    } else if ((0, util_1.isArray)(nodeSize)) {\n      nodeSizeFunc = function () {\n        return nodeSize;\n      };\n    } else {\n      nodeSizeFunc = function () {\n        return [nodeSize, nodeSize];\n      };\n    }\n    /** 计算 comboSize */\n    var comboSizeFunc = function (d) {\n      if (d && d.size) {\n        if ((0, util_1.isArray)(d.size)) {\n          return d.size;\n        }\n        return [d.size, d.size];\n      }\n      return [80, 40];\n    };\n    // 接受 defaultCombo 设置的 size\n    var _d = comboSizeFunc(combos === null || combos === void 0 ? void 0 : combos[0]),\n      metaWidth = _d[0],\n      metaHeight = _d[1];\n    // 初始化 padding\n    var subSceneMeta = (_b = (_a = self.graphSettings) === null || _a === void 0 ? void 0 : _a.subScene) === null || _b === void 0 ? void 0 : _b.meta;\n    var _e = ((_c = combos.find(function (c) {\n        return !c.collapsed;\n      })) === null || _c === void 0 ? void 0 : _c.padding) || [20, 20, 20, 20],\n      paddingTop = _e[0],\n      paddingRight = _e[1],\n      paddingBottom = _e[2],\n      paddingLeft = _e[3];\n    var graphDef = {\n      compound: compound,\n      nodes: __spreadArray([], (nodes || []).map(function (n) {\n        var size = nodeSizeFunc(n);\n        var width = size[0];\n        var height = size[1];\n        return __assign(__assign({}, n), {\n          width: width,\n          height: height\n        });\n      }), true),\n      edges: __spreadArray([], (edges || []).map(function (e) {\n        return __assign(__assign({}, e), {\n          v: e.source,\n          w: e.target\n        });\n      }), true)\n    };\n    // 需要展开的节点\n    var graphOption = {\n      expanded: (combos || []).filter(function (c) {\n        return !c.collapsed;\n      }).map(function (c) {\n        return c.id;\n      })\n    };\n    // dagre-compound 布局参数\n    var graphMetaConfig = {\n      graph: {\n        meta: {\n          align: align,\n          rankDir: rankdir,\n          nodeSep: nodesep,\n          edgeSep: edgesep,\n          rankSep: ranksep\n        }\n      },\n      subScene: {\n        meta: {\n          paddingTop: paddingTop || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop) || 20,\n          paddingRight: paddingRight || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight) || 20,\n          paddingBottom: paddingBottom || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom) || 20,\n          paddingLeft: paddingLeft || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft) || 20,\n          labelHeight: 0\n        }\n      },\n      nodeSize: {\n        meta: {\n          width: metaWidth,\n          height: metaHeight\n        }\n      }\n    };\n    // 合并用户输入的内容\n    var graphSettings = (0, dagre_compound_1.mergeConfig)(settings, __assign({}, (0, dagre_compound_1.mergeConfig)(graphMetaConfig, dagre_compound_1.LAYOUT_CONFIG)));\n    self.graphSettings = graphSettings;\n    return {\n      graphDef: graphDef,\n      graphOption: graphOption,\n      graphSettings: graphSettings\n    };\n  };\n  /** 更新节点与边位置 */\n  DagreCompoundLayout.prototype.updatePosition = function (flattenedGraph) {\n    var nodes = flattenedGraph.nodes,\n      edges = flattenedGraph.edges;\n    this.updateNodePosition(nodes, edges);\n    this.updateEdgePosition(nodes, edges);\n  };\n  DagreCompoundLayout.prototype.getBegin = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var begin = self.begin;\n    var dBegin = [0, 0];\n    if (begin) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      flattenedNodes.forEach(function (node) {\n        if (minX_1 > node.x) minX_1 = node.x;\n        if (minY_1 > node.y) minY_1 = node.y;\n      });\n      flattenedEdges.forEach(function (edge) {\n        edge.points.forEach(function (point) {\n          if (minX_1 > point.x) minX_1 = point.x;\n          if (minY_1 > point.y) minY_1 = point.y;\n        });\n      });\n      dBegin[0] = begin[0] - minX_1;\n      dBegin[1] = begin[1] - minY_1;\n    }\n    return dBegin;\n  };\n  DagreCompoundLayout.prototype.updateNodePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n      nodes = self.nodes,\n      edges = self.edges,\n      anchorPoint = self.anchorPoint,\n      graphSettings = self.graphSettings;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n    flattenedNodes.forEach(function (node) {\n      var _a;\n      var x = node.x,\n        y = node.y,\n        id = node.id,\n        type = node.type,\n        coreBox = node.coreBox;\n      if (type === dagre_compound_1.HierarchyNodeType.META && id !== dagre_compound_1.ROOT_NAME) {\n        var i = combos.findIndex(function (item) {\n          return item.id === id;\n        });\n        var subSceneMeta = (_a = graphSettings === null || graphSettings === void 0 ? void 0 : graphSettings.subScene) === null || _a === void 0 ? void 0 : _a.meta;\n        // 将布局生成的 combo 位置暂存至 offsetX offsetY\n        combos[i].offsetX = x + dBegin[0];\n        combos[i].offsetY = y + dBegin[1];\n        combos[i].fixSize = [coreBox.width, coreBox.height];\n        combos[i].fixCollapseSize = [coreBox.width, coreBox.height];\n        // 如果设置了收起时隐藏 padding，则手动优化 combo padding 信息，展开的话则恢复\n        if (!node.expanded) {\n          combos[i].padding = [0, 0, 0, 0];\n        } else {\n          combos[i].padding = [subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft];\n        }\n      } else if (type === dagre_compound_1.HierarchyNodeType.OP) {\n        var i = nodes.findIndex(function (item) {\n          return item.id === id;\n        });\n        nodes[i].x = x + dBegin[0];\n        nodes[i].y = y + dBegin[1];\n        if (anchorPoint) {\n          var anchorPoints_1 = [];\n          var outEdges = flattenedEdges.filter(function (e) {\n            return e.v === id;\n          });\n          var inEdges = flattenedEdges.filter(function (e) {\n            return e.w === id;\n          });\n          // 指定出边锚点，锚点中心点为 [0.5, 0.5]\n          if (outEdges.length > 0) {\n            outEdges.forEach(function (outEdge) {\n              var firstPoint = outEdge.points[0];\n              var anchorPointX = (firstPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (firstPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]);\n              // 出边对应 source 边锚点\n              outEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n                if (edge) {\n                  edge.sourceAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          }\n          // 指定入边锚点\n          if (inEdges.length > 0) {\n            inEdges.forEach(function (inEdge) {\n              var lastPoint = inEdge.points[inEdge.points.length - 1];\n              var anchorPointX = (lastPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (lastPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]);\n              // 出边对应 source 锚点\n              inEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n                if (edge) {\n                  edge.targetAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          }\n          nodes[i].anchorPoints = anchorPoints_1.length > 0 ? anchorPoints_1 : nodes[i].anchorPoints || [];\n        }\n      }\n    });\n  };\n  DagreCompoundLayout.prototype.updateEdgePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n      edges = self.edges,\n      controlPoints = self.controlPoints;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n    if (controlPoints) {\n      combos.forEach(function (combo) {\n        combo.inEdges = [];\n        combo.outEdges = [];\n      });\n      edges.forEach(function (sourceEdge) {\n        var _a, _b, _c, _d;\n        var sourceNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.source;\n        });\n        var targetNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.target;\n        });\n        // Combo 收起状态，dagre-compound 不会渲染该节点，边需要使用到 group 的边作为补充\n        var points = [];\n        var sortedEdges = [];\n        if (sourceNode && targetNode) {\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes);\n        } else if (!sourceNode || !targetNode) {\n          /** 存在收起节点时，需要重新计算边的 controlPoints，确保线正常 */\n          // 情况1：目标节点被收起了，向上寻找该节点最近一个存在的父节点\n          var sourceNodePath = self.getNodePath(sourceEdge.source);\n          var targetNodePath = self.getNodePath(sourceEdge.target);\n          var lastExistingSource_1 = sourceNodePath.reverse().slice(!sourceNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          var lastExistingTarget_1 = targetNodePath.reverse().slice(!targetNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          sourceNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingSource_1;\n          });\n          targetNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingTarget_1;\n          });\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes, {\n            v: sourceEdge.source,\n            w: sourceEdge.target\n          });\n        }\n        points = sortedEdges.reduce(function (pre, cur) {\n          return __spreadArray(__spreadArray([], pre, true), cur.points.map(function (p) {\n            return __assign(__assign({}, p), {\n              x: p.x + dBegin[0],\n              y: p.y + dBegin[1]\n            });\n          }), true);\n        }, []);\n        // 取消首尾节点\n        points = points.slice(1, -1);\n        sourceEdge.controlPoints = points;\n        if ((targetNode === null || targetNode === void 0 ? void 0 : targetNode.type) === dagre_compound_1.NodeType.META) {\n          // combo 节点控制点\n          var i = combos.findIndex(function (item) {\n            return item.id === (targetNode === null || targetNode === void 0 ? void 0 : targetNode.id);\n          });\n          if (!combos[i] || ((_a = combos[i].inEdges) === null || _a === void 0 ? void 0 : _a.some(function (inEdge) {\n            return inEdge.source === sourceNode.id && inEdge.target === targetNode.id;\n          }))) {\n            return;\n          }\n          (_b = combos[i].inEdges) === null || _b === void 0 ? void 0 : _b.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n        if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === dagre_compound_1.NodeType.META) {\n          var i = combos.findIndex(function (item) {\n            return item.id === (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id);\n          });\n          if (!combos[i] || ((_c = combos[i].outEdges) === null || _c === void 0 ? void 0 : _c.some(function (oedge) {\n            return oedge.source === sourceNode.id && oedge.target === targetNode.id;\n          }))) {\n            return;\n          }\n          (_d = combos[i].outEdges) === null || _d === void 0 ? void 0 : _d.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n      });\n    }\n  };\n  DagreCompoundLayout.prototype.getType = function () {\n    return 'dagreCompound';\n  };\n  /**\n   * 确保布局使用的数据与用户输入数据顺序一致\n   * 通过 layoutOrder 排序 节点 与 边\n   * @param list\n   * @private\n   */\n  DagreCompoundLayout.prototype.getDataByOrder = function (list) {\n    if (list.every(function (n) {\n      return n.layoutOrder !== undefined;\n    })) {\n      // 所有数据均设置过索引，表示仅布局，数据未变化，无需处理\n    } else {\n      // 首次布局或动态添加删减节点时重新赋值\n      list.forEach(function (n, i) {\n        n.layoutOrder = i;\n      });\n    }\n    // 按照 layoutOrder 排序\n    return list.sort(function (pre, cur) {\n      return pre.layoutOrder - cur.layoutOrder;\n    });\n  };\n  return DagreCompoundLayout;\n}(base_1.Base);\nexports.DagreCompoundLayout = DagreCompoundLayout;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAmBA;AA4DA;EAAyCA;EAwCrC,6BAAYC,OAAoC;IAAhD,YACIC,iBAAO;IAxCX;IACOC,aAAO,GAA8B,IAAI;IAWhD;IACOA,aAAO,GAAW,EAAE;IAE3B;IACOA,aAAO,GAAW,CAAC;IAE1B;IACOA,aAAO,GAAW,EAAE;IAE3B;IACOA,mBAAa,GAAY,IAAI;IAEpC;IACOA,iBAAW,GAAY,IAAI;IAK3BA,WAAK,GAAW,EAAE;IAClBA,WAAK,GAAW,EAAE;IAClBA,YAAM,GAAgB,EAAE;IAK/B;IACOA,iBAAW,GAAe,aAAO,CAAC;IAGrCA,KAAI,CAACC,SAAS,CAACH,OAAO,CAAC;;EAC3B;EAEOI,2CAAa,GAApB;IACI,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAEC,SAAS;MAChBC,KAAK,EAAED,SAAS;MAChBE,QAAQ,EAAEF,SAAS;MACnBG,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,IAAI,CAAC;KACrB;EACL,CAAC;;EAEMT,kCAAI,GAAX,UAAYU,IAAe;IACvB,IAAMC,WAAW,GAAGD,IAAI,CAACC,WAAW,IAAI,EAAE,CAAC,CAAC;IAC5C,IAAMC,WAAW,GAAGF,IAAI,CAACE,WAAW,IAAI,EAAE,CAAC,CAAC;IAC5C,IAAMC,YAAY,GAAGH,IAAI,CAACG,YAAY,IAAI,EAAE,CAAC,CAAC;IAC9C;IACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,cAAc,CAAC,CAACL,IAAI,CAACI,KAAK,IAAI,EAAE,EAAEE,MAAM,CAACL,WAAW,CAAC,CAAC;IACxE,IAAI,CAACM,KAAK,GAAG,IAAI,CAACF,cAAc,CAAC,CAACL,IAAI,CAACO,KAAK,IAAI,EAAE,EAAED,MAAM,CAACJ,WAAW,CAAC,CAAC;IACxE,IAAI,CAACM,MAAM,GAAG,CAACR,IAAI,CAACQ,MAAM,IAAI,EAAE,EAAEF,MAAM,CAACH,YAAY,CAACM,GAAG,CAAC,UAACC,EAAE;MAAK,6BAAMA,EAAE;QAAEC,SAAS,EAAE;MAAI;IAAzB,CAA4B,CAAC,CAAC;EACpG,CAAC;EAEMrB,qCAAO,GAAd;IACI,IAAMsB,IAAI,GAAG,IAAI;IACT,SAAK,GAAYA,IAAI,MAAhB;MAAEL,KAAK,GAAKK,IAAI,MAAT;IACpB,IAAI,CAACR,KAAK,EAAE;IAEN,SAA2CQ,IAAI,CAACC,eAAe,EAAE;MAA/DC,QAAQ;MAAEC,WAAW;MAAEC,aAAa,mBAA2B;IACvE,IAAMC,UAAU,GAAG,+BAAU,EAACH,QAAQ,EAAEC,WAAW,EAAEC,aAAa,CAAC;IACnE,IAAME,mBAAmB,GAAG,8BAAS,EAACD,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IACzD,IAAI,CAACE,cAAc,CAACD,mBAAmB,CAAC;IAExC,IAAIN,IAAI,CAACQ,WAAW,EAAER,IAAI,CAACQ,WAAW,EAAE;IAExC,OAAO;MACHhB,KAAK;MACLG,KAAK;KACR;EACL,CAAC;EAED;;;;;EAKQjB,yCAAW,GAAnB,UAAoB+B,MAAc;IAC9B,IAAMT,IAAI,GAAG,IAAI;IACT,SAAK,GAAaA,IAAI,MAAjB;MAAEJ,MAAM,GAAKI,IAAI,OAAT;IACrB,IAAMU,UAAU,GAAGlB,KAAK,CAACmB,IAAI,CAAC,UAACC,CAAC;MAAK,QAAC,CAACC,EAAE,KAAKJ,MAAM;IAAf,CAAe,CAAC;IACrD,IAAMK,QAAQ,GAAG,UAACC,OAAe,EAAEC,QAAuB;MAAvB;QAAAA,aAAuB;MAAA;MACtD,IAAMC,KAAK,GAAGrB,MAAM,CAACe,IAAI,CAAC,UAACO,CAAC;QAAK,QAAC,CAACL,EAAE,KAAKE,OAAO;MAAhB,CAAgB,CAAC;MAClD,IAAIE,KAAK,EAAE;QACPD,QAAQ,CAACG,OAAO,CAACJ,OAAO,CAAC;QACzB,IAAIE,KAAK,CAACG,QAAQ,EAAE;UAChB,OAAON,QAAQ,CAACG,KAAK,CAACG,QAAQ,EAAEJ,QAAQ,CAAC;;QAE7C,OAAOA,QAAQ;;MAEnB,OAAOA,QAAQ;IACnB,CAAC;IACD,IAAIN,UAAU,IAAIA,UAAU,CAACK,OAAO,EAAE;MAClC,OAAOD,QAAQ,CAACJ,UAAU,CAACK,OAAO,EAAE,CAACN,MAAM,CAAC,CAAC;;IAEjD,OAAO,CAACA,MAAM,CAAC;EACnB,CAAC;EAED;EACQ/B,6CAAe,GAAvB;;IACI,IAAMsB,IAAI,GAAG,IAAI;IACT,SAAK,GAAmFA,IAAI,MAAvF;MAAEL,KAAK,GAA4EK,IAAI,MAAhF;MAAEJ,MAAM,GAAoEI,IAAI,OAAxE;MAAEjB,QAAQ,GAA0DiB,IAAI,SAA9D;MAAErB,OAAO,GAAiDqB,IAAI,QAArD;MAAEpB,KAAK,GAA0CoB,IAAI,MAA9C;MAAEqB,OAAO,GAAiCrB,IAAI,QAArC;MAAEhB,OAAO,GAAwBgB,IAAI,QAA5B;MAAEf,OAAO,GAAee,IAAI,QAAnB;MAAEsB,QAAQ,GAAKtB,IAAI,SAAT;IAC3F,IAAMuB,QAAQ,GAAG,CAAC3B,MAAM,IAAI,EAAE,EAAE4B,MAAM,CAAC,UAACC,GAA8B,EAAEC,GAAG;MACvE,IAAMC,YAAY,GAAGnC,KAAK,CAACoC,MAAM,CAAC,UAAChB,CAAC;QAAK,QAAC,CAACG,OAAO,KAAKW,GAAG,CAACb,EAAE;MAApB,CAAoB,CAAC,CAAChB,GAAG,CAAC,UAACe,CAAC;QAAK,QAAC,CAACC,EAAE;MAAJ,CAAI,CAAC;MAC/E,IAAMgB,aAAa,GAAG,CAACjC,MAAM,IAAI,EAAE,EAAEgC,MAAM,CAAC,UAAChB,CAAC;QAAK,QAAC,CAACQ,QAAQ,KAAKM,GAAG,CAACb,EAAE;MAArB,CAAqB,CAAC,CAAChB,GAAG,CAAC,UAACe,CAAC;QAAK,QAAC,CAACC,EAAE;MAAJ,CAAI,CAAC;MAC1F,IAAIc,YAAY,CAACG,MAAM,IAAID,aAAa,CAACC,MAAM,EAAE;QAC7CL,GAAG,CAACC,GAAG,CAACb,EAAE,CAAC,mCAAOc,YAAY,SAAKE,aAAa,OAAC;;MAErD,OAAOJ,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;IAEN;IACA,IAAIM,YAAoC;IACxC,IAAI,CAAChD,QAAQ,EAAE;MACXgD,YAAY,GAAG,UAACC,CAAQ;QACpB,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE;UACb,IAAI,kBAAO,EAACD,CAAC,CAACC,IAAI,CAAC,EAAE;YACjB,OAAOD,CAAC,CAACC,IAAI;;UAEjB,IAAI,mBAAQ,EAACD,CAAC,CAACC,IAAI,CAAC,EAAE;YAClB,OAAO,CAACD,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI,EAAE,EAAEF,CAAC,CAACC,IAAI,CAACE,MAAM,IAAI,EAAE,CAAC;;UAEpD,OAAO,CAACH,CAAC,CAACC,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC;;QAE3B,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;MACnB,CAAC;KACJ,MAAM,IAAI,kBAAO,EAAClD,QAAQ,CAAC,EAAE;MAC1BgD,YAAY,GAAG;QAAM,eAAQ;MAAR,CAAQ;KAChC,MAAM;MACHA,YAAY,GAAG;QAAM,QAAChD,QAAQ,EAAEA,QAAQ,CAAC;MAApB,CAAoB;;IAG7C;IACA,IAAMqD,aAAa,GAAgC,UAACJ,CAAa;MAC7D,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE;QACb,IAAI,kBAAO,EAACD,CAAC,CAACC,IAAI,CAAC,EAAE;UACjB,OAAOD,CAAC,CAACC,IAAI;;QAEjB,OAAO,CAACD,CAAC,CAACC,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC;;MAE3B,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;IACnB,CAAC;IAED;IACM,SAA0BG,aAAa,CAACxC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC,CAAC,CAAC;MAAnDyC,SAAS;MAAEC,UAAU,QAA8B;IAC1D;IACA,IAAMC,YAAY,GAAG,gBAAI,CAACnC,aAAa,0CAAEoC,QAAQ,0CAAEC,IAAI;IACjD,SAAyD,aAAM,CAAC9B,IAAI,CAAC,UAACO,CAAC;QAAK,QAACA,CAAC,CAACnB,SAAS;MAAZ,CAAY,CAAC,0CAAE2C,OAAO,KAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAArHC,UAAU;MAAEC,YAAY;MAAEC,aAAa;MAAEC,WAAW,QAAiE;IAC5H,IAAM5C,QAAQ,GAAG;MACbqB,QAAQ;MACR/B,KAAK,oBACE,CAACA,KAAK,IAAI,EAAE,EAAEK,GAAG,CAAC,UAACe,CAAC;QACnB,IAAMqB,IAAI,GAAGF,YAAY,CAACnB,CAAC,CAAC;QAC5B,IAAMsB,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC;QACrB,IAAME,MAAM,GAAGF,IAAI,CAAC,CAAC,CAAC;QACtB,6BAAYrB,CAAC;UAAEsB,KAAK;UAAEC,MAAM;QAAA;MAChC,CAAC,CAAC,OACL;MACDxC,KAAK,oBAAM,CAACA,KAAK,IAAI,EAAE,EAAEE,GAAG,CAAC,UAACkD,CAAC;QAAK,6BAAMA,CAAC;UAAEC,CAAC,EAAED,CAAC,CAACE,MAAM;UAAEC,CAAC,EAAEH,CAAC,CAACI;QAAM;MAAjC,CAAoC,CAAC;KAC5E;IAED;IACA,IAAMhD,WAAW,GAAG;MAChBiD,QAAQ,EAAE,CAACxD,MAAM,IAAI,EAAE,EAAEgC,MAAM,CAAC,UAACV,CAAC;QAAK,QAACA,CAAC,CAACnB,SAAS;MAAZ,CAAY,CAAC,CAACF,GAAG,CAAC,UAACqB,CAAC;QAAK,QAAC,CAACL,EAAE;MAAJ,CAAI;KACvE;IAED;IACA,IAAMwC,eAAe,GAA8B;MAC/CC,KAAK,EAAE;QACHb,IAAI,EAAE;UACF7D,KAAK;UACL2E,OAAO,EAAE5E,OAAO;UAChB6E,OAAO,EAAExE,OAAO;UAChByE,OAAO,EAAEpC,OAAO;UAChBqC,OAAO,EAAEzE;;OAEhB;MACDuD,QAAQ,EAAE;QACNC,IAAI,EAAE;UACFE,UAAU,EAAEA,UAAU,KAAIJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,UAAU,KAAI,EAAE;UACxDC,YAAY,EAAEA,YAAY,KAAIL,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,YAAY,KAAI,EAAE;UAC9DC,aAAa,EAAEA,aAAa,KAAIN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,aAAa,KAAI,EAAE;UACjEC,WAAW,EAAEA,WAAW,KAAIP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,WAAW,KAAI,EAAE;UAC3Da,WAAW,EAAE;;OAEpB;MACD5E,QAAQ,EAAE;QACN0D,IAAI,EAAE;UACFP,KAAK,EAAEG,SAAS;UAChBF,MAAM,EAAEG;;;KAGnB;IAED;IACA,IAAMlC,aAAa,GAAG,gCAAW,EAACkB,QAAQ,eACnC,gCAAW,EAAC+B,eAAe,EAAEO,8BAAa,CAAC,EAChD;IACF5D,IAAI,CAACI,aAAa,GAAGA,aAAa;IAElC,OAAO;MACHF,QAAQ;MACRC,WAAW;MACXC,aAAa;KAChB;EACL,CAAC;EAED;EACQ1B,4CAAc,GAAtB,UAAuBmF,cAA2C;IACtD,SAAK,GAAYA,cAAc,MAA1B;MAAElE,KAAK,GAAKkE,cAAc,MAAnB;IACpB,IAAI,CAACC,kBAAkB,CAACtE,KAAK,EAAEG,KAAK,CAAC;IACrC,IAAI,CAACoE,kBAAkB,CAACvE,KAAK,EAAEG,KAAK,CAAC;EACzC,CAAC;EAEOjB,sCAAQ,GAAhB,UACIsF,cAAkE,EAClEC,cAAuC;IAEvC,IAAMjE,IAAI,GAAG,IAAI;IACT,SAAK,GAAKA,IAAI,MAAT;IAEb,IAAMkE,MAAM,GAAe,CAAC,CAAC,EAAE,CAAC,CAAC;IACjC,IAAIpF,KAAK,EAAE;MACP,IAAIqF,MAAI,GAAGC,QAAQ;MACnB,IAAIC,MAAI,GAAGD,QAAQ;MACnBJ,cAAc,CAACM,OAAO,CAAC,UAACC,IAAI;QACxB,IAAIJ,MAAI,GAAGI,IAAI,CAACC,CAAC,EAAEL,MAAI,GAAGI,IAAI,CAACC,CAAC;QAChC,IAAIH,MAAI,GAAGE,IAAI,CAACE,CAAC,EAAEJ,MAAI,GAAGE,IAAI,CAACE,CAAC;MACpC,CAAC,CAAC;MACFR,cAAc,CAACK,OAAO,CAAC,UAACI,IAAI;QACxBA,IAAI,CAACC,MAAM,CAACL,OAAO,CAAC,UAACM,KAAK;UACtB,IAAIT,MAAI,GAAGS,KAAK,CAACJ,CAAC,EAAEL,MAAI,GAAGS,KAAK,CAACJ,CAAC;UAClC,IAAIH,MAAI,GAAGO,KAAK,CAACH,CAAC,EAAEJ,MAAI,GAAGO,KAAK,CAACH,CAAC;QACtC,CAAC,CAAC;MACN,CAAC,CAAC;MACFP,MAAM,CAAC,CAAC,CAAC,GAAGpF,KAAK,CAAC,CAAC,CAAC,GAAGqF,MAAI;MAC3BD,MAAM,CAAC,CAAC,CAAC,GAAGpF,KAAK,CAAC,CAAC,CAAC,GAAGuF,MAAI;;IAE/B,OAAOH,MAAM;EACjB,CAAC;EAEOxF,gDAAkB,GAA1B,UACIsF,cAAkE,EAClEC,cAAuC;IAEvC,IAAMjE,IAAI,GAAG,IAAI;IACT,UAAM,GAA+CA,IAAI,OAAnD;MAAER,KAAK,GAAwCQ,IAAI,MAA5C;MAAEL,KAAK,GAAiCK,IAAI,MAArC;MAAEb,WAAW,GAAoBa,IAAI,YAAxB;MAAEI,aAAa,GAAKJ,IAAI,cAAT;IACxD,IAAMkE,MAAM,GAAG,IAAI,CAACW,QAAQ,CAACb,cAAc,EAAEC,cAAc,CAAC;IAE5DD,cAAc,CAACM,OAAO,CAAC,UAACC,IAAI;;MAChB,KAAC,GAA2BA,IAAI,EAA/B;QAAEE,CAAC,GAAwBF,IAAI,EAA5B;QAAE1D,EAAE,GAAoB0D,IAAI,GAAxB;QAAEO,IAAI,GAAcP,IAAI,KAAlB;QAAEQ,OAAO,GAAKR,IAAI,QAAT;MAC/B,IAAIO,IAAI,KAAKlB,kCAAiB,CAACoB,IAAI,IAAInE,EAAE,KAAK+C,0BAAS,EAAE;QACrD,IAAMqB,CAAC,GAAGrF,MAAM,CAACsF,SAAS,CAAC,UAACC,IAAI;UAAK,WAAI,CAACtE,EAAE,KAAKA,EAAE;QAAd,CAAc,CAAC;QACpD,IAAM0B,YAAY,GAAG,mBAAa,aAAbnC,aAAa,uBAAbA,aAAa,CAAEoC,QAAQ,0CAAEC,IAAI;QAClD;QACA7C,MAAM,CAACqF,CAAC,CAAC,CAACG,OAAO,GAAGZ,CAAC,GAAGN,MAAM,CAAC,CAAC,CAAC;QACjCtE,MAAM,CAACqF,CAAC,CAAC,CAACI,OAAO,GAAGZ,CAAC,GAAGP,MAAM,CAAC,CAAC,CAAC;QACjCtE,MAAM,CAACqF,CAAC,CAAC,CAACK,OAAO,GAAG,CAACP,OAAO,CAAC7C,KAAK,EAAE6C,OAAO,CAAC5C,MAAM,CAAC;QACnDvC,MAAM,CAACqF,CAAC,CAAC,CAACM,eAAe,GAAG,CAACR,OAAO,CAAC7C,KAAK,EAAE6C,OAAO,CAAC5C,MAAM,CAAC;QAC3D;QACA,IAAI,CAACoC,IAAI,CAACnB,QAAQ,EAAE;UAChBxD,MAAM,CAACqF,CAAC,CAAC,CAACvC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnC,MAAM;UACH9C,MAAM,CAACqF,CAAC,CAAC,CAACvC,OAAO,GAAG,CAChBH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,UAAW,EACzBJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,YAAa,EAC3BL,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,aAAc,EAC5BN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,WAAY,CAC7B;;OAER,MAAM,IAAIgC,IAAI,KAAKlB,kCAAiB,CAAC4B,EAAE,EAAE;QACtC,IAAMP,CAAC,GAAGzF,KAAK,CAAC0F,SAAS,CAAC,UAACC,IAAI;UAAK,WAAI,CAACtE,EAAE,KAAKA,EAAE;QAAd,CAAc,CAAC;QACnDrB,KAAK,CAACyF,CAAC,CAAC,CAACT,CAAC,GAAGA,CAAC,GAAGN,MAAM,CAAC,CAAC,CAAC;QAC1B1E,KAAK,CAACyF,CAAC,CAAC,CAACR,CAAC,GAAGA,CAAC,GAAGP,MAAM,CAAC,CAAC,CAAC;QAE1B,IAAI/E,WAAW,EAAE;UACb,IAAMsG,cAAY,GAAuB,EAAE;UAC3C,IAAMC,QAAQ,GAAGzB,cAAc,CAACrC,MAAM,CAAC,UAACmB,CAAC;YAAK,QAAC,CAACC,CAAC,KAAKnC,EAAE;UAAV,CAAU,CAAC;UACzD,IAAM8E,OAAO,GAAG1B,cAAc,CAACrC,MAAM,CAAC,UAACmB,CAAC;YAAK,QAAC,CAACG,CAAC,KAAKrC,EAAE;UAAV,CAAU,CAAC;UACxD;UACA,IAAI6E,QAAQ,CAAC5D,MAAM,GAAG,CAAC,EAAE;YACrB4D,QAAQ,CAACpB,OAAO,CAAC,UAACsB,OAAO;cACrB,IAAMC,UAAU,GAAGD,OAAO,CAACjB,MAAM,CAAC,CAAC,CAAC;cACpC,IAAMmB,YAAY,GAAG,CAACD,UAAU,CAACrB,CAAC,GAAGA,CAAC,IAAID,IAAI,CAACrC,KAAK,GAAG,GAAG;cAC1D,IAAM6D,YAAY,GAAG,CAACF,UAAU,CAACpB,CAAC,GAAGA,CAAC,IAAIF,IAAI,CAACpC,MAAM,GAAG,GAAG;cAC3DsD,cAAY,CAACO,IAAI,CAAC,CAACF,YAAY,EAAEC,YAAY,CAAC,CAAC;cAC/C;cACAH,OAAO,CAACK,YAAY,CAAC3B,OAAO,CAAC,UAAC4B,QAAQ;gBAClC,IAAMxB,IAAI,GAAG/E,KAAK,CAACgB,IAAI,CAAC,UAACoC,CAAC;kBAAK,QAAC,CAACE,MAAM,KAAKiD,QAAQ,CAAClD,CAAC,IAAID,CAAC,CAACI,MAAM,KAAK+C,QAAQ,CAAChD,CAAC;gBAAlD,CAAkD,CAAC;gBAClF,IAAIwB,IAAI,EAAE;kBACNA,IAAI,CAACyB,YAAY,GAAGV,cAAY,CAAC3D,MAAM,GAAG,CAAC;;cAEnD,CAAC,CAAC;YACN,CAAC,CAAC;;UAEN;UACA,IAAI6D,OAAO,CAAC7D,MAAM,GAAG,CAAC,EAAE;YACpB6D,OAAO,CAACrB,OAAO,CAAC,UAAC8B,MAAM;cACnB,IAAMC,SAAS,GAAGD,MAAM,CAACzB,MAAM,CAACyB,MAAM,CAACzB,MAAM,CAAC7C,MAAM,GAAG,CAAC,CAAC;cACzD,IAAMgE,YAAY,GAAG,CAACO,SAAS,CAAC7B,CAAC,GAAGA,CAAC,IAAID,IAAI,CAACrC,KAAK,GAAG,GAAG;cACzD,IAAM6D,YAAY,GAAG,CAACM,SAAS,CAAC5B,CAAC,GAAGA,CAAC,IAAIF,IAAI,CAACpC,MAAM,GAAG,GAAG;cAC1DsD,cAAY,CAACO,IAAI,CAAC,CAACF,YAAY,EAAEC,YAAY,CAAC,CAAC;cAC/C;cACAK,MAAM,CAACH,YAAY,CAAC3B,OAAO,CAAC,UAAC4B,QAAQ;gBACjC,IAAMxB,IAAI,GAAG/E,KAAK,CAACgB,IAAI,CAAC,UAACoC,CAAC;kBAAK,QAAC,CAACE,MAAM,KAAKiD,QAAQ,CAAClD,CAAC,IAAID,CAAC,CAACI,MAAM,KAAK+C,QAAQ,CAAChD,CAAC;gBAAlD,CAAkD,CAAC;gBAClF,IAAIwB,IAAI,EAAE;kBACNA,IAAI,CAAC4B,YAAY,GAAGb,cAAY,CAAC3D,MAAM,GAAG,CAAC;;cAEnD,CAAC,CAAC;YACN,CAAC,CAAC;;UAENtC,KAAK,CAACyF,CAAC,CAAC,CAACsB,YAAY,GAAGd,cAAY,CAAC3D,MAAM,GAAG,CAAC,GAAG2D,cAAY,GAAGjG,KAAK,CAACyF,CAAC,CAAC,CAACsB,YAAY,IAAI,EAAE;;;IAGxG,CAAC,CAAC;EACN,CAAC;EAEO7H,gDAAkB,GAA1B,UACIsF,cAAkE,EAClEC,cAAuC;IAEvC,IAAMjE,IAAI,GAAG,IAAI;IACT,UAAM,GAA2BA,IAAI,OAA/B;MAAEL,KAAK,GAAoBK,IAAI,MAAxB;MAAEd,aAAa,GAAKc,IAAI,cAAT;IACpC,IAAMkE,MAAM,GAAG,IAAI,CAACW,QAAQ,CAACb,cAAc,EAAEC,cAAc,CAAC;IAE5D,IAAI/E,aAAa,EAAE;MACfU,MAAM,CAAC0E,OAAO,CAAC,UAACrD,KAAK;QACjBA,KAAK,CAAC0E,OAAO,GAAG,EAAE;QAClB1E,KAAK,CAACyE,QAAQ,GAAG,EAAE;MACvB,CAAC,CAAC;MACF/F,KAAK,CAAC2E,OAAO,CAAC,UAACkC,UAAU;;QACrB,IAAIC,UAAU,GAAGzC,cAAc,CAACrD,IAAI,CAAC,UAACqC,CAAC;UAAK,QAAC,CAACnC,EAAE,KAAK2F,UAAU,CAACvD,MAAM;QAA1B,CAA0B,CAAC;QACvE,IAAIvC,UAAU,GAAGsD,cAAc,CAACrD,IAAI,CAAC,UAACqC,CAAC;UAAK,QAAC,CAACnC,EAAE,KAAK2F,UAAU,CAACrD,MAAM;QAA1B,CAA0B,CAAC;QACvE;QACA,IAAIwB,MAAM,GAAY,EAAE;QACxB,IAAI+B,WAAW,GAA4B,EAAE;QAC7C,IAAID,UAAU,IAAI/F,UAAU,EAAE;UAC1BgG,WAAW,GAAG,6BAAQ,EAACD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE5F,EAAE,EAAEH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,EAAE,EAAEmD,cAAc,CAAC;SACzE,MAAM,IAAI,CAACyC,UAAU,IAAI,CAAC/F,UAAU,EAAE;UACnC;UACI;UACJ,IAAMiG,cAAc,GAAG3G,IAAI,CAAC4G,WAAW,CAACJ,UAAU,CAACvD,MAAM,CAAC;UAC1D,IAAM4D,cAAc,GAAG7G,IAAI,CAAC4G,WAAW,CAACJ,UAAU,CAACrD,MAAM,CAAC;UAE1D,IAAM2D,oBAAkB,GAAGH,cAAc,CACpCI,OAAO,EAAE,CACTC,KAAK,CAAC,CAACP,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAC1B9F,IAAI,CAAC,UAACS,QAAQ;YAAK,qBAAc,CAACT,IAAI,CAAC,UAACsG,KAAK;cAAK,YAAK,CAACpG,EAAE,KAAKO,QAAQ;YAArB,CAAqB,CAAC;UAArD,CAAqD,CAAC;UAC9E,IAAM8F,oBAAkB,GAAGL,cAAc,CACpCE,OAAO,EAAE,CACTC,KAAK,CAAC,CAACtG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAC1BC,IAAI,CAAC,UAACS,QAAQ;YAAK,qBAAc,CAACT,IAAI,CAAC,UAACsG,KAAK;cAAK,YAAK,CAACpG,EAAE,KAAKO,QAAQ;YAArB,CAAqB,CAAC;UAArD,CAAqD,CAAC;UAC9EqF,UAAU,GAAGzC,cAAc,CAACrD,IAAI,CAAC,UAACqC,CAAC;YAAK,QAAC,CAACnC,EAAE,KAAKiG,oBAAkB;UAA3B,CAA2B,CAAC;UACpEpG,UAAU,GAAGsD,cAAc,CAACrD,IAAI,CAAC,UAACqC,CAAC;YAAK,QAAC,CAACnC,EAAE,KAAKqG,oBAAkB;UAA3B,CAA2B,CAAC;UACpER,WAAW,GAAG,6BAAQ,EAACD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE5F,EAAE,EAAEH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,EAAE,EAAEmD,cAAc,EAAE;YAAEhB,CAAC,EAAEwD,UAAU,CAACvD,MAAM;YAAEC,CAAC,EAAEsD,UAAU,CAACrD;UAAM,CAAE,CAAC;;QAG1HwB,MAAM,GAAG+B,WAAW,CAAClF,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;UACjC,uCACOD,GAAG,SACHC,GAAG,CAACiD,MAAM,CAAC9E,GAAG,CAAC,UAACsH,CAAC;YAChB,6BACOA,CAAC;cACJ3C,CAAC,EAAE2C,CAAC,CAAC3C,CAAC,GAAGN,MAAM,CAAC,CAAC,CAAC;cAClBO,CAAC,EAAE0C,CAAC,CAAC1C,CAAC,GAAGP,MAAM,CAAC,CAAC;YAAC;UAE1B,CAAC,CAAC;QAEV,CAAC,EAAE,EAAc,CAAC;QAClB;QACAS,MAAM,GAAGA,MAAM,CAACqC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5BR,UAAU,CAACtH,aAAa,GAAGyF,MAAM;QAEjC,IAAI,WAAU,aAAVjE,UAAU,uBAAVA,UAAU,CAAEoE,IAAI,MAAKlB,yBAAQ,CAACoB,IAAI,EAAE;UACpC;UACA,IAAMC,CAAC,GAAGrF,MAAM,CAACsF,SAAS,CAAC,UAACC,IAAI;YAAK,WAAI,CAACtE,EAAE,MAAKH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,EAAE;UAA1B,CAA0B,CAAC;UAChE,IAAI,CAACjB,MAAM,CAACqF,CAAC,CAAC,KAAI,YAAM,CAACA,CAAC,CAAC,CAACU,OAAO,0CAAEyB,IAAI,CAAC,UAAChB,MAAM;YAAK,aAAM,CAACnD,MAAM,KAAKwD,UAAW,CAAC5F,EAAE,IAAIuF,MAAM,CAACjD,MAAM,KAAKzC,UAAW,CAACG,EAAE;UAApE,CAAoE,CAAC,GAAE;YACzH;;UAEJ,YAAM,CAACoE,CAAC,CAAC,CAACU,OAAO,0CAAEK,IAAI,CAAC;YACpB/C,MAAM,EAAEwD,UAAW,CAAC5F,EAAE;YACtBsC,MAAM,EAAEzC,UAAW,CAACG,EAAE;YACtB3B,aAAa,EAAEyF;WAClB,CAAC;;QAEN,IAAI,WAAU,aAAV8B,UAAU,uBAAVA,UAAU,CAAE3B,IAAI,MAAKlB,yBAAQ,CAACoB,IAAI,EAAE;UACpC,IAAMC,CAAC,GAAGrF,MAAM,CAACsF,SAAS,CAAC,UAACC,IAAI;YAAK,WAAI,CAACtE,EAAE,MAAK4F,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE5F,EAAE;UAA1B,CAA0B,CAAC;UAChE,IAAI,CAACjB,MAAM,CAACqF,CAAC,CAAC,KAAI,YAAM,CAACA,CAAC,CAAC,CAACS,QAAQ,0CAAE0B,IAAI,CAAC,UAACC,KAAK;YAAK,YAAK,CAACpE,MAAM,KAAKwD,UAAW,CAAC5F,EAAE,IAAIwG,KAAK,CAAClE,MAAM,KAAKzC,UAAW,CAACG,EAAE;UAAlE,CAAkE,CAAC,GAAE;YACvH;;UAEJ,YAAM,CAACoE,CAAC,CAAC,CAACS,QAAQ,0CAAEM,IAAI,CAAC;YACrB/C,MAAM,EAAEwD,UAAW,CAAC5F,EAAE;YACtBsC,MAAM,EAAEzC,UAAW,CAACG,EAAE;YACtB3B,aAAa,EAAEyF;WAClB,CAAC;;MAEV,CAAC,CAAC;;EAEV,CAAC;EAEMjG,qCAAO,GAAd;IACI,OAAO,eAAe;EAC1B,CAAC;EAED;;;;;;EAMQA,4CAAc,GAAtB,UAAuB4I,IAAW;IAC9B,IAAIA,IAAI,CAACC,KAAK,CAAC,UAAC3G,CAAC;MAAK,QAAC,CAAC4G,WAAW,KAAK3I,SAAS;IAA3B,CAA2B,CAAC,EAAE;MAChD;IAAA,CACH,MAAM;MACH;MACAyI,IAAI,CAAChD,OAAO,CAAC,UAAC1D,CAAC,EAAEqE,CAAC;QACdrE,CAAC,CAAC4G,WAAW,GAAGvC,CAAC;MACrB,CAAC,CAAC;;IAEN;IACA,OAAOqC,IAAI,CAACG,IAAI,CAAC,UAAChG,GAAG,EAAEC,GAAG;MAAK,UAAG,CAAC8F,WAAW,GAAG9F,GAAG,CAAC8F,WAAW;IAAjC,CAAiC,CAAC;EACrE,CAAC;EACL,0BAAC;AAAD,CAAC,CApbwCE,WAAI;AAAhCC","names":["__extends","options","_super","_this","updateCfg","DagreCompoundLayout","rankdir","align","undefined","begin","nodeSize","nodesep","ranksep","controlPoints","anchorPoint","data","hiddenNodes","hiddenEdges","hiddenCombos","nodes","getDataByOrder","concat","edges","combos","map","hc","collapsed","self","getLayoutConfig","graphDef","graphOption","graphSettings","renderInfo","flattenedRenderInfo","updatePosition","onLayoutEnd","nodeId","targetNode","find","n","id","findPath","comboId","fullPath","combo","c","unshift","parentId","edgesep","settings","compound","reduce","pre","cur","matchedNodes","filter","matchedCombos","length","nodeSizeFunc","d","size","width","height","comboSizeFunc","metaWidth","metaHeight","subSceneMeta","subScene","meta","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","e","v","source","w","target","expanded","graphMetaConfig","graph","rankDir","nodeSep","edgeSep","rankSep","labelHeight","dagre_compound_1","flattenedGraph","updateNodePosition","updateEdgePosition","flattenedNodes","flattenedEdges","dBegin","minX_1","Infinity","minY_1","forEach","node","x","y","edge","points","point","getBegin","type","coreBox","META","i","findIndex","item","offsetX","offsetY","fixSize","fixCollapseSize","OP","anchorPoints_1","outEdges","inEdges","outEdge","firstPoint","anchorPointX","anchorPointY","push","baseEdgeList","baseEdge","sourceAnchor","inEdge","lastPoint","targetAnchor","anchorPoints","sourceEdge","sourceNode","sortedEdges","sourceNodePath","getNodePath","targetNodePath","lastExistingSource_1","reverse","slice","fNode","lastExistingTarget_1","p","some","oedge","list","every","layoutOrder","sort","base_1","exports"],"sourceRoot":"","sources":["../../src/layout/dagreCompound.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}