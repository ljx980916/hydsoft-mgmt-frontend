{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceNBody = void 0;\nvar d3_quadtree_1 = require(\"d3-quadtree\");\nvar theta2 = 0.81; // Barnes-Hut approximation threshold\nvar epsilon = 0.1; // 为了防止出现除0的情况，加一个epsilon\nfunction forceNBody(nodes, nodeMap, factor, coulombDisScale2, accArray) {\n  var weightParam = factor / coulombDisScale2;\n  var data = nodes.map(function (n, i) {\n    // @ts-ignore\n    var mappedNode = nodeMap[n.id];\n    // @ts-ignore\n    var nodeData = mappedNode.data,\n      x = mappedNode.x,\n      y = mappedNode.y,\n      size = mappedNode.size;\n    var nodeStrength = nodeData.layout.force.nodeStrength;\n    return {\n      x: x,\n      y: y,\n      size: size,\n      index: i,\n      vx: 0,\n      vy: 0,\n      weight: weightParam * nodeStrength\n    };\n  });\n  var tree = (0, d3_quadtree_1.quadtree)(data, function (d) {\n    return d.x;\n  }, function (d) {\n    return d.y;\n  }).visitAfter(accumulate); // init internal node\n  data.forEach(function (n) {\n    // @ts-ignore\n    computeForce(n, tree);\n  });\n  data.map(function (n, i) {\n    // @ts-ignore\n    var mappedNode = nodeMap[nodes[i].id];\n    // @ts-ignore\n    var _a = mappedNode.data.layout.force.mass,\n      mass = _a === void 0 ? 1 : _a;\n    // 从 0 开始，= 初始化 + 加斥力\n    accArray[2 * i] = n.vx / mass;\n    accArray[2 * i + 1] = n.vy / mass;\n  });\n  return accArray;\n}\nexports.forceNBody = forceNBody;\n// @ts-ignore\nfunction accumulate(quad) {\n  var accWeight = 0;\n  var accX = 0;\n  var accY = 0;\n  if (quad.length) {\n    // internal node, accumulate 4 child quads\n    for (var i = 0; i < 4; i++) {\n      var q = quad[i];\n      if (q && q.weight) {\n        accWeight += q.weight;\n        accX += q.x * q.weight;\n        accY += q.y * q.weight;\n      }\n    }\n    quad.x = accX / accWeight;\n    quad.y = accY / accWeight;\n    quad.weight = accWeight;\n  } else {\n    // leaf node\n    var q = quad;\n    quad.x = q.data.x;\n    quad.y = q.data.y;\n    quad.weight = q.data.weight;\n  }\n}\n// @ts-ignore\nvar apply = function (quad, x1, y1, x2, y2, node) {\n  var dx = node.x - quad.x || epsilon;\n  var dy = node.y - quad.y || epsilon;\n  var width = x2 - x1;\n  var len2 = dx * dx + dy * dy;\n  var len3 = Math.sqrt(len2) * len2;\n  // far node, apply Barnes-Hut approximation\n  if (width * width * theta2 < len2) {\n    var param = quad.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n    return true;\n  }\n  // near quad, compute force directly\n  if (quad.length) return false; // internal node, visit children\n  // leaf node\n  if (quad.data !== node) {\n    var param = quad.data.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n  }\n};\n// @ts-ignore\nfunction computeForce(node, tree) {\n  // @ts-ignore\n  tree.visit(function (quad, x1, y1, x2, y2) {\n    return apply(quad, x1, y1, x2, y2, node);\n  });\n}","map":{"version":3,"mappings":"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","names":["theta2","epsilon","forceNBody","nodes","nodeMap","factor","coulombDisScale2","accArray","weightParam","data","map","n","i","mappedNode","id","nodeData","x","y","size","layout","force","index","vx","vy","weight","nodeStrength","tree","d","visitAfter","accumulate","forEach","computeForce","mass","exports","quad","accWeight","accX","accY","length","q","apply","x1","y1","x2","y2","node","dx","dy","width","len2","len3","Math","sqrt","param","visit"],"sourceRoot":"","sources":["../../../src/layout/force2/ForceNBody.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}