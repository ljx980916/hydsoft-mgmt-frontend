{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, unref as _unref, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-53477c82\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_2 = {\n  class: \"flex-between\",\n  style: {\n    \"height\": \"40px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"tool-grid\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"只看我的\", -1));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"red\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"green\"\n};\nimport { reactive, ref } from \"vue\";\nimport { userListColumns } from \"../views/system/constColumns\";\nimport { Message } from \"@arco-design/web-vue\";\nimport { useMenuStore } from \"../store/index\";\nexport default {\n  __name: 'tableContainer',\n  props: {\n    tabs: {\n      type: Array,\n      default: () => []\n    },\n    chekedValue: {\n      type: String,\n      default: \"\"\n    },\n    // 表头\n    tableColumns: {\n      type: Array,\n      default: () => []\n    },\n    // 表单数据\n    tableData: {\n      type: Array,\n      default: () => []\n    },\n    // 菜单名称(根据菜单名称判断显示指定按钮)\n    menuName: {\n      type: String,\n      default: \"\"\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    scrollY: {\n      type: String,\n      default: '600px'\n    },\n    setColumns: {\n      type: Array,\n      default: () => []\n    },\n    switchStatus: {\n      type: Boolean,\n      default: false\n    },\n    exportExcel: {\n      type: String,\n      default: \"\"\n    },\n    paginationTotal: {\n      type: Number,\n      default: 10\n    },\n    paginationCurrent: {\n      type: Number,\n      default: 1\n    },\n    paginationPageSize: {\n      type: Number,\n      default: 10\n    }\n  },\n  emits: [\"switchClick\", \"paginationCurrentChange\", \"paginationPageSizeChange\", \"handleEdit\", \"handleDeleteMenu\", \"handleUpdateFlag\", \"columnOK\", \"radioChange\"],\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const permissions = useMenuStore().getPermission;\n\n    // 表头信息\n    const tableInfo = reactive({\n      tableColumns: [{\n        title: \"自定义列1\",\n        dataIndex: \"customColumn1\",\n        width: 200\n      }, {\n        title: \"自定义列2\",\n        dataIndex: \"customColumn2\",\n        width: 200\n      }, {\n        title: \"自定义列3\",\n        dataIndex: \"customColumn3\",\n        width: 200\n      }, {\n        title: \"自定义列4\",\n        dataIndex: \"customColumn4\",\n        width: 200\n      }, {\n        title: \"自定义列5\",\n        dataIndex: \"customColumn5\",\n        width: 200\n      }, {\n        title: \"自定义列6\",\n        dataIndex: \"customColumn6\",\n        width: 200\n      }],\n      tableData: []\n    });\n    const modalVisible = ref(false);\n    const defaultCheckList = ref([]);\n    const checkedValues = ref([]);\n    const userTableColumns = ref(userListColumns);\n    let actionColumn = userListColumns.filter(item => item.dataIndex !== \"action\") || [];\n    // 打开配置列\n    const handleSetColumns = () => {\n      modalVisible.value = true;\n    };\n    // 配置列多选框更改\n    const columnSelected = values => {\n      checkedValues.value = values;\n    };\n    // 打开配置列勾选表格中已有的表头\n    const setTableColumns = () => {\n      let cachColumns = JSON.parse(localStorage.getItem(\"userListColumns\"));\n      if (cachColumns) {\n        userTableColumns.value = cachColumns;\n        defaultCheckList.value = cachColumns.map(item => item.dataIndex);\n      } else {\n        var selectedColumsArr = [];\n        actionColumn.forEach(item => {\n          selectedColumsArr.push(item.dataIndex);\n          defaultCheckList.value = selectedColumsArr;\n        });\n      }\n    };\n    setTableColumns();\n    // 配置列确认\n    const columnOK = () => {\n      if (defaultCheckList.value.length === 1 && defaultCheckList.value[0] === \"action\") {\n        return Message.error(\"至少选择一项\");\n      } else {\n        emit(\"columnOK\", defaultCheckList.value);\n        modalVisible.value = false;\n      }\n    };\n    // 只看我的\n    const handleSwitch = bool => {\n      emit(\"switchClick\", !bool);\n    };\n    // 更改当前页\n    const paginationChange = current => {\n      emit(\"paginationCurrentChange\", current);\n    };\n    // 更改页容量\n    const paginationPageSizeChange = pageSize => {\n      emit(\"paginationPageSizeChange\", pageSize);\n    };\n    // 编辑\n    const handleEdit = (record, type) => {\n      emit(\"handleEdit\", record, type);\n    };\n    // 删除\n    const handleDeleteMenu = record => {\n      emit(\"handleDeleteMenu\", record);\n    };\n    // 查看\n    const handleDetail = record => {\n      emit(\"handleDetail\", record);\n    };\n    // 更改状态\n    const handleUpdateFlag = record => {\n      emit(\"handleUpdateFlag\", record);\n    };\n    //tab切换\n    const radioChange = val => {\n      emit(\"radioChange\", val);\n    };\n    return (_ctx, _cache) => {\n      const _component_a_radio = _resolveComponent(\"a-radio\");\n      const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n      const _component_a_switch = _resolveComponent(\"a-switch\");\n      const _component_icon_download = _resolveComponent(\"icon-download\");\n      const _component_a_button = _resolveComponent(\"a-button\");\n      const _component_icon_home = _resolveComponent(\"icon-home\");\n      const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n      const _component_a_divider = _resolveComponent(\"a-divider\");\n      const _component_a_table = _resolveComponent(\"a-table\");\n      const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n      const _component_a_checkbox_group = _resolveComponent(\"a-checkbox-group\");\n      const _component_a_modal = _resolveComponent(\"a-modal\");\n      return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_a_radio_group, {\n        type: \"button\",\n        size: \"large\",\n        \"model-value\": props.chekedValue,\n        onChange: radioChange\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.tabs, item => {\n          return _openBlock(), _createBlock(_component_a_radio, {\n            value: item.key\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1)]),\n            _: 2\n          }, 1032, [\"value\"]);\n        }), 256))]),\n        _: 1\n      }, 8, [\"model-value\"]), _renderSlot(_ctx.$slots, \"default\")]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_3, [props.menuName === 'USER' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_a_switch, {\n        value: __props.switchStatus,\n        onChange: handleSwitch\n      }, {\n        checked: _withCtx(() => [_createTextVNode(\"ON\")]),\n        unchecked: _withCtx(() => [_createTextVNode(\"OFF\")]),\n        _: 1\n      }, 8, [\"value\"]), _hoisted_5])) : _createCommentVNode(\"\", true), props.menuName === 'USER' ? (_openBlock(), _createBlock(_component_a_button, {\n        key: 1,\n        type: \"primary\"\n      }, {\n        icon: _withCtx(() => [_createVNode(_component_icon_download)]),\n        default: _withCtx(() => [_createTextVNode(\"导出excel\")]),\n        _: 1\n      })) : _createCommentVNode(\"\", true), props.menuName === 'USER' ? (_openBlock(), _createBlock(_component_a_button, {\n        key: 2,\n        class: \"config\",\n        type: \"primary\",\n        onClick: handleSetColumns\n      }, {\n        icon: _withCtx(() => [_createVNode(_component_icon_home)]),\n        default: _withCtx(() => [_createTextVNode(\"配置列\")]),\n        _: 1\n      })) : _createCommentVNode(\"\", true)])])])]), _createElementVNode(\"div\", null, [_createVNode(_component_a_table, {\n        columns: props.tableColumns.length && props.tableColumns || tableInfo.tableColumns,\n        data: props.tableData.length && props.tableData || tableInfo.tableData,\n        \"column-resizable\": \"\",\n        bordered: false,\n        scroll: {\n          x: '100%',\n          y: props.scrollY\n        },\n        scrollbar: false,\n        loading: props.loading,\n        pagination: {\n          total: __props.paginationTotal,\n          current: __props.paginationCurrent,\n          pageSize: __props.paginationPageSize,\n          showTotal: true,\n          showPageSize: true,\n          showJumper: true,\n          onChange: paginationChange,\n          onPageSizeChange: paginationPageSizeChange\n        }\n      }, {\n        type_view: _withCtx(({\n          record\n        }) => [_createElementVNode(\"div\", null, _toDisplayString(record.type === 0 ? \"目录\" : record.type === 1 ? \"菜单\" : \"按钮\"), 1)]),\n        role_view: _withCtx(({\n          record\n        }) => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(record.roles, (item, i) => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: i\n          }, _toDisplayString(item.name), 1);\n        }), 128))]),\n        flag_view: _withCtx(({\n          record\n        }) => [record.flag === 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"禁用\")) : _createCommentVNode(\"\", true), record.flag === 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"启用\")) : _createCommentVNode(\"\", true)]),\n        action: _withCtx(({\n          record\n        }) => [_createVNode(_component_a_popconfirm, {\n          content: \"你确定要启用这个用户吗?\",\n          type: \"error\",\n          onOk: $event => handleUpdateFlag(record)\n        }, {\n          default: _withCtx(() => [props.menuName == 'user' && record.flag === 0 ? (_openBlock(), _createBlock(_component_a_button, {\n            key: 0,\n            type: \"text\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"启用\")]),\n            _: 1\n          })) : _createCommentVNode(\"\", true)]),\n          _: 2\n        }, 1032, [\"onOk\"]), props.menuName == 'user' && record.flag === 0 ? (_openBlock(), _createBlock(_component_a_divider, {\n          key: 0,\n          direction: \"vertical\"\n        })) : _createCommentVNode(\"\", true), props.menuName == 'user' && record.flag === 0 ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 1,\n          type: \"text\",\n          style: {\n            \"color\": \"#999999\"\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"禁用\")]),\n          _: 1\n        })) : _createCommentVNode(\"\", true), props.menuName == 'user' && record.flag === 1 ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 2,\n          type: \"text\",\n          style: {\n            \"color\": \"#999999\"\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"启用\")]),\n          _: 1\n        })) : _createCommentVNode(\"\", true), props.menuName == 'user' && record.flag === 1 ? (_openBlock(), _createBlock(_component_a_divider, {\n          key: 3,\n          direction: \"vertical\"\n        })) : _createCommentVNode(\"\", true), _createVNode(_component_a_popconfirm, {\n          content: \"你确定要禁用这个用户吗?\",\n          type: \"error\",\n          onOk: $event => handleUpdateFlag(record)\n        }, {\n          default: _withCtx(() => [props.menuName == 'user' && record.flag === 1 ? (_openBlock(), _createBlock(_component_a_button, {\n            key: 0,\n            type: \"text\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"禁用\")]),\n            _: 1\n          })) : _createCommentVNode(\"\", true)]),\n          _: 2\n        }, 1032, [\"onOk\"]), props.menuName == 'USER' ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 4,\n          type: \"text\",\n          onClick: $event => handleDetail(record, 'view')\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"查看\")]),\n          _: 2\n        }, 1032, [\"onClick\"])) : _createCommentVNode(\"\", true), props.menuName == 'user' ? (_openBlock(), _createBlock(_component_a_divider, {\n          key: 5,\n          direction: \"vertical\"\n        })) : _createCommentVNode(\"\", true), _unref(permissions).includes('menu:edit') && record.code !== 'admin' ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 6,\n          type: \"text\",\n          onClick: $event => handleEdit(record, 'edit')\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 编辑 \")]),\n          _: 2\n        }, 1032, [\"onClick\"])) : _createCommentVNode(\"\", true), props.menuName == 'menu' || props.menuName == 'role' && record.code !== 'admin' ? (_openBlock(), _createBlock(_component_a_divider, {\n          key: 7,\n          direction: \"vertical\"\n        })) : _createCommentVNode(\"\", true), _createVNode(_component_a_popconfirm, {\n          content: \"确定要删除吗?\",\n          type: \"error\",\n          onOk: $event => handleDeleteMenu(record)\n        }, {\n          default: _withCtx(() => [_unref(permissions).includes('menu:delete') && (props.menuName == 'menu' || props.menuName == 'role' && record.code !== 'admin') ? (_openBlock(), _createBlock(_component_a_button, {\n            key: 0,\n            type: \"text\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" 删除 \")]),\n            _: 1\n          })) : _createCommentVNode(\"\", true)]),\n          _: 2\n        }, 1032, [\"onOk\"])]),\n        _: 1\n      }, 8, [\"columns\", \"data\", \"scroll\", \"loading\", \"pagination\"])]), _createVNode(_component_a_modal, {\n        visible: modalVisible.value,\n        \"onUpdate:visible\": _cache[1] || (_cache[1] = $event => modalVisible.value = $event),\n        title: \"选择表格项\"\n      }, {\n        footer: _withCtx(() => [_createVNode(_component_a_button, {\n          type: \"primary\",\n          onClick: columnOK\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"确定\")]),\n          _: 1\n        })]),\n        default: _withCtx(() => [_createVNode(_component_a_checkbox_group, {\n          onChange: columnSelected,\n          modelValue: defaultCheckList.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => defaultCheckList.value = $event)\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.setColumns, item => {\n            return _openBlock(), _createBlock(_component_a_checkbox, {\n              key: item.dataIndex,\n              value: item.dataIndex\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1)]),\n              _: 2\n            }, 1032, [\"value\"]);\n          }), 128))]),\n          _: 1\n        }, 8, [\"modelValue\"])]),\n        _: 1\n      }, 8, [\"visible\"])]);\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","userListColumns","Message","useMenuStore","permissions","getPermission","tableInfo","tableColumns","title","dataIndex","width","tableData","modalVisible","defaultCheckList","checkedValues","userTableColumns","actionColumn","filter","item","handleSetColumns","value","columnSelected","values","setTableColumns","cachColumns","JSON","parse","localStorage","getItem","map","selectedColumsArr","forEach","push","columnOK","length","error","emit","handleSwitch","bool","paginationChange","current","paginationPageSizeChange","pageSize","handleEdit","record","type","handleDeleteMenu","handleDetail","handleUpdateFlag","radioChange","val"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/components/tableContainer.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"m-b-20\">\n        <div class=\"flex-between\" style=\"height: 40px;\">\n          <a-radio-group type=\"button\" size=\"large\" :model-value=\"props.chekedValue\" @change=\"radioChange\">\n            <a-radio v-for=\"item of props.tabs\" :value=\"item.key\">{{ item.name }}</a-radio>\n          </a-radio-group>\n          <slot></slot>\n        </div>\n        <div>\n          <div class=\"tool-grid\">\n            <!-- 只看我的 -->\n            <div v-if=\"props.menuName === 'USER'\">\n              <a-switch :value=\"switchStatus\" @change=\"handleSwitch\">\n                <template #checked>ON</template>\n                <template #unchecked>OFF</template>\n              </a-switch>\n              <span>只看我的</span>\n            </div>\n            <!-- 导出excel -->\n            <a-button type=\"primary\" v-if=\"props.menuName === 'USER'\">\n              <template #icon>\n                <icon-download />\n              </template>\n              <template #default>导出excel</template>\n            </a-button>\n            <!-- 配置列 -->\n            <a-button class=\"config\" type=\"primary\" @click=\"handleSetColumns\" v-if=\"props.menuName === 'USER'\">\n              <template #icon>\n                <icon-home />\n              </template>\n              <template #default>配置列</template>\n            </a-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 表格内容 -->\n    <div>\n      <a-table\n        :columns=\"(props.tableColumns.length && props.tableColumns) || tableInfo.tableColumns\"\n        :data=\"(props.tableData.length && props.tableData) || tableInfo.tableData\"\n        column-resizable\n        :bordered=\"false\"\n        :scroll=\"{ x: '100%', y: props.scrollY }\"\n        :scrollbar=\"false\"\n        :loading=\"props.loading\"\n        :pagination=\"{\n          total: paginationTotal,\n          current: paginationCurrent,\n          pageSize: paginationPageSize,\n          showTotal: true,\n          showPageSize: true,\n          showJumper: true,\n          onChange: paginationChange,\n          onPageSizeChange: paginationPageSizeChange,\n        }\"\n      >\n        <template #type_view=\"{ record }\">\n          <div>{{ record.type === 0 ? \"目录\" : record.type === 1 ? \"菜单\" : \"按钮\" }}</div>\n        </template>\n        <template #role_view=\"{ record }\">\n          <div v-for=\"(item, i) in record.roles\" :key=\"i\">{{ item.name }}</div>\n        </template>\n        <template #flag_view=\"{ record }\">\n          <span class=\"red\" v-if=\"record.flag === 0\">禁用</span>\n          <span class=\"green\" v-if=\"record.flag === 1\">启用</span>\n        </template>\n        <template #action=\"{ record }\">\n          <a-popconfirm content=\"你确定要启用这个用户吗?\" type=\"error\" @ok=\"handleUpdateFlag(record)\">\n            <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 0\">启用</a-button>\n          </a-popconfirm>\n          <a-divider v-if=\"props.menuName == 'user' && record.flag === 0\" direction=\"vertical\" />\n          <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 0\" style=\"color: #999999\">禁用</a-button>\n          <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 1\" style=\"color: #999999\">启用</a-button>\n          <a-divider v-if=\"props.menuName == 'user' && record.flag === 1\" direction=\"vertical\" />\n          <a-popconfirm content=\"你确定要禁用这个用户吗?\" type=\"error\" @ok=\"handleUpdateFlag(record)\">\n            <a-button type=\"text\" v-if=\"props.menuName == 'user' && record.flag === 1\">禁用</a-button>\n          </a-popconfirm>\n          <!-- 查看 -->\n          <a-button type=\"text\" v-if=\"props.menuName == 'USER'\" @click=\"handleDetail(record, 'view')\">查看</a-button>\n          <a-divider v-if=\"props.menuName == 'user'\" direction=\"vertical\" />\n          <!-- 编辑 -->\n          <a-button\n            v-if=\"permissions.includes('menu:edit') && record.code !== 'admin'\"\n            type=\"text\"\n            @click=\"handleEdit(record, 'edit')\"\n          >\n            编辑\n          </a-button>\n          <a-divider\n            v-if=\"props.menuName == 'menu' || (props.menuName == 'role' && record.code !== 'admin')\"\n            direction=\"vertical\"\n          />\n          <!-- 删除 -->\n          <a-popconfirm content=\"确定要删除吗?\" type=\"error\" @ok=\"handleDeleteMenu(record)\">\n            <a-button\n              type=\"text\"\n              v-if=\"\n                permissions.includes('menu:delete') &&\n                (props.menuName == 'menu' || (props.menuName == 'role' && record.code !== 'admin'))\n              \"\n            >\n              删除\n            </a-button>\n          </a-popconfirm>\n        </template>\n      </a-table>\n    </div>\n    <!-- 表单数据 -->\n    <a-modal v-model:visible=\"modalVisible\" title=\"选择表格项\">\n      <a-checkbox-group @change=\"columnSelected\" v-model=\"defaultCheckList\">\n        <a-checkbox v-for=\"item of setColumns\" :key=\"item.dataIndex\" :value=\"item.dataIndex\">\n          {{ item.title }}\n        </a-checkbox>\n      </a-checkbox-group>\n      <template #footer>\n        <a-button type=\"primary\" @click=\"columnOK\">确定</a-button>\n      </template>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref } from \"vue\";\nimport { userListColumns } from \"../views/system/constColumns\";\nimport { Message } from \"@arco-design/web-vue\";\nimport { useMenuStore } from \"../store/index\";\nconst permissions = useMenuStore().getPermission;\nconst props = defineProps({\n  tabs: {\n    type: Array,\n    default: () => [],\n  },\n  chekedValue: {\n    type: String,\n    default: \"\",\n  },\n  // 表头\n  tableColumns: {\n    type: Array,\n    default: () => [],\n  },\n  // 表单数据\n  tableData: {\n    type: Array,\n    default: () => [],\n  },\n  // 菜单名称(根据菜单名称判断显示指定按钮)\n  menuName: {\n    type: String,\n    default: \"\",\n  },\n  loading : {\n    type : Boolean,\n    default : false\n  },\n  scrollY : {\n    type : String,\n    default : '600px'\n  },\n  setColumns: {\n    type: Array,\n    default: () => [],\n  },\n  switchStatus: {\n    type: Boolean,\n    default: false,\n  },\n  exportExcel: {\n    type: String,\n    default: \"\",\n  },\n  paginationTotal: {\n    type: Number,\n    default: 10,\n  },\n  paginationCurrent: {\n    type: Number,\n    default: 1,\n  },\n  paginationPageSize: {\n    type: Number,\n    default: 10,\n  },\n});\n// 表头信息\nconst tableInfo = reactive({\n  tableColumns: [\n    {\n      title: \"自定义列1\",\n      dataIndex: \"customColumn1\",\n      width: 200,\n    },\n    {\n      title: \"自定义列2\",\n      dataIndex: \"customColumn2\",\n      width: 200,\n    },\n    {\n      title: \"自定义列3\",\n      dataIndex: \"customColumn3\",\n      width: 200,\n    },\n    {\n      title: \"自定义列4\",\n      dataIndex: \"customColumn4\",\n      width: 200,\n    },\n    {\n      title: \"自定义列5\",\n      dataIndex: \"customColumn5\",\n      width: 200,\n    },\n    {\n      title: \"自定义列6\",\n      dataIndex: \"customColumn6\",\n      width: 200,\n    },\n  ],\n  tableData: [],\n});\nconst emit = defineEmits([\n  \"switchClick\",\n  \"paginationCurrentChange\",\n  \"paginationPageSizeChange\",\n  \"handleEdit\",\n  \"handleDeleteMenu\",\n  \"handleUpdateFlag\",\n  \"columnOK\",\n  \"radioChange\",\n]);\nconst modalVisible = ref(false);\nconst defaultCheckList = ref([]);\nconst checkedValues = ref([]);\nconst userTableColumns = ref(userListColumns);\nlet actionColumn = userListColumns.filter(item => item.dataIndex !== \"action\") || [];\n// 打开配置列\nconst handleSetColumns = () => {\n  modalVisible.value = true;\n};\n// 配置列多选框更改\nconst columnSelected = values => {\n  checkedValues.value = values;\n};\n// 打开配置列勾选表格中已有的表头\nconst setTableColumns = () => {\n  let cachColumns = JSON.parse(localStorage.getItem(\"userListColumns\"));\n  if (cachColumns) {\n    userTableColumns.value = cachColumns;\n    defaultCheckList.value = cachColumns.map(item => item.dataIndex);\n  } else {\n    var selectedColumsArr = [];\n    actionColumn.forEach(item => {\n      selectedColumsArr.push(item.dataIndex);\n      defaultCheckList.value = selectedColumsArr;\n    });\n  }\n};\nsetTableColumns();\n// 配置列确认\nconst columnOK = () => {\n  if (defaultCheckList.value.length === 1 && defaultCheckList.value[0] === \"action\") {\n    return Message.error(\"至少选择一项\");\n  } else {\n    emit(\"columnOK\", defaultCheckList.value);\n    modalVisible.value = false;\n  }\n};\n// 只看我的\nconst handleSwitch = bool => {\n  emit(\"switchClick\", !bool);\n};\n// 更改当前页\nconst paginationChange = current => {\n  emit(\"paginationCurrentChange\", current);\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  emit(\"paginationPageSizeChange\", pageSize);\n};\n// 编辑\nconst handleEdit = (record, type) => {\n  emit(\"handleEdit\", record, type);\n};\n// 删除\nconst handleDeleteMenu = record => {\n  emit(\"handleDeleteMenu\", record);\n};\n// 查看\nconst handleDetail = record => {\n  emit(\"handleDetail\", record);\n};\n// 更改状态\nconst handleUpdateFlag = record => {\n  emit(\"handleUpdateFlag\", record);\n};\n//tab切换\nconst radioChange = val => {\n  emit(\"radioChange\", val);\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.header-grid {\n  display: grid;\n  grid-template-columns: 10fr 6fr;\n  gap: 20px;\n}\n.tool-grid {\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  column-gap: 15px;\n  row-gap: 20px;\n  grid-auto-flow: row;\n}\n.m-b-20 {\n  margin-bottom: 20px;\n}\n.config {\n  position: absolute;\n  width: 100px;\n  top: 210px;\n  height: 36px;\n  right: 70px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}