{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", {\n    width: $setup.props.width,\n    height: $setup.props.height,\n    ref: \"canvasEl\",\n    style: _normalizeStyle({\n      padding: '10px',\n      backgroundColor: 'rgb(var(--arcoblue-1))'\n    })\n  }, null, 12 /* STYLE, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","width","$setup","props","height","ref","style","_normalizeStyle","_hoisted_1"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/components/canvasContainer.vue"],"sourcesContent":["<template>\n  <canvas\n    :width=\"props.width\"\n    :height=\"props.height\"\n    ref=\"canvasEl\"\n    :style=\"{\n      padding: '10px',\n      backgroundColor: 'rgb(var(--arcoblue-1))',\n    }\"\n  ></canvas>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\nconst props = defineProps({\n  // 折线路径数据\n  route: {\n    type: Array,\n    default: () => [],\n  },\n  height: {\n    type: Number,\n    default: 20,\n  },\n  width: {\n    type: Number,\n    default: 50,\n  },\n});\nwatch(\n  () => props.route,\n  (old, newProps) => {\n    if (old !== newProps) {\n      animate();\n    }\n  },\n);\nconst canvasEl = ref(null);\nconst animate = () => {\n  let ctx = canvasEl.value && canvasEl.value.getContext(\"2d\");\n  ctx.clearRect(0, 0, props.width, props.height);\n  ctx.translate(0, props.height);\n  ctx.scale(1, -1);\n  ctx.moveTo(...props.route[0]);\n  ctx.clearRect(0, 0, 50, 20);\n  props.route.forEach(item => {\n    ctx.lineTo(...item);\n    ctx.strokeStyle = \"blue\";\n    ctx.stroke();\n  });\n};\nonMounted(() => {\n  animate();\n});\n</script>\n"],"mappings":";mBAAA;;uBACEA,mBAAA,CAQU;IAPPC,KAAK,EAAEC,MAAA,CAAAC,KAAK,CAACF,KAAK;IAClBG,MAAM,EAAEF,MAAA,CAAAC,KAAK,CAACC,MAAM;IACrBC,GAAG,EAAC,UAAU;IACbC,KAAK,EALVC,eAAA,CAKY;;;KAGP;kCARLC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}