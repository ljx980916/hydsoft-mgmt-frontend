{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"年份：\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"m-t-20 flex-between\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"align-self\": \"flex-start\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_6 = {\n  class: \"m-t-20\"\n};\nconst _hoisted_7 = {\n  href: \"javaScript:void(0)\",\n  style: {\n    \"color\": \"#333\"\n  }\n};\nexport function render(_ctx, _cache) {\n  const _component_a_year_picker = _resolveComponent(\"a-year-picker\");\n  const _component_icon_search = _resolveComponent(\"icon-search\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_icon_refresh = _resolveComponent(\"icon-refresh\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_tooltip = _resolveComponent(\"a-tooltip\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 查询表单 \"), _createElementVNode(\"div\", null, [_createVNode(_component_a_space, {\n    wrap: \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_a_year_picker, {\n      modelValue: _ctx.yearNow,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.yearNow = $event),\n      disabled: \"\",\n      style: {\n        \"width\": \"120px\",\n        \"border-radius\": \"4px\"\n      },\n      \"allow-clear\": false\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_a_button, {\n      type: \"primary\",\n      style: {\n        \"margin-left\": \"16px\"\n      },\n      onClick: _ctx.handleSearch\n    }, {\n      icon: _withCtx(() => [_createVNode(_component_icon_search)]),\n      default: _withCtx(() => [_createTextVNode(\"搜索\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n      onClick: _ctx.handleReset\n    }, {\n      icon: _withCtx(() => [_createVNode(_component_icon_refresh)]),\n      default: _withCtx(() => [_createTextVNode(\"重置\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_a_space, {\n    wrap: \"\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tabChangeColumInfo.tabList, (item, index) => {\n      return _openBlock(), _createBlock(_component_a_tag, {\n        key: index,\n        color: item.isShow === 1 ? 'arcoblue' : '',\n        size: \"large\",\n        class: \"pointer\",\n        onClick: $event => _ctx.handleHasSonTabChange(item)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.configType), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\", \"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })])])]), _createCommentVNode(\" 表格  \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_a_table, {\n    columns: _ctx.tableInfo.columns,\n    data: _ctx.tableInfo.data,\n    \"column-resizable\": \"\",\n    scroll: {\n      maxHeight: _ctx.tableInfo.maxHeight\n    },\n    scrollbar: {\n      x: true,\n      y: 750\n    },\n    pagination: false,\n    loading: _ctx.tableInfo.loading,\n    bordered: false,\n    ref: \"tableRef\",\n    \"expanded-keys\": _ctx.tableInfo.defaultExpandedKeys,\n    onExpandedChange: _ctx.expandedChange\n  }, {\n    columTitleSlot: _withCtx(({\n      column\n    }) => [_createVNode(_component_a_tooltip, {\n      style: {\n        \"width\": \"max-content\"\n      },\n      content: column.title\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"a\", _hoisted_7, _toDisplayString(column.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"content\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"columns\", \"data\", \"scroll\", \"loading\", \"expanded-keys\", \"onExpandedChange\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","href","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_a_space","wrap","default","_withCtx","_hoisted_2","_component_a_year_picker","modelValue","_ctx","yearNow","_cache","$event","disabled","_component_a_button","type","onClick","handleSearch","icon","_component_icon_search","_createTextVNode","_","handleReset","_component_icon_refresh","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","tabChangeColumInfo","tabList","item","index","_createBlock","_component_a_tag","key","color","isShow","size","handleHasSonTabChange","_toDisplayString","configType","_hoisted_6","_component_a_table","columns","tableInfo","data","scroll","maxHeight","scrollbar","x","y","pagination","loading","bordered","ref","defaultExpandedKeys","onExpandedChange","expandedChange","columTitleSlot","column","_component_a_tooltip","content","title","_hoisted_7"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/LeanAnalyze/preRealComparsion.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <!-- 查询表单 -->\n    <div>\n      <a-space wrap>\n        <span>年份：</span>\n        <a-year-picker v-model=\"yearNow\" disabled style=\"width: 120px; border-radius: 4px\" :allow-clear=\"false\" />\n        <a-button type=\"primary\" style=\"margin-left: 16px\" @click=\"handleSearch\">\n          <template #icon>\n            <icon-search />\n          </template>\n          <template #default>搜索</template>\n        </a-button>\n        <a-button @click=\"handleReset\">\n          <template #icon>\n            <icon-refresh />\n          </template>\n          <template #default>重置</template>\n        </a-button>\n      </a-space>\n    </div>\n    <div class=\"m-t-20 flex-between\">\n      <div style=\"align-self: flex-start\">\n        <div class=\"m-b-20\">\n          <a-space wrap>\n            <a-tag\n              v-for=\"(item, index) of tabChangeColumInfo.tabList\"\n              :key=\"index\"\n              :color=\"item.isShow === 1 ? 'arcoblue' : ''\"\n              size=\"large\"\n              class=\"pointer\"\n              @click=\"handleHasSonTabChange(item)\"\n            >\n              {{ item.configType }}\n            </a-tag>\n          </a-space>\n        </div>\n      </div>\n    </div>\n    <!-- 表格  -->\n    <div class=\"m-t-20\">\n      <a-table\n        :columns=\"tableInfo.columns\"\n        :data=\"tableInfo.data\"\n        column-resizable\n        :scroll=\"{ maxHeight: tableInfo.maxHeight }\"\n        :scrollbar=\"{ x: true, y: 750 }\"\n        :pagination=\"false\"\n        :loading=\"tableInfo.loading\"\n        :bordered=\"false\"\n        ref=\"tableRef\"\n        :expanded-keys=\"tableInfo.defaultExpandedKeys\"\n        @expanded-change=\"expandedChange\"\n      >\n      <template #columTitleSlot=\"{ column }\">\n        <a-tooltip style=\"width:max-content\" :content=\"column.title\">\n          <a href=\"javaScript:void(0)\" style=\"color: #333;\"> {{ column.title }}</a>\n        </a-tooltip>\n      </template>\n    </a-table>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, reactive, ref, nextTick, onMounted, toRaw } from \"vue\";\nimport { useTagColumnListStore } from \"../../store/index\";\nimport { getPretrialComparisonList } from \"@/api/preRealComparsion.js\";\nimport { getCurrentDate, dataAddKey, toInteger } from \"../../utils/util\";\nlet tagColumnList = useTagColumnListStore();\nlet columConfig = {};\nlet { year, month } = getCurrentDate();\nlet currentDate = `${year}`;\nlet months = `${month}`;\nconst regex = /(\\d+)月/g;\nconst yearNow = ref(currentDate);\nconst tableInfo = reactive({\n  columns: [],\n  data: [],\n  maxHeight: \"200px\",\n  loading: false,\n  defaultExpandedKeys: [],\n});\nconst tableRef = ref(null);\nconst tabChangeColumInfo = reactive({\n  tabList: [],\n});\nonMounted(() => {\n  if (tableRef.value) {\n    let head = tableRef.value.$el;\n    nextTick(() => {\n      let innerHeight = window.innerHeight;\n      let elHeight = head.getBoundingClientRect().top;\n      tableInfo.maxHeight = innerHeight - elHeight - 30 + \"px\";\n    });\n  }\n});\n// 初始化\nconst seltColumns = () => {\n  let tagColumns = toRaw(tagColumnList.getTagColumnList) || [];\n  let currentPageColumn = tagColumns.filter(item => item.report === \"预实对比\") || [];\n  if (currentPageColumn.length) {\n    if (months[0] == 0) {\n      months = months[1];\n    }\n    currentPageColumn[0].tier.forEach((item, index) => {\n      let tabs = [];\n      let columnTabs = []; // 可点击高亮不高亮的标签\n      let noHiddenColumn = []; // 不可点击高亮不高亮的标签\n      item.tags.forEach(jtem => {\n        tabs.push(jtem.tag);\n        jtem.columns.forEach(ktem => {\n          let { col, conf, title } = ktem;\n          if (title.indexOf(\"月\") !== -1) {\n            title = title.replace(regex, `${months}月`);\n          }\n          conf = conf || {};\n          let columnItemConfig = {\n            title,\n            dataIndex: col,\n            align: conf.align,\n            cellStyle: { \"text-align\": conf.cellAlign },\n            width: conf.width,\n            ellipsis: true,\n            headerCellClass: \"noEllipsis\",\n            slotName: col,\n            isShow: conf.isShow,\n            configType: conf.configType,\n            parentCol: conf.parentCol,\n            titleSlotName : 'columTitleSlot'\n          };\n          if (conf.canHide === 1) {\n            columnTabs.push(columnItemConfig); // 可以点击高亮的 === 有children的\n          } else {\n            noHiddenColumn.push(columnItemConfig); // 不可以点击高亮的 === 固定在表格的\n          }\n          // 去重\n          let map = new Map();\n          for (let i of columnTabs) {\n            if (!map.has(i.configType)) {\n              map.set(i.configType, i);\n            }\n          }\n          tabChangeColumInfo.tabList = [...map.values()];\n        });\n      });\n      columConfig = {\n        tabs,\n        params: item.params || [],\n        columnTabs,\n        noHiddenColumn,\n      };\n    });\n  }\n};\n// 更换表头\nconst analysiisColumn = () => {\n  let { columnTabs, noHiddenColumn } = columConfig;\n  let filterHasSonShowColumn1 = columnTabs.filter(item => item.isShow === 1);\n  let columnHasSonConfig = new Map();\n  filterHasSonShowColumn1.forEach(item => {\n    if (columnHasSonConfig.has(item.parentCol)) {\n      let value = columnHasSonConfig.get(item.parentCol);\n      value.children.push(item);\n      columnHasSonConfig.set(item.parentCol, value);\n    } else {\n      columnHasSonConfig.set(item.parentCol, {\n        title: item.parentCol,\n        children: [item],\n      });\n    }\n  });\n  let number = 0;\n  columnHasSonConfig.forEach(item => {\n    number += 1;\n    if (!item.children) {\n      item.dataIndex = `colNo${number}`;\n      item.slotName = `colNo${number}`;\n    } else {\n      number = number - 1;\n      item.children.forEach(jtem => {\n        number += 1;\n        jtem.dataIndex = `colNo${number}`;\n        jtem.slotName = `colNo${number}`;\n        jtem.render = ({ record }) => {\n          return <span innerHTML={toInteger(record[jtem.dataIndex])}></span>;\n        };\n      });\n    }\n  });\n  let filterAllShowColumn = [...noHiddenColumn, ...columnHasSonConfig.values()];\n  tableInfo.columns = filterAllShowColumn;\n};\nonBeforeMount(() => {\n  seltColumns();\n  analysiisColumn();\n  getList();\n});\n// 点击标签\nconst handleHasSonTabChange = tab => {\n  switch (tab.isShow) {\n    case 0:\n      tab.isShow = 1;\n      changeShowStatus({\n        type: \"self\",\n        configType: tab.configType,\n        val: 1,\n      });\n      break;\n    case 1:\n      tab.isShow = 0;\n      changeShowStatus({\n        type: \"self\",\n        configType: tab.configType,\n        val: 0,\n      });\n      break;\n    default:\n      break;\n  }\n};\n// 更改高亮状态并更换表头\nconst changeShowStatus = obj => {\n  let { columnTabs, noHiddenColumn } = columConfig;\n  let columnsArr = [];\n  if (obj.type === \"self\") {\n    columnTabs.forEach(item => {\n      if (obj.configType === item.configType) {\n        item.isShow = obj.val;\n      }\n    });\n  }\n  let filterHasSonShowColumn = columnTabs.filter(item => item.isShow === 1);\n  let columnHasSonConfig = new Map();\n  filterHasSonShowColumn.forEach(item => {\n    if (columnHasSonConfig.has(item.parentCol)) {\n      let value = columnHasSonConfig.get(item.parentCol);\n      value.children.push(item);\n      columnHasSonConfig.set(item.parentCol, value);\n    } else {\n      columnHasSonConfig.set(item.parentCol, {\n        title: item.parentCol,\n        children: [item],\n      });\n    }\n  });\n  let number = 0;\n  columnHasSonConfig.forEach(item => {\n    number += 1;\n    if (!item.children) {\n      item.dataIndex = `colNo${number}`;\n      item.slotName = `colNo${number}`;\n    } else {\n      number = number - 1;\n      item.children.forEach(jtem => {\n        number += 1;\n        jtem.dataIndex = `colNo${number}`;\n        jtem.slotName = `colNo${number}`;\n        jtem.render = ({ record }) => {\n          return '<span innerHTML={toInteger(record[jtem.dataIndex])}></span>';\n        };\n      });\n    }\n  });\n  columnsArr = [...noHiddenColumn, ...columnHasSonConfig.values()];\n\n  tableInfo.columns = columnsArr;\n  getList();\n};\n// 获取列表数据\nconst getList = () => {\n  tableInfo.data = [];\n  tableInfo.loading = true;\n  let arr = [];\n  var newColumns = JSON.parse(JSON.stringify(tableInfo.columns));\n  newColumns.forEach(item => {\n    if (item.title === \"部门名称\") {\n      arr.push(\"deptName\");\n    }\n    if (item.title === \"人数累计\") {\n      arr.push(\"colNo1\");\n    }\n    if (item.title === \"营业收入累计\") {\n      arr.push(\"colNo2\");\n    }\n    if (item.title === \"销售毛利累计\" || item.title === \"销售毛利率累计\") {\n      arr.push(\"colNo3\");\n    }\n    if (item.title === \"考核经营净利润累计\" || item.title === \"考核经营净利润率累计\") {\n      arr.push(\"colNo4\");\n    }\n    if (item.title === \"招聘费用累计\") {\n      arr.push(\"colNo5\");\n    }\n    if (item.title === \"销售费用累计\") {\n      arr.push(\"colNo6\");\n    }\n    if (item.title === \"管理费用累计\") {\n      arr.push(\"colNo7\");\n    }\n  });\n  const params = {\n    dynamicHeaderParam: Array.from(new Set(arr)),\n    tagKey: \"prerealComparison\",\n  };\n  getPretrialComparisonList(params).then(res => {\n    if (res.code == \"200\") {\n      let data = dataAddKey(res.data, \"key\", \"id\");\n      tableInfo.data = data;\n      let keys = [];\n      res.data.forEach(item => keys.push(item.id));\n      tableInfo.defaultExpandedKeys = keys;\n    }\n  }).catch(e=>{\n    Message.error(e.message || '请求数据错误')\n  }).finally(()=>{\n    tableInfo.loading = false\n  })\n};\nconst expandedChange = rowKeys => {\n  tableInfo.defaultExpandedKeys = rowKeys;\n};\n// 查询\nconst handleSearch = () => {\n  getList();\n};\n// 重置\nconst handleReset = () => {};\n</script>\n\n<style lang=\"scss\">\n.draw-enter-active,\n.draw-leave-active {\n  transition: all 0.2s;\n}\n.draw-enter-from,\n.draw-leave-to {\n  max-height: 0;\n}\n.border-r {\n  padding-right: 10px;\n  border-right: 1px solid #ebebeb;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}