{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends } from \"tslib\";\nimport { Polyline as PolylineUtil } from '@antv/g-math';\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isArray, isNil } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Polyline = /** @class */function (_super) {\n  __extends(Polyline, _super);\n  function Polyline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'polyline';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Polyline.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  };\n  // 更新属性时，检测是否更改了 points\n  Polyline.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    if (['points'].indexOf(name) !== -1) {\n      this._resetCache();\n    }\n  };\n  Polyline.prototype._resetCache = function () {\n    this.set('totalLength', null);\n    this.set('tCache', null);\n  };\n  Polyline.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map(function (point) {\n          return point[0] + \",\" + point[1];\n        }).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Get length of polyline\n   * @return {number} length\n   */\n  Polyline.prototype.getTotalLength = function () {\n    var points = this.attr().points;\n    // get totalLength from cache\n    var totalLength = this.get('totalLength');\n    if (!isNil(totalLength)) {\n      return totalLength;\n    }\n    this.set('totalLength', PolylineUtil.length(points));\n    return this.get('totalLength');\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  Polyline.prototype.getPoint = function (ratio) {\n    var points = this.attr().points;\n    // get tCache from cache\n    var tCache = this.get('tCache');\n    if (!tCache) {\n      this._setTcache();\n      tCache = this.get('tCache');\n    }\n    var subt;\n    var index;\n    each(tCache, function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    return LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\n  };\n  Polyline.prototype._setTcache = function () {\n    var points = this.attr().points;\n    if (!points || points.length === 0) {\n      return;\n    }\n    var totalLength = this.getTotalLength();\n    if (totalLength <= 0) {\n      return;\n    }\n    var tempLength = 0;\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    each(points, function (p, i) {\n      if (points[i + 1]) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  };\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n  Polyline.prototype.getStartTangent = function () {\n    var points = this.attr().points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  };\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n  Polyline.prototype.getEndTangent = function () {\n    var points = this.attr().points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  };\n  return Polyline;\n}(ShapeBase);\nexport default Polyline;","map":{"version":3,"mappings":"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","names":["Polyline","PolylineUtil","Line","LineUtil","each","isArray","isNil","SVG_ATTR_MAP","ShapeBase","__extends","_this","attrs","_super","getDefaultAttrs","startArrow","endArrow","name","value","originValue","onAttrChange","indexOf","_resetCache","set","context","targetAttrs","attr","el","get","length","setAttribute","map","point","join","totalLength","points","ratio","tCache","_setTcache","subt","index","v","i","pointAt","getTotalLength","tempLength","segmentT","segmentL","p","push","result","l"],"sourceRoot":"","sources":["../../src/shape/polyline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}