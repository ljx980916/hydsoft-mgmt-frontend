{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError('vector size must be the same as the number of columns');\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}","map":{"version":3,"names":["isAnyArray","checkRowIndex","matrix","index","outer","max","rows","RangeError","checkColumnIndex","columns","checkRowVector","vector","to1DArray","length","checkColumnVector","checkRowIndices","rowIndices","TypeError","i","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","arguments","checkNumber","newArray","value","array","push","name","checkNonEmpty","isEmpty","Error"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/ml-matrix/src/util.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}