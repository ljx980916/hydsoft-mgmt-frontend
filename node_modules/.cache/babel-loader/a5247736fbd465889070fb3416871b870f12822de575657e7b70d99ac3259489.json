{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = {\n  class: \"m-t-8\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_icon_plus = _resolveComponent(\"icon-plus\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_option = _resolveComponent(\"a-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 表格内容 \"), _createVNode($setup[\"tableContainer\"], {\n    class: \"m-t-20\",\n    \"column-resizable\": \"\",\n    scroll: $setup.scroll,\n    scrollbar: false,\n    paginationTotal: $setup.dataContent.pagination.total,\n    paginationPageSize: $setup.dataContent.pagination.pageSize,\n    paginationCurrent: $setup.dataContent.pagination.pageNum,\n    loading: $setup.dataContent.loading,\n    tableColumns: $setup.userTableColumns,\n    \"table-data\": $setup.dataContent.dataSource,\n    \"menu-name\": $setup.dataContent.menuName,\n    tabs: $setup.tabList,\n    chekedValue: $setup.chekedValue,\n    onHandleEdit: $setup.handleEditUser,\n    onRadioChange: $setup.radioChange,\n    onHandleUpdateFlag: $setup.handleUpdateFlag,\n    onPaginationCurrentChange: $setup.paginationCurrentChange,\n    onPaginationPageSizeChange: $setup.paginationPageSizeChange\n  }, {\n    default: _withCtx(() => [$setup.permissions.includes('user:add') ? (_openBlock(), _createBlock(_component_a_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => $setup.handleDetail())\n    }, {\n      icon: _withCtx(() => [_createVNode(_component_icon_plus)]),\n      default: _withCtx(() => [_createTextVNode(\"新建账号\")]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"paginationTotal\", \"paginationPageSize\", \"paginationCurrent\", \"loading\", \"tableColumns\", \"table-data\", \"menu-name\", \"tabs\", \"chekedValue\"]), _createVNode(_component_a_modal, {\n    visible: $setup.accountVisible,\n    \"onUpdate:visible\": _cache[5] || (_cache[5] = $event => $setup.accountVisible = $event),\n    title: $setup.title,\n    \"title-align\": \"start\",\n    width: \"680px\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_a_button, {\n      onClick: $setup.handleCancel\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $setup.handleModalOk\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确定\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      ref: \"formRef\",\n      mask: true,\n      model: $setup.form,\n      \"auto-label-width\": \"\",\n      style: {\n        width: '580px',\n        marginLeft: '20px'\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        field: \"empName\",\n        label: \"员工姓名\",\n        rules: [{\n          required: true,\n          message: '请输入员工姓名'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          modelValue: $setup.form.empName,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.empName = $event),\n          placeholder: \"请输入\",\n          \"filter-option\": false,\n          \"allow-search\": \"\",\n          disabled: $setup.accountModalStatus === 'update',\n          onSearch: $setup.handleNameSearch,\n          onChange: $setup.changeDeptname\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.empList, (item, index) => {\n            return _openBlock(), _createBlock(_component_a_option, {\n              value: item.empCode,\n              label: item.empName,\n              key: index\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.empName) + \"  (\" + _toDisplayString(item.empCode) + \"，\" + _toDisplayString(item.deptName) + \") \", 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"label\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"empCode\",\n        label: \"员工工号\",\n        rules: [{\n          required: true,\n          message: '请输入员工工号'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          modelValue: $setup.form.empCode,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.empCode = $event),\n          placeholder: \"请输入\",\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"deptName\",\n        label: \"部门名称\",\n        disabled: \"\",\n        rules: [{\n          required: true,\n          message: '请输入部门名称'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          modelValue: $setup.form.deptName,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.deptName = $event),\n          placeholder: \"请输入\",\n          disabled: $setup.accountModalStatus === 'update'\n        }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      }), $setup.hasAdmin ? (_openBlock(), _createBlock(_component_a_form_item, {\n        key: 0,\n        field: \"roleConfig1\",\n        label: \"角色\",\n        rules: [{\n          required: true,\n          message: '请输入角色设置'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          modelValue: $setup.form.roleConfig1,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.roleConfig1 = $event),\n          placeholder: \"请输入\",\n          multiple: \"\",\n          \"allow-search\": \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.roleList, item => {\n            return _openBlock(), _createBlock(_component_a_option, {\n              value: item.id,\n              key: item.id\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_a_form_item, {\n        key: 1,\n        field: \"roleConfig\",\n        label: \"角色\",\n        rules: [{\n          required: true,\n          message: '请选择角色设置'\n        }]\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.form.roleConfig), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      })), _createCommentVNode(\" <a-form-item field=\\\"password\\\" label=\\\"密码\\\" :rules=\\\"[{ required: true, message: '请输入密码' }]\\\">\\n          <a-input-password v-model=\\\"form.password\\\" placeholder=\\\"请输入\\\" allow-clear />\\n        </a-form-item> \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"title\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","scroll","scrollbar","paginationTotal","pagination","total","paginationPageSize","pageSize","paginationCurrent","pageNum","loading","tableColumns","dataSource","menuName","tabs","chekedValue","onHandleEdit","onRadioChange","onHandleUpdateFlag","onPaginationCurrentChange","onPaginationPageSizeChange","includes","_createBlock","_component_a_button","type","onClick","icon","_component_icon_plus","default","_component_a_modal","visible","title","width","footer","_component_a_form","ref","mask","model","style","marginLeft","_component_a_form_item","field","label","rules","required","message","_component_a_select","empName","placeholder","disabled","onSearch","onChange","_Fragment","item","index","_component_a_option","value","empCode","key","deptName","_component_a_input","roleConfig1","multiple","id","name","_createElementVNode","_hoisted_2","roleConfig"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/views/system/userView.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <!-- 表格内容 -->\n    <tableContainer\n      class=\"m-t-20\"\n      column-resizable\n      :scroll=\"scroll\"\n      :scrollbar=\"false\"\n      :paginationTotal=\"dataContent.pagination.total\"\n      :paginationPageSize=\"dataContent.pagination.pageSize\"\n      :paginationCurrent=\"dataContent.pagination.pageNum\"\n      :loading=\"dataContent.loading\"\n      :tableColumns=\"userTableColumns\"\n      :table-data=\"dataContent.dataSource\"\n      :menu-name=\"dataContent.menuName\"\n      :tabs=\"tabList\"\n      :chekedValue=\"chekedValue\"\n      @handleEdit=\"handleEditUser\"\n      @radioChange=\"radioChange\"\n      @handleUpdateFlag=\"handleUpdateFlag\"\n      @paginationCurrentChange=\"paginationCurrentChange\"\n      @paginationPageSizeChange=\"paginationPageSizeChange\"\n    >\n        <a-button type=\"primary\" @click=\"handleDetail()\" v-if=\"permissions.includes('user:add')\">\n                <template #icon>\n                  <icon-plus />\n                </template>\n                <template #default>新建账号</template>\n        </a-button>\n    </tableContainer>\n    <a-modal v-model:visible=\"accountVisible\" :title=\"title\" title-align=\"start\" width=\"680px\">\n      <a-form ref=\"formRef\" :mask=\"true\" :model=\"form\" auto-label-width :style=\"{ width: '580px', marginLeft: '20px' }\">\n        <a-form-item field=\"empName\" label=\"员工姓名\" :rules=\"[{ required: true, message: '请输入员工姓名' }]\">\n          <a-select\n            v-model=\"form.empName\"\n            placeholder=\"请输入\"\n            :filter-option=\"false\"\n            allow-search\n            :disabled=\"accountModalStatus === 'update'\"\n            @search=\"handleNameSearch\"\n            @change=\"changeDeptname\"\n          >\n            <a-option v-for=\"(item, index) of empList\" :value=\"item.empCode\" :label=\"item.empName\" :key=\"index\">\n              {{ item.empName }} &nbsp;({{ item.empCode }}，{{ item.deptName }})\n            </a-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item field=\"empCode\" label=\"员工工号\" :rules=\"[{ required: true, message: '请输入员工工号' }]\">\n          <a-input\n            v-model=\"form.empCode\"\n            placeholder=\"请输入\"\n            disabled\n          >\n          </a-input>\n        </a-form-item>\n        <a-form-item field=\"deptName\" label=\"部门名称\" disabled :rules=\"[{ required: true, message: '请输入部门名称' }]\">\n          <a-input v-model=\"form.deptName\" placeholder=\"请输入\" :disabled=\"accountModalStatus === 'update'\"/>\n        </a-form-item>\n        <a-form-item v-if=\"hasAdmin\" field=\"roleConfig1\" label=\"角色\" :rules=\"[{ required: true, message: '请输入角色设置' }]\">\n          <a-select v-model=\"form.roleConfig1\" placeholder=\"请输入\" multiple allow-search>\n            <a-option v-for=\"item of roleList\" :value=\"item.id\" :key=\"item.id\">{{ item.name }}</a-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item v-else field=\"roleConfig\" label=\"角色\" :rules=\"[{ required: true, message: '请选择角色设置' }]\">\n          <span class=\"m-t-8\">{{ form.roleConfig }}</span>\n        </a-form-item>\n        <!-- <a-form-item field=\"password\" label=\"密码\" :rules=\"[{ required: true, message: '请输入密码' }]\">\n          <a-input-password v-model=\"form.password\" placeholder=\"请输入\" allow-clear />\n        </a-form-item> -->\n      </a-form>\n      <template #footer>\n        <a-button @click=\"handleCancel\">取消</a-button>\n        <a-button type=\"primary\" @click=\"handleModalOk\">确定</a-button>\n      </template>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { userListColumns } from \"./constColumns\";\nimport { getUserList, updateFlag, getNameCodeList,listShowTabRole } from \"@/api/userRole\";\nimport { onBeforeMount, reactive, ref, shallowRef } from \"vue\";\nimport tableContainer from \"@/components/tableContainer.vue\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nimport { Message } from \"@arco-design/web-vue\";\nimport { saveUser, userDetail } from \"@/api/userRole.js\";\nimport { postSelectRoleList } from \"@/api/calendarEvents.js\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nimport { useUserInfoStore, useMenuStore } from \"../../store/index\";\nconst permissions = useMenuStore().getPermission;\nconst userInfo = useUserInfoStore().getUserInfo;\nonBeforeMount(() => {\n  $bus.emit(\"updateStructure\", [{ type: \"text\", color: \"#333\", msg: \"账号列表\" }]);\n  getRole();\n});\nconst hasAdmin = ref(false);\nconst tabList = ref([]);\nconst chekedValue = ref(\"OMD\");\nconst userTableColumns = ref(userListColumns);\nconst accountVisible = ref(false);\nconst form = reactive({\n  roleConfig: \"OMD\",\n  roleConfig1: [],\n  empCode:'',\n  empName:\"\",\n  deptName:'',\n  userName:''\n});\nconst roles = ref([]);\nconst formRef = ref(null);\nconst scroll = {\n  x: \"100%\",\n  y: 600,\n};\nconst empList = shallowRef([]);\nconst actionType = ref(\"\");\nconst title = ref(\"\");\nconst id = ref(\"\");\nconst roleList = ref([]);\nconst accountModalStatus = ref('add')\n// 表格配置\nconst dataContent = reactive({\n  loading: false,\n  dataSource: [],\n  pagination: {\n    pageNum: 1,\n    pageSize: 10,\n    total: 0,\n  },\n  menuName: \"user\",\n});\nconst getRole = () => {\n  postSelectRoleList().then(res => {\n    if (res.code == \"200\") {\n      roleList.value = res.data;\n    }\n  });\n};\n// 获取列表数据\nconst getList = () => {\n  dataContent.loading = true;\n  const params = {\n    pageNum: dataContent.pagination.pageNum,\n    pageSize: dataContent.pagination.pageSize,\n    roleCode: chekedValue.value,\n  };\n  getUserList(params).then(res => {\n    if (res.code === \"000000000000\") {\n      res.data.list.forEach((item, i) => {\n        item.key = i;\n      });\n      dataContent.pagination.total = parseInt(res.data.total);\n      dataContent.dataSource = res.data.list;\n    }\n    dataContent.loading = false;\n  });\n};\ngetList();\n// 新建账号\nconst handleDetail = () => {\n  accountVisible.value = true;\n  actionType.value = \"\";\n  title.value = \"新建账号\";\n  formRef.value.resetFields();\n  form.roleConfig1 = []\n  id.value = \"\";\n  accountModalStatus.value = 'add'\n  chekedValue.value === \"OMD\" ? (form.roleConfig = \"OMD\") : (form.roleConfig = \"admin\");\n  if (userInfo.roles.indexOf(\"admin\") != -1) {\n    hasAdmin.value = true;\n  } else {\n    hasAdmin.value = false;\n  }\n};\n// 更改账号状态\nconst handleUpdateFlag = record => {\n  const params = {\n    userId: record.id,\n    flag: record.flag == 1 ? 0 : 1,\n  };\n  updateFlag(params).then(res => {\n    if (res.code === \"000000000000\") {\n      Message.success(\"操作成功\");\n      getList();\n    } else {\n      Message.error(res.message);\n    }\n  });\n};\n// 更改当前页码\nconst paginationCurrentChange = current => {\n  dataContent.pagination.pageNum = current;\n  getList();\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  dataContent.pagination.pageSize = pageSize;\n  getList();\n};\n// 切换tab\nconst radioChange = val => {\n  chekedValue.value = val;\n  form.roleConfig = val;\n  getList();\n};\n// 编辑\nconst handleEditUser = (record, type) => {\n  roles.value = [];\n  form.roleConfig1 = [];\n  accountVisible.value = true;\n  accountModalStatus.value = 'update'\n  if (userInfo.roles.indexOf(\"admin\") != -1) {\n    hasAdmin.value = true;\n  } else {\n    hasAdmin.value = false;\n  }\n  userDetail({ id: record.id }).then(res => {\n    const { data, code } = res;\n    if (code === \"000000000000\") {\n      form.empName = `${data.name}`;\n      form.empCode = data.workNo;\n      form.deptName = data.deptName;\n      // form.password = data.pwd;\n      form.userName = data.userName;\n      data.roles.forEach(item => {\n        if (form.roleConfig1.indexOf(item.id) === -1) {\n          form.roleConfig1.push(item.id);\n        }\n      });\n    }\n  });\n  actionType.value = type;\n  title.value = \"编辑账号\";\n  id.value = record.id;\n};\nconst getNameCode = (params) =>{\n  getNameCodeList(params).then(res => {\n    if (res.code == \"000000000000\") {\n      empList.value = res.data;\n    }\n  });\n}\n// 搜索\nconst handleNameSearch = val => {\n  formRef.value.resetFields();\n  //请求接口\n  const params = {\n    empName:val,\n    empCode:form.empCode\n  }\n  getNameCode(params)\n};\n// 更改员工姓名\nconst changeDeptname = val => {\n  form.empName = val;\n  empList.value.forEach(item => {\n    if (val.indexOf(item.empCode) !== -1) {\n      form.empCode = item.empCode;\n      form.deptName = item.deptName;\n      form.userName = item.empEmail.slice(0, item.empEmail.indexOf(\"@\"));\n    }\n  });\n};\nconst filterEmpList = (empCode)=>{\n  return empList.value.filter(item=>item.empCode===empCode)[0] || {}\n}\n// 取消\nconst handleCancel = () => {\n  accountVisible.value = false;\n};\nconst transformedArr = arr => {\n  return arr.map(item => {\n    return { id: item };\n  });\n};\nconst transformedObj = (name, code) => {\n  if (form.roleConfig == name) {\n    roleList.value.forEach(item => {\n      if (item.code == code) {\n        roles.value.push({ id: item.id });\n      }\n    });\n  }\n};\n// 确定\nconst handleModalOk = () => {\n  formRef.value.validate(err => {\n    if (!err) {\n      accountVisible.value = false;\n      if (!hasAdmin.value) {\n        transformedObj(\"OMD\", \"OMD\");\n        transformedObj(\"admin\", \"admin\");\n      }\n      let accountName = title.value === \"新建账号\"?filterEmpList(form.empCode).empName : form.empName\n      const params = {\n        id: id.value,\n        name: accountName,\n        workNo: form.empCode,\n        deptName: form.deptName,\n        // pwd: form.password,\n        roles: hasAdmin.value ? transformedArr(form.roleConfig1) : roles.value,\n        roleCode: chekedValue.value,\n        userName: form.userName || form.empName\n      };\n      saveUser(params)\n        .then(res => {\n          if (res.code === \"000000000000\") {\n            Message.success(\"操作成功\");\n            getList();\n          } else {\n            Message.error(res.message);\n          }\n        })\n        .catch(err => {\n          Message.error(err.message || '数据请求失败');\n        });\n    }\n  });\n};\nconst getTabShow = ()=>{\n  listShowTabRole().then(res=>{\n    if(res.code === '000000000000'){\n      tabList.value = res.data.map(item=>{\n        return {\n            key: item.code,\n            name: item.name,\n          }\n      })\n    }else {\n      Message.error(res.message);\n    }\n  }).catch(err=>{\n    Message.error(err.message || '数据请求失败');\n  })\n} \ngetTabShow()\n</script>\n\n<style lang=\"scss\">\n.flex-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.m-t-20 {\n  margin-top: 20px;\n}\n\n.tableResize {\n  .arco-table-container .arco-table-content {\n    .arco-table-header {\n      .arco-table-element {\n        thead tr:first-child .arco-table-th:last-child {\n          transform: translateX(16.5px);\n        }\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}