{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport \"core-js/modules/es.array.push.js\";\nimport { onBeforeMount, reactive, ref, nextTick, onMounted, toRaw } from \"vue\";\nimport { useTagColumnListStore } from \"../../store/index\";\nimport { getPretrialComparisonList } from \"@/api/preRealComparsion.js\";\nimport { getCurrentDate, dataAddKey, toInteger } from \"../../utils/util\";\nexport default {\n  __name: 'preRealComparsion',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let tagColumnList = useTagColumnListStore();\n    let columConfig = {};\n    let {\n      year,\n      month\n    } = getCurrentDate();\n    let currentDate = `${year}`;\n    let months = `${month}`;\n    const regex = /(\\d+)月/g;\n    const yearNow = ref(currentDate);\n    const tableInfo = reactive({\n      columns: [],\n      data: [],\n      maxHeight: \"200px\",\n      loading: false,\n      defaultExpandedKeys: []\n    });\n    const tableRef = ref(null);\n    const tabChangeColumInfo = reactive({\n      tabList: []\n    });\n    onMounted(() => {\n      if (tableRef.value) {\n        let head = tableRef.value.$el;\n        nextTick(() => {\n          let innerHeight = window.innerHeight;\n          let elHeight = head.getBoundingClientRect().top;\n          tableInfo.maxHeight = innerHeight - elHeight - 30 + \"px\";\n        });\n      }\n    });\n    // 初始化\n    const seltColumns = () => {\n      let tagColumns = toRaw(tagColumnList.getTagColumnList) || [];\n      let currentPageColumn = tagColumns.filter(item => item.report === \"预实对比\") || [];\n      if (currentPageColumn.length) {\n        if (months[0] == 0) {\n          months = months[1];\n        }\n        currentPageColumn[0].tier.forEach((item, index) => {\n          let tabs = [];\n          let columnTabs = []; // 可点击高亮不高亮的标签\n          let noHiddenColumn = []; // 不可点击高亮不高亮的标签\n          item.tags.forEach(jtem => {\n            tabs.push(jtem.tag);\n            jtem.columns.forEach(ktem => {\n              let {\n                col,\n                conf,\n                title\n              } = ktem;\n              if (title.indexOf(\"月\") !== -1) {\n                title = title.replace(regex, `${months}月`);\n              }\n              conf = conf || {};\n              let columnItemConfig = {\n                title,\n                dataIndex: col,\n                align: conf.align,\n                cellStyle: {\n                  \"text-align\": conf.cellAlign\n                },\n                width: conf.width,\n                ellipsis: true,\n                headerCellClass: \"noEllipsis\",\n                slotName: col,\n                isShow: conf.isShow,\n                configType: conf.configType,\n                parentCol: conf.parentCol,\n                titleSlotName: 'columTitleSlot'\n              };\n              if (conf.canHide === 1) {\n                columnTabs.push(columnItemConfig); // 可以点击高亮的 === 有children的\n              } else {\n                noHiddenColumn.push(columnItemConfig); // 不可以点击高亮的 === 固定在表格的\n              }\n              // 去重\n              let map = new Map();\n              for (let i of columnTabs) {\n                if (!map.has(i.configType)) {\n                  map.set(i.configType, i);\n                }\n              }\n              tabChangeColumInfo.tabList = [...map.values()];\n            });\n          });\n          columConfig = {\n            tabs,\n            params: item.params || [],\n            columnTabs,\n            noHiddenColumn\n          };\n        });\n      }\n    };\n    // 更换表头\n    const analysiisColumn = () => {\n      let {\n        columnTabs,\n        noHiddenColumn\n      } = columConfig;\n      let filterHasSonShowColumn1 = columnTabs.filter(item => item.isShow === 1);\n      let columnHasSonConfig = new Map();\n      filterHasSonShowColumn1.forEach(item => {\n        if (columnHasSonConfig.has(item.parentCol)) {\n          let value = columnHasSonConfig.get(item.parentCol);\n          value.children.push(item);\n          columnHasSonConfig.set(item.parentCol, value);\n        } else {\n          columnHasSonConfig.set(item.parentCol, {\n            title: item.parentCol,\n            children: [item]\n          });\n        }\n      });\n      let number = 0;\n      columnHasSonConfig.forEach(item => {\n        number += 1;\n        if (!item.children) {\n          item.dataIndex = `colNo${number}`;\n          item.slotName = `colNo${number}`;\n        } else {\n          number = number - 1;\n          item.children.forEach(jtem => {\n            number += 1;\n            jtem.dataIndex = `colNo${number}`;\n            jtem.slotName = `colNo${number}`;\n            jtem.render = ({\n              record\n            }) => {\n              return _createVNode(\"span\", {\n                \"innerHTML\": toInteger(record[jtem.dataIndex])\n              }, null);\n            };\n          });\n        }\n      });\n      let filterAllShowColumn = [...noHiddenColumn, ...columnHasSonConfig.values()];\n      tableInfo.columns = filterAllShowColumn;\n    };\n    onBeforeMount(() => {\n      seltColumns();\n      analysiisColumn();\n      getList();\n    });\n    // 点击标签\n    const handleHasSonTabChange = tab => {\n      switch (tab.isShow) {\n        case 0:\n          tab.isShow = 1;\n          changeShowStatus({\n            type: \"self\",\n            configType: tab.configType,\n            val: 1\n          });\n          break;\n        case 1:\n          tab.isShow = 0;\n          changeShowStatus({\n            type: \"self\",\n            configType: tab.configType,\n            val: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    // 更改高亮状态并更换表头\n    const changeShowStatus = obj => {\n      let {\n        columnTabs,\n        noHiddenColumn\n      } = columConfig;\n      let columnsArr = [];\n      if (obj.type === \"self\") {\n        columnTabs.forEach(item => {\n          if (obj.configType === item.configType) {\n            item.isShow = obj.val;\n          }\n        });\n      }\n      let filterHasSonShowColumn = columnTabs.filter(item => item.isShow === 1);\n      let columnHasSonConfig = new Map();\n      filterHasSonShowColumn.forEach(item => {\n        if (columnHasSonConfig.has(item.parentCol)) {\n          let value = columnHasSonConfig.get(item.parentCol);\n          value.children.push(item);\n          columnHasSonConfig.set(item.parentCol, value);\n        } else {\n          columnHasSonConfig.set(item.parentCol, {\n            title: item.parentCol,\n            children: [item]\n          });\n        }\n      });\n      let number = 0;\n      columnHasSonConfig.forEach(item => {\n        number += 1;\n        if (!item.children) {\n          item.dataIndex = `colNo${number}`;\n          item.slotName = `colNo${number}`;\n        } else {\n          number = number - 1;\n          item.children.forEach(jtem => {\n            number += 1;\n            jtem.dataIndex = `colNo${number}`;\n            jtem.slotName = `colNo${number}`;\n            jtem.render = ({\n              record\n            }) => {\n              return _createVNode(\"span\", {\n                \"innerHTML\": toInteger(record[jtem.dataIndex])\n              }, null);\n            };\n          });\n        }\n      });\n      columnsArr = [...noHiddenColumn, ...columnHasSonConfig.values()];\n      tableInfo.columns = columnsArr;\n      getList();\n    };\n    // 获取列表数据\n    const getList = () => {\n      tableInfo.data = [];\n      tableInfo.loading = true;\n      let arr = [];\n      var newColumns = JSON.parse(JSON.stringify(tableInfo.columns));\n      newColumns.forEach(item => {\n        if (item.title === \"部门名称\") {\n          arr.push(\"deptName\");\n        }\n        if (item.title === \"人数累计\") {\n          arr.push(\"colNo1\");\n        }\n        if (item.title === \"营业收入累计\") {\n          arr.push(\"colNo2\");\n        }\n        if (item.title === \"销售毛利累计\" || item.title === \"销售毛利率累计\") {\n          arr.push(\"colNo3\");\n        }\n        if (item.title === \"考核经营净利润累计\" || item.title === \"考核经营净利润率累计\") {\n          arr.push(\"colNo4\");\n        }\n        if (item.title === \"招聘费用累计\") {\n          arr.push(\"colNo5\");\n        }\n        if (item.title === \"销售费用累计\") {\n          arr.push(\"colNo6\");\n        }\n        if (item.title === \"管理费用累计\") {\n          arr.push(\"colNo7\");\n        }\n      });\n      const params = {\n        dynamicHeaderParam: Array.from(new Set(arr)),\n        tagKey: \"prerealComparison\"\n      };\n      getPretrialComparisonList(params).then(res => {\n        if (res.code == \"200\") {\n          let data = dataAddKey(res.data, \"key\", \"id\");\n          tableInfo.data = data;\n          let keys = [];\n          res.data.forEach(item => keys.push(item.id));\n          tableInfo.defaultExpandedKeys = keys;\n        }\n      }).catch(e => {\n        Message.error(e.message || '请求数据错误');\n      }).finally(() => {\n        tableInfo.loading = false;\n      });\n    };\n    const expandedChange = rowKeys => {\n      tableInfo.defaultExpandedKeys = rowKeys;\n    };\n    // 查询\n    const handleSearch = () => {\n      getList();\n    };\n    // 重置\n    const handleReset = () => {};\n    const __returned__ = {\n      get tagColumnList() {\n        return tagColumnList;\n      },\n      set tagColumnList(v) {\n        tagColumnList = v;\n      },\n      get columConfig() {\n        return columConfig;\n      },\n      set columConfig(v) {\n        columConfig = v;\n      },\n      get year() {\n        return year;\n      },\n      set year(v) {\n        year = v;\n      },\n      get month() {\n        return month;\n      },\n      set month(v) {\n        month = v;\n      },\n      get currentDate() {\n        return currentDate;\n      },\n      set currentDate(v) {\n        currentDate = v;\n      },\n      get months() {\n        return months;\n      },\n      set months(v) {\n        months = v;\n      },\n      regex,\n      yearNow,\n      tableInfo,\n      tableRef,\n      tabChangeColumInfo,\n      seltColumns,\n      analysiisColumn,\n      handleHasSonTabChange,\n      changeShowStatus,\n      getList,\n      expandedChange,\n      handleSearch,\n      handleReset,\n      onBeforeMount,\n      reactive,\n      ref,\n      nextTick,\n      onMounted,\n      toRaw,\n      get useTagColumnListStore() {\n        return useTagColumnListStore;\n      },\n      get getPretrialComparisonList() {\n        return getPretrialComparisonList;\n      },\n      get getCurrentDate() {\n        return getCurrentDate;\n      },\n      get dataAddKey() {\n        return dataAddKey;\n      },\n      get toInteger() {\n        return toInteger;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;AAiEA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC9E,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,yBAAyB,QAAQ,4BAA4B;AACtE,SAASC,cAAc,EAAEC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;;;;;;;IACxE,IAAIC,aAAa,GAAGL,qBAAqB,EAAE;IAC3C,IAAIM,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGN,cAAc,EAAE;IACtC,IAAIO,WAAW,GAAI,GAAEF,IAAK,EAAC;IAC3B,IAAIG,MAAM,GAAI,GAAEF,KAAM,EAAC;IACvB,MAAMG,KAAK,GAAG,SAAS;IACvB,MAAMC,OAAO,GAAGhB,GAAG,CAACa,WAAW,CAAC;IAChC,MAAMI,SAAS,GAAGlB,QAAQ,CAAC;MACzBmB,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE,KAAK;MACdC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACF,MAAMC,QAAQ,GAAGvB,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMwB,kBAAkB,GAAGzB,QAAQ,CAAC;MAClC0B,OAAO,EAAE;IACX,CAAC,CAAC;IACFvB,SAAS,CAAC,MAAM;MACd,IAAIqB,QAAQ,CAACG,KAAK,EAAE;QAClB,IAAIC,IAAI,GAAGJ,QAAQ,CAACG,KAAK,CAACE,GAAG;QAC7B3B,QAAQ,CAAC,MAAM;UACb,IAAI4B,WAAW,GAAGC,MAAM,CAACD,WAAW;UACpC,IAAIE,QAAQ,GAAGJ,IAAI,CAACK,qBAAqB,EAAE,CAACC,GAAG;UAC/ChB,SAAS,CAACG,SAAS,GAAGS,WAAW,GAAGE,QAAQ,GAAG,EAAE,GAAG,IAAI;QAC1D,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF;IACA,MAAMG,WAAW,GAAG,MAAM;MACxB,IAAIC,UAAU,GAAGhC,KAAK,CAACM,aAAa,CAAC2B,gBAAgB,CAAC,IAAI,EAAE;MAC5D,IAAIC,iBAAiB,GAAGF,UAAU,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,MAAM,CAAC,IAAI,EAAE;MAC/E,IAAIH,iBAAiB,CAACI,MAAM,EAAE;QAC5B,IAAI3B,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;UAClBA,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC;QACpB;QACAuB,iBAAiB,CAAC,CAAC,CAAC,CAACK,IAAI,CAACC,OAAO,CAAC,CAACJ,IAAI,EAAEK,KAAK,KAAK;UACjD,IAAIC,IAAI,GAAG,EAAE;UACb,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;UACrB,IAAIC,cAAc,GAAG,EAAE,CAAC,CAAC;UACzBR,IAAI,CAACS,IAAI,CAACL,OAAO,CAACM,IAAI,IAAI;YACxBJ,IAAI,CAACK,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC;YACnBF,IAAI,CAAC/B,OAAO,CAACyB,OAAO,CAACS,IAAI,IAAI;cAC3B,IAAI;gBAAEC,GAAG;gBAAEC,IAAI;gBAAEC;cAAM,CAAC,GAAGH,IAAI;cAC/B,IAAIG,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC7BD,KAAK,GAAGA,KAAK,CAACE,OAAO,CAAC1C,KAAK,EAAG,GAAED,MAAO,GAAE,CAAC;cAC5C;cACAwC,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;cACjB,IAAII,gBAAgB,GAAG;gBACrBH,KAAK;gBACLI,SAAS,EAAEN,GAAG;gBACdO,KAAK,EAAEN,IAAI,CAACM,KAAK;gBACjBC,SAAS,EAAE;kBAAE,YAAY,EAAEP,IAAI,CAACQ;gBAAU,CAAC;gBAC3CC,KAAK,EAAET,IAAI,CAACS,KAAK;gBACjBC,QAAQ,EAAE,IAAI;gBACdC,eAAe,EAAE,YAAY;gBAC7BC,QAAQ,EAAEb,GAAG;gBACbc,MAAM,EAAEb,IAAI,CAACa,MAAM;gBACnBC,UAAU,EAAEd,IAAI,CAACc,UAAU;gBAC3BC,SAAS,EAAEf,IAAI,CAACe,SAAS;gBACzBC,aAAa,EAAG;cAClB,CAAC;cACD,IAAIhB,IAAI,CAACiB,OAAO,KAAK,CAAC,EAAE;gBACtBzB,UAAU,CAACI,IAAI,CAACQ,gBAAgB,CAAC,CAAC,CAAC;cACrC,CAAC,MAAM;gBACLX,cAAc,CAACG,IAAI,CAACQ,gBAAgB,CAAC,CAAC,CAAC;cACzC;cACA;cACA,IAAIc,GAAG,GAAG,IAAIC,GAAG,EAAE;cACnB,KAAK,IAAIC,CAAC,IAAI5B,UAAU,EAAE;gBACxB,IAAI,CAAC0B,GAAG,CAACG,GAAG,CAACD,CAAC,CAACN,UAAU,CAAC,EAAE;kBAC1BI,GAAG,CAACI,GAAG,CAACF,CAAC,CAACN,UAAU,EAAEM,CAAC,CAAC;gBAC1B;cACF;cACAlD,kBAAkB,CAACC,OAAO,GAAG,CAAC,GAAG+C,GAAG,CAACK,MAAM,EAAE,CAAC;YAChD,CAAC,CAAC;UACJ,CAAC,CAAC;UACFnE,WAAW,GAAG;YACZmC,IAAI;YACJiC,MAAM,EAAEvC,IAAI,CAACuC,MAAM,IAAI,EAAE;YACzBhC,UAAU;YACVC;UACF,CAAC;QACH,CAAC,CAAC;MACJ;IACF,CAAC;IACD;IACA,MAAMgC,eAAe,GAAG,MAAM;MAC5B,IAAI;QAAEjC,UAAU;QAAEC;MAAe,CAAC,GAAGrC,WAAW;MAChD,IAAIsE,uBAAuB,GAAGlC,UAAU,CAACR,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC4B,MAAM,KAAK,CAAC,CAAC;MAC1E,IAAIc,kBAAkB,GAAG,IAAIR,GAAG,EAAE;MAClCO,uBAAuB,CAACrC,OAAO,CAACJ,IAAI,IAAI;QACtC,IAAI0C,kBAAkB,CAACN,GAAG,CAACpC,IAAI,CAAC8B,SAAS,CAAC,EAAE;UAC1C,IAAI3C,KAAK,GAAGuD,kBAAkB,CAACC,GAAG,CAAC3C,IAAI,CAAC8B,SAAS,CAAC;UAClD3C,KAAK,CAACyD,QAAQ,CAACjC,IAAI,CAACX,IAAI,CAAC;UACzB0C,kBAAkB,CAACL,GAAG,CAACrC,IAAI,CAAC8B,SAAS,EAAE3C,KAAK,CAAC;QAC/C,CAAC,MAAM;UACLuD,kBAAkB,CAACL,GAAG,CAACrC,IAAI,CAAC8B,SAAS,EAAE;YACrCd,KAAK,EAAEhB,IAAI,CAAC8B,SAAS;YACrBc,QAAQ,EAAE,CAAC5C,IAAI;UACjB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI6C,MAAM,GAAG,CAAC;MACdH,kBAAkB,CAACtC,OAAO,CAACJ,IAAI,IAAI;QACjC6C,MAAM,IAAI,CAAC;QACX,IAAI,CAAC7C,IAAI,CAAC4C,QAAQ,EAAE;UAClB5C,IAAI,CAACoB,SAAS,GAAI,QAAOyB,MAAO,EAAC;UACjC7C,IAAI,CAAC2B,QAAQ,GAAI,QAAOkB,MAAO,EAAC;QAClC,CAAC,MAAM;UACLA,MAAM,GAAGA,MAAM,GAAG,CAAC;UACnB7C,IAAI,CAAC4C,QAAQ,CAACxC,OAAO,CAACM,IAAI,IAAI;YAC5BmC,MAAM,IAAI,CAAC;YACXnC,IAAI,CAACU,SAAS,GAAI,QAAOyB,MAAO,EAAC;YACjCnC,IAAI,CAACiB,QAAQ,GAAI,QAAOkB,MAAO,EAAC;YAChCnC,IAAI,CAACoC,MAAM,GAAG,CAAC;cAAEC;YAAO,CAAC,KAAK;cAC5B;gBAAA,aAAwB9E,SAAS,CAAC8E,MAAM,CAACrC,IAAI,CAACU,SAAS,CAAC;cAAC;YAC3D,CAAC;UACH,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI4B,mBAAmB,GAAG,CAAC,GAAGxC,cAAc,EAAE,GAAGkC,kBAAkB,CAACJ,MAAM,EAAE,CAAC;MAC7E5D,SAAS,CAACC,OAAO,GAAGqE,mBAAmB;IACzC,CAAC;IACDzF,aAAa,CAAC,MAAM;MAClBoC,WAAW,EAAE;MACb6C,eAAe,EAAE;MACjBS,OAAO,EAAE;IACX,CAAC,CAAC;IACF;IACA,MAAMC,qBAAqB,GAAGC,GAAG,IAAI;MACnC,QAAQA,GAAG,CAACvB,MAAM;QAChB,KAAK,CAAC;UACJuB,GAAG,CAACvB,MAAM,GAAG,CAAC;UACdwB,gBAAgB,CAAC;YACfC,IAAI,EAAE,MAAM;YACZxB,UAAU,EAAEsB,GAAG,CAACtB,UAAU;YAC1ByB,GAAG,EAAE;UACP,CAAC,CAAC;UACF;QACF,KAAK,CAAC;UACJH,GAAG,CAACvB,MAAM,GAAG,CAAC;UACdwB,gBAAgB,CAAC;YACfC,IAAI,EAAE,MAAM;YACZxB,UAAU,EAAEsB,GAAG,CAACtB,UAAU;YAC1ByB,GAAG,EAAE;UACP,CAAC,CAAC;UACF;QACF;UACE;MAAM;IAEZ,CAAC;IACD;IACA,MAAMF,gBAAgB,GAAGG,GAAG,IAAI;MAC9B,IAAI;QAAEhD,UAAU;QAAEC;MAAe,CAAC,GAAGrC,WAAW;MAChD,IAAIqF,UAAU,GAAG,EAAE;MACnB,IAAID,GAAG,CAACF,IAAI,KAAK,MAAM,EAAE;QACvB9C,UAAU,CAACH,OAAO,CAACJ,IAAI,IAAI;UACzB,IAAIuD,GAAG,CAAC1B,UAAU,KAAK7B,IAAI,CAAC6B,UAAU,EAAE;YACtC7B,IAAI,CAAC4B,MAAM,GAAG2B,GAAG,CAACD,GAAG;UACvB;QACF,CAAC,CAAC;MACJ;MACA,IAAIG,sBAAsB,GAAGlD,UAAU,CAACR,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC4B,MAAM,KAAK,CAAC,CAAC;MACzE,IAAIc,kBAAkB,GAAG,IAAIR,GAAG,EAAE;MAClCuB,sBAAsB,CAACrD,OAAO,CAACJ,IAAI,IAAI;QACrC,IAAI0C,kBAAkB,CAACN,GAAG,CAACpC,IAAI,CAAC8B,SAAS,CAAC,EAAE;UAC1C,IAAI3C,KAAK,GAAGuD,kBAAkB,CAACC,GAAG,CAAC3C,IAAI,CAAC8B,SAAS,CAAC;UAClD3C,KAAK,CAACyD,QAAQ,CAACjC,IAAI,CAACX,IAAI,CAAC;UACzB0C,kBAAkB,CAACL,GAAG,CAACrC,IAAI,CAAC8B,SAAS,EAAE3C,KAAK,CAAC;QAC/C,CAAC,MAAM;UACLuD,kBAAkB,CAACL,GAAG,CAACrC,IAAI,CAAC8B,SAAS,EAAE;YACrCd,KAAK,EAAEhB,IAAI,CAAC8B,SAAS;YACrBc,QAAQ,EAAE,CAAC5C,IAAI;UACjB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI6C,MAAM,GAAG,CAAC;MACdH,kBAAkB,CAACtC,OAAO,CAACJ,IAAI,IAAI;QACjC6C,MAAM,IAAI,CAAC;QACX,IAAI,CAAC7C,IAAI,CAAC4C,QAAQ,EAAE;UAClB5C,IAAI,CAACoB,SAAS,GAAI,QAAOyB,MAAO,EAAC;UACjC7C,IAAI,CAAC2B,QAAQ,GAAI,QAAOkB,MAAO,EAAC;QAClC,CAAC,MAAM;UACLA,MAAM,GAAGA,MAAM,GAAG,CAAC;UACnB7C,IAAI,CAAC4C,QAAQ,CAACxC,OAAO,CAACM,IAAI,IAAI;YAC5BmC,MAAM,IAAI,CAAC;YACXnC,IAAI,CAACU,SAAS,GAAI,QAAOyB,MAAO,EAAC;YACjCnC,IAAI,CAACiB,QAAQ,GAAI,QAAOkB,MAAO,EAAC;YAChCnC,IAAI,CAACoC,MAAM,GAAG,CAAC;cAAEC;YAAO,CAAC,KAAK;cAC5B;gBAAA,aAAwB9E,SAAS,CAAC8E,MAAM,CAACrC,IAAI,CAACU,SAAS,CAAC;cAAC;YAC3D,CAAC;UACH,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACFoC,UAAU,GAAG,CAAC,GAAGhD,cAAc,EAAE,GAAGkC,kBAAkB,CAACJ,MAAM,EAAE,CAAC;MAEhE5D,SAAS,CAACC,OAAO,GAAG6E,UAAU;MAC9BP,OAAO,EAAE;IACX,CAAC;IACD;IACA,MAAMA,OAAO,GAAG,MAAM;MACpBvE,SAAS,CAACE,IAAI,GAAG,EAAE;MACnBF,SAAS,CAACI,OAAO,GAAG,IAAI;MACxB,IAAI4E,GAAG,GAAG,EAAE;MACZ,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACpF,SAAS,CAACC,OAAO,CAAC,CAAC;MAC9DgF,UAAU,CAACvD,OAAO,CAACJ,IAAI,IAAI;QACzB,IAAIA,IAAI,CAACgB,KAAK,KAAK,MAAM,EAAE;UACzB0C,GAAG,CAAC/C,IAAI,CAAC,UAAU,CAAC;QACtB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,MAAM,EAAE;UACzB0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,QAAQ,EAAE;UAC3B0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,QAAQ,IAAIhB,IAAI,CAACgB,KAAK,KAAK,SAAS,EAAE;UACvD0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,WAAW,IAAIhB,IAAI,CAACgB,KAAK,KAAK,YAAY,EAAE;UAC7D0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,QAAQ,EAAE;UAC3B0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,QAAQ,EAAE;UAC3B0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;QACA,IAAIX,IAAI,CAACgB,KAAK,KAAK,QAAQ,EAAE;UAC3B0C,GAAG,CAAC/C,IAAI,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC;MACF,MAAM4B,MAAM,GAAG;QACbwB,kBAAkB,EAAEC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACR,GAAG,CAAC,CAAC;QAC5CS,MAAM,EAAE;MACV,CAAC;MACDrG,yBAAyB,CAACyE,MAAM,CAAC,CAAC6B,IAAI,CAACC,GAAG,IAAI;QAC5C,IAAIA,GAAG,CAACC,IAAI,IAAI,KAAK,EAAE;UACrB,IAAI1F,IAAI,GAAGZ,UAAU,CAACqG,GAAG,CAACzF,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;UAC5CF,SAAS,CAACE,IAAI,GAAGA,IAAI;UACrB,IAAI2F,IAAI,GAAG,EAAE;UACbF,GAAG,CAACzF,IAAI,CAACwB,OAAO,CAACJ,IAAI,IAAIuE,IAAI,CAAC5D,IAAI,CAACX,IAAI,CAACwE,EAAE,CAAC,CAAC;UAC5C9F,SAAS,CAACK,mBAAmB,GAAGwF,IAAI;QACtC;MACF,CAAC,CAAC,CAACE,KAAK,CAACC,CAAC,IAAE;QACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,OAAO,IAAI,QAAQ,CAAC;MACtC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAI;QACbpG,SAAS,CAACI,OAAO,GAAG,KAAK;MAC3B,CAAC,CAAC;IACJ,CAAC;IACD,MAAMiG,cAAc,GAAGC,OAAO,IAAI;MAChCtG,SAAS,CAACK,mBAAmB,GAAGiG,OAAO;IACzC,CAAC;IACD;IACA,MAAMC,YAAY,GAAG,MAAM;MACzBhC,OAAO,EAAE;IACX,CAAC;IACD;IACA,MAAMiC,WAAW,GAAG,MAAM,CAAC,CAAC","names":["onBeforeMount","reactive","ref","nextTick","onMounted","toRaw","useTagColumnListStore","getPretrialComparisonList","getCurrentDate","dataAddKey","toInteger","tagColumnList","columConfig","year","month","currentDate","months","regex","yearNow","tableInfo","columns","data","maxHeight","loading","defaultExpandedKeys","tableRef","tabChangeColumInfo","tabList","value","head","$el","innerHeight","window","elHeight","getBoundingClientRect","top","seltColumns","tagColumns","getTagColumnList","currentPageColumn","filter","item","report","length","tier","forEach","index","tabs","columnTabs","noHiddenColumn","tags","jtem","push","tag","ktem","col","conf","title","indexOf","replace","columnItemConfig","dataIndex","align","cellStyle","cellAlign","width","ellipsis","headerCellClass","slotName","isShow","configType","parentCol","titleSlotName","canHide","map","Map","i","has","set","values","params","analysiisColumn","filterHasSonShowColumn1","columnHasSonConfig","get","children","number","render","record","filterAllShowColumn","getList","handleHasSonTabChange","tab","changeShowStatus","type","val","obj","columnsArr","filterHasSonShowColumn","arr","newColumns","JSON","parse","stringify","dynamicHeaderParam","Array","from","Set","tagKey","then","res","code","keys","id","catch","e","Message","error","message","finally","expandedChange","rowKeys","handleSearch","handleReset"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/LeanAnalyze/preRealComparsion.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <!-- 查询表单 -->\n    <div>\n      <a-space wrap>\n        <span>年份：</span>\n        <a-year-picker v-model=\"yearNow\" disabled style=\"width: 120px; border-radius: 4px\" :allow-clear=\"false\" />\n        <a-button type=\"primary\" style=\"margin-left: 16px\" @click=\"handleSearch\">\n          <template #icon>\n            <icon-search />\n          </template>\n          <template #default>搜索</template>\n        </a-button>\n        <a-button @click=\"handleReset\">\n          <template #icon>\n            <icon-refresh />\n          </template>\n          <template #default>重置</template>\n        </a-button>\n      </a-space>\n    </div>\n    <div class=\"m-t-20 flex-between\">\n      <div style=\"align-self: flex-start\">\n        <div class=\"m-b-20\">\n          <a-space wrap>\n            <a-tag\n              v-for=\"(item, index) of tabChangeColumInfo.tabList\"\n              :key=\"index\"\n              :color=\"item.isShow === 1 ? 'arcoblue' : ''\"\n              size=\"large\"\n              class=\"pointer\"\n              @click=\"handleHasSonTabChange(item)\"\n            >\n              {{ item.configType }}\n            </a-tag>\n          </a-space>\n        </div>\n      </div>\n    </div>\n    <!-- 表格  -->\n    <div class=\"m-t-20\">\n      <a-table\n        :columns=\"tableInfo.columns\"\n        :data=\"tableInfo.data\"\n        column-resizable\n        :scroll=\"{ maxHeight: tableInfo.maxHeight }\"\n        :scrollbar=\"{ x: true, y: 750 }\"\n        :pagination=\"false\"\n        :loading=\"tableInfo.loading\"\n        :bordered=\"false\"\n        ref=\"tableRef\"\n        :expanded-keys=\"tableInfo.defaultExpandedKeys\"\n        @expanded-change=\"expandedChange\"\n      >\n      <template #columTitleSlot=\"{ column }\">\n        <a-tooltip style=\"width:max-content\" :content=\"column.title\">\n          <a href=\"javaScript:void(0)\" style=\"color: #333;\"> {{ column.title }}</a>\n        </a-tooltip>\n      </template>\n    </a-table>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, reactive, ref, nextTick, onMounted, toRaw } from \"vue\";\nimport { useTagColumnListStore } from \"../../store/index\";\nimport { getPretrialComparisonList } from \"@/api/preRealComparsion.js\";\nimport { getCurrentDate, dataAddKey, toInteger } from \"../../utils/util\";\nlet tagColumnList = useTagColumnListStore();\nlet columConfig = {};\nlet { year, month } = getCurrentDate();\nlet currentDate = `${year}`;\nlet months = `${month}`;\nconst regex = /(\\d+)月/g;\nconst yearNow = ref(currentDate);\nconst tableInfo = reactive({\n  columns: [],\n  data: [],\n  maxHeight: \"200px\",\n  loading: false,\n  defaultExpandedKeys: [],\n});\nconst tableRef = ref(null);\nconst tabChangeColumInfo = reactive({\n  tabList: [],\n});\nonMounted(() => {\n  if (tableRef.value) {\n    let head = tableRef.value.$el;\n    nextTick(() => {\n      let innerHeight = window.innerHeight;\n      let elHeight = head.getBoundingClientRect().top;\n      tableInfo.maxHeight = innerHeight - elHeight - 30 + \"px\";\n    });\n  }\n});\n// 初始化\nconst seltColumns = () => {\n  let tagColumns = toRaw(tagColumnList.getTagColumnList) || [];\n  let currentPageColumn = tagColumns.filter(item => item.report === \"预实对比\") || [];\n  if (currentPageColumn.length) {\n    if (months[0] == 0) {\n      months = months[1];\n    }\n    currentPageColumn[0].tier.forEach((item, index) => {\n      let tabs = [];\n      let columnTabs = []; // 可点击高亮不高亮的标签\n      let noHiddenColumn = []; // 不可点击高亮不高亮的标签\n      item.tags.forEach(jtem => {\n        tabs.push(jtem.tag);\n        jtem.columns.forEach(ktem => {\n          let { col, conf, title } = ktem;\n          if (title.indexOf(\"月\") !== -1) {\n            title = title.replace(regex, `${months}月`);\n          }\n          conf = conf || {};\n          let columnItemConfig = {\n            title,\n            dataIndex: col,\n            align: conf.align,\n            cellStyle: { \"text-align\": conf.cellAlign },\n            width: conf.width,\n            ellipsis: true,\n            headerCellClass: \"noEllipsis\",\n            slotName: col,\n            isShow: conf.isShow,\n            configType: conf.configType,\n            parentCol: conf.parentCol,\n            titleSlotName : 'columTitleSlot'\n          };\n          if (conf.canHide === 1) {\n            columnTabs.push(columnItemConfig); // 可以点击高亮的 === 有children的\n          } else {\n            noHiddenColumn.push(columnItemConfig); // 不可以点击高亮的 === 固定在表格的\n          }\n          // 去重\n          let map = new Map();\n          for (let i of columnTabs) {\n            if (!map.has(i.configType)) {\n              map.set(i.configType, i);\n            }\n          }\n          tabChangeColumInfo.tabList = [...map.values()];\n        });\n      });\n      columConfig = {\n        tabs,\n        params: item.params || [],\n        columnTabs,\n        noHiddenColumn,\n      };\n    });\n  }\n};\n// 更换表头\nconst analysiisColumn = () => {\n  let { columnTabs, noHiddenColumn } = columConfig;\n  let filterHasSonShowColumn1 = columnTabs.filter(item => item.isShow === 1);\n  let columnHasSonConfig = new Map();\n  filterHasSonShowColumn1.forEach(item => {\n    if (columnHasSonConfig.has(item.parentCol)) {\n      let value = columnHasSonConfig.get(item.parentCol);\n      value.children.push(item);\n      columnHasSonConfig.set(item.parentCol, value);\n    } else {\n      columnHasSonConfig.set(item.parentCol, {\n        title: item.parentCol,\n        children: [item],\n      });\n    }\n  });\n  let number = 0;\n  columnHasSonConfig.forEach(item => {\n    number += 1;\n    if (!item.children) {\n      item.dataIndex = `colNo${number}`;\n      item.slotName = `colNo${number}`;\n    } else {\n      number = number - 1;\n      item.children.forEach(jtem => {\n        number += 1;\n        jtem.dataIndex = `colNo${number}`;\n        jtem.slotName = `colNo${number}`;\n        jtem.render = ({ record }) => {\n          return <span innerHTML={toInteger(record[jtem.dataIndex])}></span>;\n        };\n      });\n    }\n  });\n  let filterAllShowColumn = [...noHiddenColumn, ...columnHasSonConfig.values()];\n  tableInfo.columns = filterAllShowColumn;\n};\nonBeforeMount(() => {\n  seltColumns();\n  analysiisColumn();\n  getList();\n});\n// 点击标签\nconst handleHasSonTabChange = tab => {\n  switch (tab.isShow) {\n    case 0:\n      tab.isShow = 1;\n      changeShowStatus({\n        type: \"self\",\n        configType: tab.configType,\n        val: 1,\n      });\n      break;\n    case 1:\n      tab.isShow = 0;\n      changeShowStatus({\n        type: \"self\",\n        configType: tab.configType,\n        val: 0,\n      });\n      break;\n    default:\n      break;\n  }\n};\n// 更改高亮状态并更换表头\nconst changeShowStatus = obj => {\n  let { columnTabs, noHiddenColumn } = columConfig;\n  let columnsArr = [];\n  if (obj.type === \"self\") {\n    columnTabs.forEach(item => {\n      if (obj.configType === item.configType) {\n        item.isShow = obj.val;\n      }\n    });\n  }\n  let filterHasSonShowColumn = columnTabs.filter(item => item.isShow === 1);\n  let columnHasSonConfig = new Map();\n  filterHasSonShowColumn.forEach(item => {\n    if (columnHasSonConfig.has(item.parentCol)) {\n      let value = columnHasSonConfig.get(item.parentCol);\n      value.children.push(item);\n      columnHasSonConfig.set(item.parentCol, value);\n    } else {\n      columnHasSonConfig.set(item.parentCol, {\n        title: item.parentCol,\n        children: [item],\n      });\n    }\n  });\n  let number = 0;\n  columnHasSonConfig.forEach(item => {\n    number += 1;\n    if (!item.children) {\n      item.dataIndex = `colNo${number}`;\n      item.slotName = `colNo${number}`;\n    } else {\n      number = number - 1;\n      item.children.forEach(jtem => {\n        number += 1;\n        jtem.dataIndex = `colNo${number}`;\n        jtem.slotName = `colNo${number}`;\n        jtem.render = ({ record }) => {\n          return <span innerHTML={toInteger(record[jtem.dataIndex])}></span>;\n        };\n      });\n    }\n  });\n  columnsArr = [...noHiddenColumn, ...columnHasSonConfig.values()];\n\n  tableInfo.columns = columnsArr;\n  getList();\n};\n// 获取列表数据\nconst getList = () => {\n  tableInfo.data = [];\n  tableInfo.loading = true;\n  let arr = [];\n  var newColumns = JSON.parse(JSON.stringify(tableInfo.columns));\n  newColumns.forEach(item => {\n    if (item.title === \"部门名称\") {\n      arr.push(\"deptName\");\n    }\n    if (item.title === \"人数累计\") {\n      arr.push(\"colNo1\");\n    }\n    if (item.title === \"营业收入累计\") {\n      arr.push(\"colNo2\");\n    }\n    if (item.title === \"销售毛利累计\" || item.title === \"销售毛利率累计\") {\n      arr.push(\"colNo3\");\n    }\n    if (item.title === \"考核经营净利润累计\" || item.title === \"考核经营净利润率累计\") {\n      arr.push(\"colNo4\");\n    }\n    if (item.title === \"招聘费用累计\") {\n      arr.push(\"colNo5\");\n    }\n    if (item.title === \"销售费用累计\") {\n      arr.push(\"colNo6\");\n    }\n    if (item.title === \"管理费用累计\") {\n      arr.push(\"colNo7\");\n    }\n  });\n  const params = {\n    dynamicHeaderParam: Array.from(new Set(arr)),\n    tagKey: \"prerealComparison\",\n  };\n  getPretrialComparisonList(params).then(res => {\n    if (res.code == \"200\") {\n      let data = dataAddKey(res.data, \"key\", \"id\");\n      tableInfo.data = data;\n      let keys = [];\n      res.data.forEach(item => keys.push(item.id));\n      tableInfo.defaultExpandedKeys = keys;\n    }\n  }).catch(e=>{\n    Message.error(e.message || '请求数据错误')\n  }).finally(()=>{\n    tableInfo.loading = false\n  })\n};\nconst expandedChange = rowKeys => {\n  tableInfo.defaultExpandedKeys = rowKeys;\n};\n// 查询\nconst handleSearch = () => {\n  getList();\n};\n// 重置\nconst handleReset = () => {};\n</script>\n\n<style lang=\"scss\">\n.draw-enter-active,\n.draw-leave-active {\n  transition: all 0.2s;\n}\n.draw-enter-from,\n.draw-leave-to {\n  max-height: 0;\n}\n.border-r {\n  padding-right: 10px;\n  border-right: 1px solid #ebebeb;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}