{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"columnChart\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAgB;gCACzBC,oBAA4B;EAAvBC,EAAE,EAAC;AAAa;oBAArBC,UAA4B;;uBAD9BC,oBAEM,OAFNC,UAEM","names":["class","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/views/demo/columnChartDemo.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <div id=\"columnChart\"></div>\n  </div>\n</template>\n\n<script setup>\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nconst xData = ref([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Y\"]);\nconst res = ref({\n  blue: [100, 200, 300, 30, 90, 40, 320, 270, 50, 370, 278, 1000],\n  green: [10, 30, 40, 90, 78, 270, 340, 37, 98, 270, 45, 340],\n  purple: 500,\n  yellowLine: [30, 50, 90, 10, 80, 60, 70, 39, 79, 50, 20, 38],\n  orangeLine: [10, 80, 60, 70, 39, 79, 50, 20, 38, 90, 49, 90],\n});\n// 处理横坐标轴\nconst constructxAxis = data => {\n  const transformedData = data.map((month, index) => ({\n    data: Array.from({ length: data.length }, (_, i) => (i === index ? month : \"\")),\n  }));\n  return transformedData;\n};\n// 处理柱形数据\nconst constructData = data => {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const obj = {};\n    obj.data = Array(i).fill(\"\").concat(data[i]);\n    result.push(obj);\n  }\n  return result;\n};\nonMounted(() => {\n  var chartDom = document.getElementById(\"columnChart\");\n  var myChart = echarts.init(chartDom);\n  let xAxisData = constructxAxis(xData.value);\n  xAxisData.forEach(item => {\n    item.type = \"category\";\n    item.position = \"bottom\";\n  });\n  // 蓝色数据 销售毛利（累计预）\n  let blueData = constructData(res.value.blue);\n  blueData.forEach((item, index) => {\n    item.name = \"销售毛利（累计预）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  // 绿色数据 销售毛利（累计实）\n  let greenData = constructData(res.value.green);\n  greenData.forEach((item, index) => {\n    item.name = \"销售毛利（累计实）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  //年度毛利（年度目标）\n  let purpleData = {\n    name: \"年度毛利（年度目标）\",\n    type: \"bar\",\n    xAxisIndex: 12,\n    barWidth: 30,\n    itemStyle: {\n      color: \"purple\",\n    },\n    data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", res.value.purple],\n  };\n  //销售毛利率（年度预算）\n  const orangeLineData = {\n    name: \"销售毛利率（年度预算）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"orange\",\n    },\n    data: res.value.orangeLine,\n  };\n  //销售毛利率（实际累计）\n  const yellowLineData = {\n    name: \"销售毛利率（实际累计）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"yellow\",\n    },\n    data: res.value.yellowLine,\n  };\n  // 所有数据\n  let seriesData = [];\n  blueData.forEach(item => {\n    seriesData.push(item);\n  });\n  greenData.forEach(item => {\n    seriesData.push(item);\n  });\n  seriesData.push(purpleData);\n  seriesData.push(orangeLineData);\n  seriesData.push(yellowLineData);\n  var option;\n  option = {\n    // 整体图形样式\n    // grid: {\n    //   show: true,\n    //   left: \"15%\",\n    //   top: \"25%\",\n    //   right: \"15%\",\n    //   // bottom: \"5%\",\n    //   backgroundColor: \"rgba(224, 17, 17, 1)\",\n    //   borderColor: \"rgba(96, 67, 67, 1)\",\n    // },\n    legend: {\n      data: [\n        \"销售毛利（累计预）\",\n        \"销售毛利（累计实）\",\n        \"销售毛利率（年度预算）\",\n        \"销售毛利率（实际累计）\",\n        \"年度毛利（年度目标）\",\n      ],\n      x: \"center\", //可设定图例在左、右、居中\n      y: \"bottom\", //可设定图例在上、下、居中\n    },\n    // 提示\n    tooltip: {\n      trigger: \"axis\",\n      formatter(params) {\n        if (params.length > 4) {\n          let arr = params.slice(0, 4);\n          let str = `<div style=\"margin: 0 8px\">\n                  <span> ${arr[2].axisValue}</span>:\n                </div>`;\n          arr.forEach(item => {\n            str += `<div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${item.color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${item.seriesName}</span>:\n                  <span>${item.value}</span>\n                </div>`;\n          });\n          return str;\n        } else {\n          return `<div style=\"margin: 0 8px\">\n                    <span> ${params[0].axisValue}</span>:\n                  </div>\n                  <div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${params[0].color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${params[0].seriesName}</span>: <span>${params[0].value}</span>\n                  </div>`;\n        }\n      },\n    },\n    // X坐标系\n    xAxis: xAxisData,\n    // Y坐标系\n    yAxis: [\n      {\n        type: \"value\",\n        name: \"毛利\",\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n      {\n        type: \"value\",\n        name: \"毛利率\",\n        min: 0,\n        max: 100,\n        axisLabel: {\n          formatter: \"{value} %\",\n        },\n        interval: 10,\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n    ],\n    // 柱形和折线数据\n    series: seriesData,\n  };\n  option && myChart.setOption(option);\n});\n</script>\n\n<style lang=\"scss\">\n#columnChart {\n  height: 700px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}