{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { AbstractGroup } from '@antv/g-base';\nimport * as Shape from './shape';\nimport { applyAttrsToContext, drawChildren, refreshElement } from './util/draw';\nimport { each, max, min } from '@antv/util';\nimport { intersectRect } from './util/util';\nvar Group = /** @class */function (_super) {\n  __extends(Group, _super);\n  function Group() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n  Group.prototype.onCanvasChange = function (changeType) {\n    refreshElement(this, changeType);\n  };\n  Group.prototype.getShapeBase = function () {\n    return Shape;\n  };\n  Group.prototype.getGroupBase = function () {\n    return Group;\n  };\n  // 同 shape 中的方法重复了\n  Group.prototype._applyClip = function (context, clip) {\n    if (clip) {\n      context.save();\n      // 将 clip 的属性挂载到 context 上\n      applyAttrsToContext(context, clip);\n      // 绘制 clip 路径\n      clip.createPath(context);\n      context.restore();\n      // 裁剪\n      context.clip();\n      clip._afterDraw();\n    }\n  };\n  // 这个方法以前直接使用的 getCanvasBBox，由于 group 上没有缓存，所以每次重新计算，导致性能开销比较大\n  // 大概能够节省全局渲染 15-20% 的性能，如果不在这里加缓存优化后 10W 个节点无法达到 5-6 ms，大概能够 30-40ms\n  Group.prototype.cacheCanvasBBox = function () {\n    var children = this.cfg.children;\n    var xArr = [];\n    var yArr = [];\n    each(children, function (child) {\n      var bbox = child.cfg.cacheCanvasBBox;\n      // isInview 的判定是一旦图形或者分组渲染就要计算是否在视图内，\n      // 这个判定 10W 个图形下差不多能够节省 5-6 ms 的开销\n      if (bbox && child.cfg.isInView) {\n        xArr.push(bbox.minX, bbox.maxX);\n        yArr.push(bbox.minY, bbox.maxY);\n      }\n    });\n    var bbox = null;\n    if (xArr.length) {\n      var minX = min(xArr);\n      var maxX = max(xArr);\n      var minY = min(yArr);\n      var maxY = max(yArr);\n      bbox = {\n        minX: minX,\n        minY: minY,\n        x: minX,\n        y: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n      var canvas = this.cfg.canvas;\n      if (canvas) {\n        var viewRange = canvas.getViewRange();\n        // 如果这个地方判定 isInView == false 设置 bbox 为 false 的话，拾取的性能会更高\n        // 但是目前 10W 图形的拾取在 2-5ms 内，这个优化意义不大，可以后期观察再看\n        this.set('isInView', intersectRect(bbox, viewRange));\n      }\n    } else {\n      this.set('isInView', false);\n    }\n    this.set('cacheCanvasBBox', bbox);\n  };\n  Group.prototype.draw = function (context, region) {\n    var children = this.cfg.children;\n    var allowDraw = region ? this.cfg.refresh : true; // 局部刷新需要判定\n    // 这个地方需要判定，在 G6 的场景每个 group 都有 transform 的场景下性能会开销非常大\n    // 通过 refresh 的判定，可以不刷新没有发生过变化的分组，不在视窗内的分组等等\n    // 如果想进一步提升局部渲染性能，可以进一步优化 refresh 的判定，依然有潜力\n    if (children.length && allowDraw) {\n      context.save();\n      // group 上的矩阵和属性也会应用到上下文上\n      // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响\n      applyAttrsToContext(context, this);\n      this._applyClip(context, this.getClip());\n      drawChildren(context, children, region);\n      context.restore();\n      this.cacheCanvasBBox();\n    }\n    // 这里的成本比较大，如果不绘制则不再\n    // this.set('cacheCanvasBBox', this.getCanvasBBox());\n    this.cfg.refresh = null;\n    // 绘制后，消除更新标记\n    this.set('hasChanged', false);\n  };\n  // 绘制时被跳过，一般发生在分组隐藏时\n  Group.prototype.skipDraw = function () {\n    this.set('cacheCanvasBBox', null);\n    this.set('hasChanged', false);\n  };\n  return Group;\n}(AbstractGroup);\nexport default Group;","map":{"version":3,"mappings":"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","names":["AbstractGroup","Shape","applyAttrsToContext","drawChildren","refreshElement","each","max","min","intersectRect","__extends","Group","changeType","context","clip","save","createPath","restore","_afterDraw","children","cfg","xArr","yArr","child","bbox","cacheCanvasBBox","isInView","push","minX","maxX","minY","maxY","length","x","y","width","height","canvas","viewRange","getViewRange","set","region","allowDraw","refresh","_applyClip","getClip"],"sourceRoot":"","sources":["../src/group.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}