{"ast":null,"code":"import { createVNode as _createVNode2 } from \"vue\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"月份 :   \", -1);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \"展开至 :   \", -1);\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", null, \"成本类型 :   \", -1);\nconst _hoisted_8 = {\n  style: {\n    \"float\": \"right\"\n  }\n};\nimport { onBeforeMount, onMounted, reactive, ref, nextTick, watchEffect, onUnmounted } from 'vue';\nimport { exportEmpExcel, queryDeptCostDetail, queryDeptsCostData } from '@/api/empStatistics';\nimport { dataAddKey, toInteger } from '@/utils/util';\nimport { Message } from '@arco-design/web-vue';\nimport moment from 'moment';\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nexport default {\n  __name: 'empStatistics',\n  setup(__props) {\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    const monthVal = ref(new Date());\n    const monthChange = () => {\n      getDeptsCostData();\n    };\n    //禁选日期\n    const getDisabledTime = current => {\n      return current.valueOf() < moment(\"2023-01-01 00:00:00\").valueOf();\n    };\n    const currentLevel = ref('level1');\n    const expandTabs = ref('level1');\n    const handleExpandTabsChange = val => {\n      expandTabs.value = val;\n      level1TableInfo.defaultExpandedKeys = filterLevelkeys(sourceData, val);\n    };\n    const filterLevelkeys = (arr, key) => {\n      if (arr.length) {\n        let expandKeys = [];\n        switch (key) {\n          case 'all':\n            function getKeys(arr) {\n              arr.forEach(item => {\n                expandKeys.push(item.key);\n                if (item?.children?.length) {\n                  getKeys(item.children);\n                }\n              });\n            }\n            getKeys(arr);\n            break;\n          case 'level1':\n            arr.forEach(item => {\n              expandKeys.push(item.key);\n            });\n            break;\n          case 'level2':\n            arr.forEach(item => {\n              expandKeys.push(item.key);\n              if (item?.children?.length) {\n                item.children.forEach(jtem => {\n                  expandKeys.push(jtem.key);\n                });\n              }\n            });\n            break;\n          default:\n            expandKeys = [];\n            break;\n        }\n        return expandKeys;\n      }\n    };\n    const level1TableInfo = reactive({\n      columns: [{\n        title: '部门名称',\n        dataIndex: 'deptName',\n        key: 'deptName',\n        fixed: 'left',\n        width: 230,\n        slotName: 'deptName'\n      }, {\n        title: 'G+C2人数',\n        dataIndex: 'GC2Number',\n        key: 'GC2Number',\n        width: 110,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val) && val === 0) {\n            return '-';\n          }\n          return val;\n        }\n      }, {\n        title: 'G+C2人数占比',\n        dataIndex: 'GC2Rate',\n        key: 'GC2Rate',\n        width: 110,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val)) {\n            return (val * 100).toFixed(2) + '%';\n          }\n          return val;\n        }\n      }, {\n        title: 'S人数',\n        dataIndex: 'SNumber',\n        key: 'SNumber',\n        width: 90,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val) && val === 0) {\n            return '-';\n          }\n          return val;\n        }\n      }, {\n        title: 'S人数占比',\n        dataIndex: 'SRate',\n        key: 'SRate',\n        width: 110,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val)) {\n            return (val * 100).toFixed(2) + '%';\n          }\n          return val;\n        }\n      }, {\n        title: 'R人数',\n        dataIndex: 'RNumber',\n        key: 'RNumber',\n        width: 110,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val) && val === 0) {\n            return '-';\n          }\n          return val;\n        }\n      }, {\n        title: 'R人数占比',\n        dataIndex: 'RRate',\n        key: 'RRate',\n        width: 110,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = +record[column.dataIndex];\n          if (!isNaN(val)) {\n            return (val * 100).toFixed(2) + '%';\n          }\n          return val;\n        }\n      }],\n      data: [],\n      maxHeight: '600px',\n      loading: false,\n      defaultExpandedKeys: []\n    });\n    const expandedChange = keys => {\n      level1TableInfo.defaultExpandedKeys = keys;\n    };\n    const level2TableRef = ref(null);\n    let selectDept = '';\n    const jump = (val, record) => {\n      selectDept = record.deptName;\n      currentLevel.value = val;\n      if (val === 'level2') {\n        getDeptCostDetail();\n        let breadList = [{\n          type: \"button\",\n          color: \"#333\",\n          msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}`,\n          params: \"level1\"\n        }, {\n          type: \"text\",\n          color: \"#333\",\n          msg: record.deptName\n        }];\n        $bus.emit(\"updateStructure\", breadList);\n        if (level2TableInfo.maxHeight === '600px' && level2TableRef.value) {\n          nextTick(() => {\n            let head = level2TableRef.value.$el;\n            let innerHeight = window.innerHeight;\n            let elHeight = head.getBoundingClientRect().top;\n            level2TableInfo.maxHeight = innerHeight > 900 ? innerHeight + 130 + 'px' : innerHeight - elHeight - 32 + \"px\";\n          });\n        }\n      }\n    };\n    let sourceData = [];\n    const getDeptsCostData = () => {\n      let params = {\n        month: moment(monthVal.value).format('YYYYMM')\n      };\n      level1TableInfo.loading = true;\n      queryDeptsCostData(params).then(res => {\n        if (res.code === '200') {\n          dataAddKey(res.data, \"key\", \"id\");\n          let expandKeys = [];\n          res.data.forEach(item => {\n            expandKeys.push(item.key);\n          });\n          level1TableInfo.data = res.data;\n          level1TableInfo.defaultExpandedKeys = expandKeys;\n          sourceData = res.data;\n        } else {\n          Message.error(res.message || '请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '请求失败');\n      }).finally(() => {\n        level1TableInfo.loading = false;\n      });\n    };\n    onBeforeMount(() => {\n      getDeptsCostData();\n    });\n    const level1TableRef = ref(null);\n    onMounted(() => {\n      if (level1TableRef.value) {\n        let head = level1TableRef.value.$el;\n        nextTick(() => {\n          let innerHeight = window.innerHeight;\n          let elHeight = head.getBoundingClientRect().top;\n          level1TableInfo.maxHeight = innerHeight - elHeight - 32 + \"px\";\n        });\n      }\n      $bus.on(\"goBack\", val => {\n        currentLevel.value = val;\n        switch (val) {\n          case \"level1\":\n            let breadList1 = [{\n              type: \"text\",\n              color: \"#333\",\n              msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}`\n            }];\n            $bus.emit(\"updateStructure\", breadList1);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n    const costType = ref('ALL');\n    const handleCostTypeChange = val => {\n      costType.value = val;\n      getDeptCostDetail();\n    };\n    const exportLoading = ref(false);\n    const handleExport = () => {\n      exportLoading.value = true;\n      let deptName = selectDept;\n      let params = {\n        costCenterName: '',\n        deptName,\n        month: moment(monthVal.value).format('YYYYMM')\n      };\n      exportEmpExcel(params).then(res => {\n        const blob = new Blob([res]);\n        const fileReader = new FileReader();\n        fileReader.readAsText(res, 'utf-8');\n        fileReader.onerror = function () {\n          Message.error('导出文件失败');\n          return;\n        };\n        const fileName = `${moment(monthVal.value).format('YYYYMM')}_${deptName}招管销人员明细.xlsx`;\n        const link = document.createElement(\"a\");\n        link.download = fileName;\n        link.style.display = \"none\";\n        link.href = URL.createObjectURL(blob);\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n      }).catch(() => {\n        Message.error(\"导出失败\");\n      }).finally(() => {\n        exportLoading.value = false;\n      });\n    };\n    const level2TableInfo = reactive({\n      columns: [{\n        title: '部门',\n        dataIndex: 'deptName',\n        key: 'deptName',\n        fixed: 'left',\n        width: 190\n      }, {\n        title: '姓名',\n        dataIndex: 'empName',\n        key: 'empName',\n        width: 170,\n        slotName: 'empName'\n      }, {\n        title: '成本类型',\n        dataIndex: 'costCenterName',\n        key: 'costCenterName',\n        width: 100\n      }, {\n        title: '上级领导',\n        dataIndex: 'deptManager',\n        key: 'deptManager',\n        width: 110\n      }, {\n        title: '城市',\n        dataIndex: 'workPlace',\n        key: 'workPlace',\n        width: 100\n      }, {\n        title: '入职日期',\n        dataIndex: 'hireDate',\n        key: 'hireDate',\n        width: 130\n      }, {\n        title: '管理团队人数',\n        dataIndex: 'teamCount',\n        key: 'teamCount',\n        width: 120,\n        cellStyle: {\n          \"text-align\": \"right\"\n        },\n        render: ({\n          record,\n          column\n        }) => {\n          let val = record[column.dataIndex];\n          if (typeof val === 'number') {\n            return _createVNode2(\"span\", {\n              \"innerHTML\": toInteger(val, 0, false)\n            }, null);\n          }\n          return val;\n        }\n      }],\n      data: [],\n      maxHeight: '600px',\n      loading: false\n    });\n    const getDeptCostDetail = () => {\n      level2TableInfo.loading = true;\n      let params = {\n        costCenterName: costType.value === 'ALL' ? '' : costType.value,\n        deptName: selectDept,\n        month: moment(monthVal.value).format('YYYYMM')\n      };\n      queryDeptCostDetail(params).then(res => {\n        if (res.code === '200') {\n          level2TableInfo.data = res.data;\n        } else {\n          level2TableInfo.data = [];\n          Message.error(res.message || '请求失败');\n        }\n      }).catch(err => {\n        level2TableInfo.data = [];\n        Message.error(err.message || '请求失败');\n      }).finally(() => {\n        level2TableInfo.loading = false;\n      });\n    };\n    watchEffect(() => {\n      $bus.emit(\"updateStructure\", [{\n        type: \"text\",\n        color: \"#333\",\n        msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}`\n      }]);\n    });\n    onUnmounted(() => {\n      $bus.off(\"goBack\");\n    });\n    return (_ctx, _cache) => {\n      const _component_a_month_picker = _resolveComponent(\"a-month-picker\");\n      const _component_a_radio = _resolveComponent(\"a-radio\");\n      const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n      const _component_a_table = _resolveComponent(\"a-table\");\n      const _component_icon_download = _resolveComponent(\"icon-download\");\n      const _component_a_button = _resolveComponent(\"a-button\");\n      const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n      const _component_a_tag = _resolveComponent(\"a-tag\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_a_month_picker, {\n        style: {\n          \"width\": \"130px\"\n        },\n        \"model-value\": monthVal.value,\n        \"onUpdate:model-value\": _cache[0] || (_cache[0] = $event => monthVal.value = $event),\n        class: \"m-r-20\",\n        \"value-format\": \"YYYYMM\",\n        \"allow-clear\": false,\n        disabledDate: getDisabledTime,\n        onChange: monthChange\n      }, null, 8, [\"model-value\"]), _hoisted_4, _createVNode(_component_a_radio_group, {\n        type: \"button\",\n        \"model-value\": expandTabs.value,\n        \"onUpdate:model-value\": _cache[1] || (_cache[1] = $event => expandTabs.value = $event),\n        onChange: handleExpandTabsChange\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_radio, {\n          value: \"level1\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"一级部门\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"level2\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"二级部门\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"all\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"末级部门\")]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model-value\"])]), _createVNode(_component_a_table, {\n        columns: level1TableInfo.columns,\n        data: level1TableInfo.data,\n        bordered: {\n          cell: true\n        },\n        \"column-resizable\": \"\",\n        scroll: {\n          maxHeight: level1TableInfo.maxHeight\n        },\n        scrollbar: false,\n        pagination: false,\n        \"expanded-keys\": level1TableInfo.defaultExpandedKeys,\n        loading: level1TableInfo.loading,\n        ref_key: \"level1TableRef\",\n        ref: level1TableRef,\n        onExpandedChange: expandedChange\n      }, {\n        deptName: _withCtx(({\n          record\n        }) => [_createElementVNode(\"a\", {\n          href: \"javaScript:void(0)\",\n          style: {\n            \"color\": \"#165dff\"\n          },\n          onClick: $event => jump('level2', record)\n        }, _toDisplayString(record.deptName), 9, _hoisted_5)]),\n        _: 1\n      }, 8, [\"columns\", \"data\", \"scroll\", \"expanded-keys\", \"loading\"])], 512), [[_vShow, currentLevel.value === 'level1']]), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createVNode(_component_a_radio_group, {\n        type: \"button\",\n        \"model-value\": costType.value,\n        \"onUpdate:model-value\": _cache[2] || (_cache[2] = $event => costType.value = $event),\n        onChange: handleCostTypeChange\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_radio, {\n          value: \"ALL\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"ALL\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"G\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"G\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"C2\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"C2\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"S\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"S\")]),\n          _: 1\n        }), _createVNode(_component_a_radio, {\n          value: \"R\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"R\")]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model-value\"]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_a_popconfirm, {\n        content: \"你确定要导出吗?\",\n        onOk: handleExport\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_button, {\n          type: \"primary\",\n          loading: exportLoading.value,\n          style: {\n            \"border-radius\": \"4px\"\n          }\n        }, {\n          icon: _withCtx(() => [_createVNode(_component_icon_download)]),\n          default: _withCtx(() => [_createTextVNode(\"导出\")]),\n          _: 1\n        }, 8, [\"loading\"])]),\n        _: 1\n      })])]), _createVNode(_component_a_table, {\n        columns: level2TableInfo.columns,\n        data: level2TableInfo.data,\n        bordered: {\n          cell: true\n        },\n        \"column-resizable\": \"\",\n        scroll: {\n          maxHeight: level2TableInfo.maxHeight\n        },\n        scrollbar: false,\n        pagination: false,\n        loading: level2TableInfo.loading,\n        ref_key: \"level2TableRef\",\n        ref: level2TableRef,\n        onExpandedChange: expandedChange\n      }, {\n        empName: _withCtx(({\n          record\n        }) => [_createTextVNode(_toDisplayString(record.empName) + \" \", 1), record.isDeptHead ? (_openBlock(), _createBlock(_component_a_tag, {\n          key: 0,\n          color: \"#5370FF\",\n          bordered: \"\",\n          style: {\n            background: '#E6F7FF',\n            fonSize: '12px',\n            color: '#5370FF',\n            marginLeft: '10px'\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 部门负责人 \")]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }, 8, [\"columns\", \"data\", \"scroll\", \"loading\"])], 512), [[_vShow, currentLevel.value === 'level2']])]);\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["onBeforeMount","onMounted","reactive","ref","nextTick","watchEffect","onUnmounted","exportEmpExcel","queryDeptCostDetail","queryDeptsCostData","dataAddKey","toInteger","Message","moment","getCurrentInstance","$bus","appContext","config","globalProperties","monthVal","Date","monthChange","getDeptsCostData","getDisabledTime","current","valueOf","currentLevel","expandTabs","handleExpandTabsChange","val","value","level1TableInfo","defaultExpandedKeys","filterLevelkeys","sourceData","arr","key","length","expandKeys","getKeys","forEach","item","push","children","jtem","columns","title","dataIndex","fixed","width","slotName","cellStyle","render","record","column","isNaN","toFixed","data","maxHeight","loading","expandedChange","keys","level2TableRef","selectDept","jump","deptName","getDeptCostDetail","breadList","type","color","msg","format","params","emit","level2TableInfo","head","$el","innerHeight","window","elHeight","getBoundingClientRect","top","month","then","res","code","error","message","catch","err","finally","level1TableRef","on","breadList1","costType","handleCostTypeChange","exportLoading","handleExport","costCenterName","blob","Blob","fileReader","FileReader","readAsText","onerror","fileName","link","document","createElement","download","style","display","href","URL","createObjectURL","body","appendChild","click","revokeObjectURL","removeChild","off"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/staffStatistics/empStatistics.vue"],"sourcesContent":["<template>\n    <div class=\"defaultPadding\">\n        <div v-show=\"currentLevel === 'level1'\">\n            <div class=\"m-b-20\">\n                <span>月份 :  &nbsp;&nbsp;</span>\n                <a-month-picker\n                    style=\"width: 130px;\" \n                    v-model:model-value=\"monthVal\" \n                    class=\"m-r-20\" \n                    value-format=\"YYYYMM\"\n                    :allow-clear=\"false\"\n                    :disabledDate=\"getDisabledTime\"\n                    @change=\"monthChange\" \n                />\n                <span>展开至 : &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" v-model:model-value=\"expandTabs\" @change=\"handleExpandTabsChange\">\n                    <a-radio value=\"level1\">一级部门</a-radio>\n                    <a-radio value=\"level2\">二级部门</a-radio>\n                    <a-radio value=\"all\">末级部门</a-radio>\n                </a-radio-group>\n            </div>\n            <a-table\n                :columns=\"level1TableInfo.columns\"\n                :data=\"level1TableInfo.data\"\n                :bordered=\"{cell:true}\"\n                column-resizable\n                :scroll=\"{ maxHeight: level1TableInfo.maxHeight }\"\n                :scrollbar=\"false\"\n                :pagination=\"false\"\n                :expanded-keys=\"level1TableInfo.defaultExpandedKeys\"\n                :loading=\"level1TableInfo.loading\"\n                ref=\"level1TableRef\"\n                @expanded-change=\"expandedChange\"\n            >\n                <template #deptName=\"{record}\">\n                    <a href=\"javaScript:void(0)\" style=\"color: #165dff\" @click=\"jump('level2', record)\">\n                        {{ record.deptName }}\n                    </a>\n                </template>\n            </a-table>\n        </div>\n        <div v-show=\"currentLevel === 'level2'\">\n            <div class=\"m-b-20\">\n                <span>成本类型 :  &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" v-model:model-value=\"costType\" @change=\"handleCostTypeChange\">\n                    <a-radio value=\"ALL\">ALL</a-radio>\n                    <a-radio value=\"G\">G</a-radio>\n                    <a-radio value=\"C2\">C2</a-radio>\n                    <a-radio value=\"S\">S</a-radio>\n                    <a-radio value=\"R\">R</a-radio>\n                </a-radio-group>\n                <div style=\"float:right\">\n                    <a-popconfirm content=\"你确定要导出吗?\" @ok=\"handleExport\">\n                        <a-button type=\"primary\" :loading=\"exportLoading\" style=\"border-radius: 4px\">\n                        <template #icon>\n                            <icon-download />\n                        </template>\n                        <template #default>导出</template>\n                        </a-button>\n                    </a-popconfirm>\n                </div>\n            </div>\n            <a-table\n                :columns=\"level2TableInfo.columns\"\n                :data=\"level2TableInfo.data\"\n                :bordered=\"{cell:true}\"\n                column-resizable\n                :scroll=\"{ maxHeight: level2TableInfo.maxHeight }\"\n                :scrollbar=\"false\"\n                :pagination=\"false\"\n                :loading=\"level2TableInfo.loading\"\n                ref=\"level2TableRef\"\n                @expanded-change=\"expandedChange\"\n            >\n                <template #empName=\"{ record }\">\n                    {{ record.empName }}\n                    <a-tag \n                        color=\"#5370FF\" \n                        v-if=\"record.isDeptHead\" \n                        bordered\n                        :style=\"{background:'#E6F7FF',fonSize:'12px',color:'#5370FF',marginLeft:'10px'}\"\n                    >\n                        部门负责人\n                    </a-tag>\n                </template>\n            </a-table>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, reactive, ref, nextTick, watchEffect,onUnmounted } from 'vue'\nimport { exportEmpExcel, queryDeptCostDetail,queryDeptsCostData } from '@/api/empStatistics'\nimport { dataAddKey,toInteger } from '@/utils/util'\nimport { Message } from '@arco-design/web-vue'\nimport moment from 'moment'\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n\n\nconst monthVal = ref(new Date())\nconst monthChange = ()=>{\n    getDeptsCostData()\n}\n//禁选日期\nconst getDisabledTime = current => {\n  return current.valueOf() < moment(\"2023-01-01 00:00:00\").valueOf();\n};\nconst currentLevel = ref('level1')\nconst expandTabs = ref('level1')\nconst handleExpandTabsChange = val=>{\n    expandTabs.value = val\n    level1TableInfo.defaultExpandedKeys = filterLevelkeys(sourceData,val)\n}\nconst filterLevelkeys = (arr,key)=>{\n    if(arr.length){\n        let expandKeys = []\n        switch (key) {\n            case 'all':\n                function getKeys(arr){\n                    arr.forEach(item=>{\n                        expandKeys.push(item.key)\n                        if(item?.children?.length){\n                            getKeys(item.children)\n                        }\n                    })\n                }\n                getKeys(arr)\n                break;\n            case 'level1' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                })\n                break;\n            case 'level2' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                    if(item?.children?.length){\n                       item.children.forEach(jtem=>{\n                        expandKeys.push(jtem.key)\n                       })\n                    }\n                })\n                break;\n            default:\n                expandKeys = []\n                break;\n        }\n        return expandKeys\n    }\n}\nconst level1TableInfo = reactive({\n    columns : [\n        {\n            title: '部门名称',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            fixed : 'left',\n            width : 230,\n            slotName : 'deptName'\n        },\n        {\n            title: 'G+C2人数',\n            dataIndex: 'GC2Number',\n            key: 'GC2Number',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'G+C2人数占比',\n            dataIndex: 'GC2Rate',\n            key: 'GC2Rate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'S人数',\n            dataIndex: 'SNumber',\n            key: 'SNumber',\n            width : 90,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'S人数占比',\n            dataIndex: 'SRate',\n            key: 'SRate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'R人数',\n            dataIndex: 'RNumber',\n            key: 'RNumber',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'R人数占比',\n            dataIndex: 'RRate',\n            key: 'RRate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        }\n    ],\n    data : [],\n    maxHeight : '600px',\n    loading :false,\n    defaultExpandedKeys : []\n})\nconst expandedChange = keys =>{\n    level1TableInfo.defaultExpandedKeys = keys\n}\nconst level2TableRef = ref(null);\nlet selectDept = ''\nconst jump = (val,record) =>{\n    selectDept = record.deptName\n    currentLevel.value = val\n    if(val === 'level2'){\n        getDeptCostDetail()\n        let breadList = [\n            { \n                type: \"button\",\n                color: \"#333\",\n                msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}`,\n                params: \"level1\",\n            },\n            {\n                type: \"text\",\n                color: \"#333\",\n                msg: record.deptName,\n            },\n        ];\n        $bus.emit(\"updateStructure\", breadList);\n        if( level2TableInfo.maxHeight === '600px' && level2TableRef.value){\n            nextTick(() => {\n                let head = level2TableRef.value.$el;\n                let innerHeight = window.innerHeight;\n                let elHeight = head.getBoundingClientRect().top;\n                level2TableInfo.maxHeight = innerHeight>900?innerHeight+130+'px':innerHeight - elHeight - 32 + \"px\";\n            });\n        }\n    }\n}\nlet sourceData = []\nconst getDeptsCostData = ()=>{\n    let params = {\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    level1TableInfo.loading = true\n    queryDeptsCostData(params).then(res=>{\n        if(res.code === '200'){\n            dataAddKey(res.data,\"key\",\"id\")\n            let expandKeys = []\n            res.data.forEach(item=>{\n                expandKeys.push(item.key)\n            })\n            level1TableInfo.data = res.data\n            level1TableInfo.defaultExpandedKeys = expandKeys\n            sourceData = res.data\n        }else {\n            Message.error(res.message || '请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '请求失败')\n    }).finally(()=>{\n        level1TableInfo.loading = false\n    })\n}\nonBeforeMount(()=>{\n    getDeptsCostData()\n})\nconst level1TableRef = ref(null);\nonMounted(() => {\n  if (level1TableRef.value) {\n    let head = level1TableRef.value.$el;\n    nextTick(() => {\n      let innerHeight = window.innerHeight;\n      let elHeight = head.getBoundingClientRect().top;\n      level1TableInfo.maxHeight = innerHeight - elHeight - 32 + \"px\";\n    });\n  }\n    $bus.on(\"goBack\", val => {\n        currentLevel.value = val;\n        switch (val) {\n            case \"level1\":\n            let breadList1 = [\n                { type: \"text\", color: \"#333\", msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}` },\n            ];\n            $bus.emit(\"updateStructure\", breadList1);\n            break;\n            default:\n            break;\n        }\n    });\n});\n\nconst costType = ref('ALL')\nconst handleCostTypeChange = val =>{\n    costType.value = val\n    getDeptCostDetail()\n}\nconst exportLoading = ref(false)\nconst handleExport = ()=>{\n    exportLoading.value = true\n    let deptName = selectDept\n    let params = {\n        costCenterName : '',\n        deptName,\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    exportEmpExcel(params).then(res=>{\n        const blob = new Blob([res]);\n        const fileReader = new FileReader();\n            fileReader.readAsText(res, 'utf-8');\n            fileReader.onerror = function () {\n            Message.error('导出文件失败')\n            return;\n            };\n        const fileName = `${moment(monthVal.value).format('YYYYMM')}_${deptName}招管销人员明细.xlsx`;\n        const link = document.createElement(\"a\");\n        link.download = fileName;\n        link.style.display = \"none\";\n        link.href = URL.createObjectURL(blob);\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n    }).catch(() => {\n      Message.error(\"导出失败\");\n    })\n    .finally(() => {\n        exportLoading.value = false\n    });\n}\nconst level2TableInfo = reactive({\n    columns : [\n        {\n            title: '部门',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            fixed : 'left',\n            width : 190,\n        },\n        {\n            title: '姓名',\n            dataIndex: 'empName',\n            key: 'empName',\n            width : 170,\n            slotName : 'empName'\n        },\n        {\n            title: '成本类型',\n            dataIndex: 'costCenterName',\n            key: 'costCenterName',\n            width : 100,\n        },\n        {\n            title: '上级领导',\n            dataIndex: 'deptManager',\n            key: 'deptManager',\n            width : 110,\n        },\n        {\n            title: '城市',\n            dataIndex: 'workPlace',\n            key: 'workPlace',\n            width : 100,\n        },\n        {\n            title: '入职日期',\n            dataIndex: 'hireDate',\n            key: 'hireDate',\n            width : 130,\n        },\n        {\n            title: '管理团队人数',\n            dataIndex: 'teamCount',\n            key: 'teamCount',\n            width : 120,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = record[column.dataIndex]\n                if(typeof(val) === 'number'){\n                    return <span innerHTML={toInteger(val, 0, false)}></span>\n                }\n                return val\n            }    \n        }\n    ],\n    data : [],\n    maxHeight : '600px',\n    loading :false\n})\n\nconst getDeptCostDetail = ()=>{\n    level2TableInfo.loading = true\n    let params = {\n        costCenterName : costType.value === 'ALL'?'':costType.value,\n        deptName : selectDept,\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    queryDeptCostDetail(params).then(res=>{\n        if(res.code === '200'){\n            level2TableInfo.data = res.data\n        }else {\n            level2TableInfo.data = []\n            Message.error(res.message || '请求失败')\n        }\n    }).catch(err=>{\n        level2TableInfo.data = []\n        Message.error(err.message || '请求失败')\n    }).finally(()=>{\n        level2TableInfo.loading = false\n    })\n}\nwatchEffect(() => {\n  $bus.emit(\"updateStructure\", [\n    { type: \"text\", color: \"#333\", msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}` },\n  ]);\n});\nonUnmounted(() => {\n  $bus.off(\"goBack\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}