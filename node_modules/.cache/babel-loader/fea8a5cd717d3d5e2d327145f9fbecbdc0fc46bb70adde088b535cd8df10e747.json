{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_TOKEN } from '../store/mutation-types';\nimport { getCookie, clearCookie } from '@/utils/util';\nconst CancelToken = axios.CancelToken;\nconsole.log(process.env, 'process.env.VUE_APP_API_BASE_URL');\nlet source = null;\n// 创建 axios 实例\nconst request = axios.create({\n  // API 请求的默认前缀\n  baseURL: process.env.NODE_ENV == \"development\" ? '/mgmt/api' : '/api',\n  timeout: 30000 // 请求超时时间\n});\n// 异常拦截处理器\nconst errorHandler = error => {\n  if (error.response) {\n    console.log(error.response);\n  }\n  return Promise.reject(error);\n};\n\n// request interceptor\nrequest.interceptors.request.use(config => {\n  source = CancelToken.source();\n  config.cancelToken = source.token;\n  const token = getCookie(LOGIN_TOKEN);\n  // 如果 token 存在\n  // 让每个请求携带自定义 token 请根据实际情况自行修改\n  if (token) {\n    config.headers['token'] = token;\n  }\n  return config;\n}, errorHandler);\n\n// response interceptor\nrequest.interceptors.response.use(response => {\n  if (response.data.code === '301') {\n    clearCookie(LOGIN_TOKEN);\n  }\n  return Promise.resolve(response.data);\n}, errorHandler);\n\n// 手动中断请求,在全局任意地方可调用\nwindow.handleAbortRequest = () => {\n  if (source) source.cancel('手动中断请求');\n};\nexport default request;","map":{"version":3,"names":["axios","LOGIN_TOKEN","getCookie","clearCookie","CancelToken","console","log","process","env","source","request","create","baseURL","NODE_ENV","timeout","errorHandler","error","response","Promise","reject","interceptors","use","config","cancelToken","token","headers","data","code","resolve","window","handleAbortRequest","cancel"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\nimport { LOGIN_TOKEN } from '../store/mutation-types'\nimport { getCookie,clearCookie } from '@/utils/util'\n\nconst CancelToken = axios.CancelToken;\nconsole.log(process.env,'process.env.VUE_APP_API_BASE_URL');\nlet source = null\n// 创建 axios 实例\nconst request = axios.create({\n    // API 请求的默认前缀\n    baseURL: process.env.NODE_ENV\n    ==\"development\"?'/mgmt/api':'/api',\n    timeout: 30000, // 请求超时时间\n})\n// 异常拦截处理器\nconst errorHandler = (error) => {\n    if (error.response) {\n        console.log(error.response);\n    }\n    return Promise.reject(error)\n}\n\n// request interceptor\nrequest.interceptors.request.use(config => {\n    source = CancelToken.source()\n    config.cancelToken = source.token\n    const token = getCookie(LOGIN_TOKEN)\n    // 如果 token 存在\n    // 让每个请求携带自定义 token 请根据实际情况自行修改\n    if (token) {\n        config.headers['token'] = token\n    }\n    return config\n}, errorHandler)\n\n// response interceptor\nrequest.interceptors.response.use((response) => {\n    if (response.data.code === '301') {\n        clearCookie(LOGIN_TOKEN)\n    }\n    return Promise.resolve(response.data)\n}, errorHandler)\n\n// 手动中断请求,在全局任意地方可调用\nwindow.handleAbortRequest =()=>{\n    if(source)source.cancel('手动中断请求')\n  }\n\nexport default request"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,EAACC,WAAW,QAAQ,cAAc;AAEpD,MAAMC,WAAW,GAAGJ,KAAK,CAACI,WAAW;AACrCC,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,EAAC,kCAAkC,CAAC;AAC3D,IAAIC,MAAM,GAAG,IAAI;AACjB;AACA,MAAMC,OAAO,GAAGV,KAAK,CAACW,MAAM,CAAC;EACzB;EACAC,OAAO,EAAEL,OAAO,CAACC,GAAG,CAACK,QAAQ,IAC3B,aAAa,GAAC,WAAW,GAAC,MAAM;EAClCC,OAAO,EAAE,KAAK,CAAE;AACpB,CAAC,CAAC;AACF;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAChBZ,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,QAAQ,CAAC;EAC/B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CAAC;;AAED;AACAN,OAAO,CAACU,YAAY,CAACV,OAAO,CAACW,GAAG,CAACC,MAAM,IAAI;EACvCb,MAAM,GAAGL,WAAW,CAACK,MAAM,EAAE;EAC7Ba,MAAM,CAACC,WAAW,GAAGd,MAAM,CAACe,KAAK;EACjC,MAAMA,KAAK,GAAGtB,SAAS,CAACD,WAAW,CAAC;EACpC;EACA;EACA,IAAIuB,KAAK,EAAE;IACPF,MAAM,CAACG,OAAO,CAAC,OAAO,CAAC,GAAGD,KAAK;EACnC;EACA,OAAOF,MAAM;AACjB,CAAC,EAAEP,YAAY,CAAC;;AAEhB;AACAL,OAAO,CAACU,YAAY,CAACH,QAAQ,CAACI,GAAG,CAAEJ,QAAQ,IAAK;EAC5C,IAAIA,QAAQ,CAACS,IAAI,CAACC,IAAI,KAAK,KAAK,EAAE;IAC9BxB,WAAW,CAACF,WAAW,CAAC;EAC5B;EACA,OAAOiB,OAAO,CAACU,OAAO,CAACX,QAAQ,CAACS,IAAI,CAAC;AACzC,CAAC,EAAEX,YAAY,CAAC;;AAEhB;AACAc,MAAM,CAACC,kBAAkB,GAAE,MAAI;EAC3B,IAAGrB,MAAM,EAACA,MAAM,CAACsB,MAAM,CAAC,QAAQ,CAAC;AACnC,CAAC;AAEH,eAAerB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}