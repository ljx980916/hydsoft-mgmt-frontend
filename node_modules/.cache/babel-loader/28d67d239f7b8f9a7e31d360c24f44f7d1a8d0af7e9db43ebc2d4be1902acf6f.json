{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n  // The default markup for links.\n  markup: ['<path class=\"connection\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"marker-source\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"marker-target\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"connection-wrap\" d=\"M 0 0 0 0\"/>', '<g class=\"labels\"/>', '<g class=\"marker-vertices\"/>', '<g class=\"marker-arrowheads\"/>', '<g class=\"link-tools\"/>'].join(''),\n  toolMarkup: ['<g class=\"link-tool\">', '<g class=\"tool-remove\" event=\"remove\">', '<circle r=\"11\" />', '<path transform=\"scale(.8) translate(-16, -16)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\" />', '<title>Remove link.</title>', '</g>', '<g class=\"tool-options\" event=\"link:options\">', '<circle r=\"11\" transform=\"translate(25)\"/>', '<path fill=\"white\" transform=\"scale(.55) translate(29, -16)\" d=\"M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z\"/>', '<title>Link options.</title>', '</g>', '</g>'].join(''),\n  doubleToolMarkup: undefined,\n  // The default markup for showing/removing vertices. These elements are the children of the .marker-vertices element (see `this.markup`).\n  // Only .marker-vertex and .marker-vertex-remove element have special meaning. The former is used for\n  // dragging vertices (changing their position). The latter is used for removing vertices.\n  vertexMarkup: ['<g class=\"marker-vertex-group\" transform=\"translate(<%= x %>, <%= y %>)\">', '<circle class=\"marker-vertex\" idx=\"<%= idx %>\" r=\"10\" />', '<path class=\"marker-vertex-remove-area\" idx=\"<%= idx %>\" d=\"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\" transform=\"translate(5, -33)\"/>', '<path class=\"marker-vertex-remove\" idx=\"<%= idx %>\" transform=\"scale(.8) translate(9.5, -37)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\">', '<title>Remove vertex.</title>', '</path>', '</g>'].join(''),\n  arrowheadMarkup: ['<g class=\"marker-arrowhead-group marker-arrowhead-group-<%= end %>\">', '<path class=\"marker-arrowhead\" end=\"<%= end %>\" d=\"M 26 0 L 0 13 L 26 26 z\" />', '</g>'].join(''),\n  // may be overwritten by user to change default label (its markup, size, attrs, position)\n  defaultLabel: undefined,\n  // deprecated\n  // may be overwritten by user to change default label markup\n  // lower priority than defaultLabel.markup\n  labelMarkup: undefined,\n  // private\n  _builtins: {\n    defaultLabel: {\n      // builtin default markup:\n      // used if neither defaultLabel.markup\n      // nor label.markup is set\n      markup: [{\n        tagName: 'rect',\n        selector: 'rect' // faster than tagName CSS selector\n      }, {\n        tagName: 'text',\n        selector: 'text' // faster than tagName CSS selector\n      }],\n\n      // builtin default attributes:\n      // applied only if builtin default markup is used\n      attrs: {\n        text: {\n          fill: '#000000',\n          fontSize: 14,\n          textAnchor: 'middle',\n          yAlignment: 'middle',\n          pointerEvents: 'none'\n        },\n        rect: {\n          ref: 'text',\n          fill: '#ffffff',\n          rx: 3,\n          ry: 3,\n          refWidth: 1,\n          refHeight: 1,\n          refX: 0,\n          refY: 0\n        }\n      },\n      // builtin default position:\n      // used if neither defaultLabel.position\n      // nor label.position is set\n      position: {\n        distance: 0.5\n      }\n    }\n  },\n  defaults: {\n    type: 'link',\n    source: {},\n    target: {}\n  },\n  isLink: function () {\n    return true;\n  },\n  disconnect: function (opt) {\n    return this.set({\n      source: {\n        x: 0,\n        y: 0\n      },\n      target: {\n        x: 0,\n        y: 0\n      }\n    }, opt);\n  },\n  source: function (source, args, opt) {\n    // getter\n    if (source === undefined) {\n      return clone(this.get('source'));\n    }\n\n    // setter\n    var setSource;\n    var setOpt;\n\n    // `source` is a cell\n    // take only its `id` and combine with `args`\n    var isCellProvided = source instanceof Cell;\n    if (isCellProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.id = source.id;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    }\n\n    // `source` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n    var isPointProvided = !isPlainObject(source);\n    if (isPointProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.x = source.x;\n      setSource.y = source.y;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    }\n\n    // `source` is an object\n    // no checking\n    // two arguments\n    setSource = source;\n    setOpt = args;\n    return this.set('source', setSource, setOpt);\n  },\n  target: function (target, args, opt) {\n    // getter\n    if (target === undefined) {\n      return clone(this.get('target'));\n    }\n\n    // setter\n    var setTarget;\n    var setOpt;\n\n    // `target` is a cell\n    // take only its `id` argument and combine with `args`\n    var isCellProvided = target instanceof Cell;\n    if (isCellProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.id = target.id;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    }\n\n    // `target` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n    var isPointProvided = !isPlainObject(target);\n    if (isPointProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.x = target.x;\n      setTarget.y = target.y;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    }\n\n    // `target` is an object\n    // no checking\n    // two arguments\n    setTarget = target;\n    setOpt = args;\n    return this.set('target', setTarget, setOpt);\n  },\n  router: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var router = this.get('router');\n      if (!router) {\n        if (this.get('manhattan')) return {\n          name: 'orthogonal'\n        }; // backwards compatibility\n        return null;\n      }\n      if (typeof router === 'object') return clone(router);\n      return router; // e.g. a function\n    }\n\n    // setter\n    var isRouterProvided = typeof name === 'object' || typeof name === 'function';\n    var localRouter = isRouterProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isRouterProvided ? args : opt;\n    return this.set('router', localRouter, localOpt);\n  },\n  connector: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var connector = this.get('connector');\n      if (!connector) {\n        if (this.get('smooth')) return {\n          name: 'smooth'\n        }; // backwards compatibility\n        return null;\n      }\n      if (typeof connector === 'object') return clone(connector);\n      return connector; // e.g. a function\n    }\n\n    // setter\n    var isConnectorProvided = typeof name === 'object' || typeof name === 'function';\n    var localConnector = isConnectorProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isConnectorProvided ? args : opt;\n    return this.set('connector', localConnector, localOpt);\n  },\n  // Labels API\n\n  // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n  label: function (idx, label, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = labels.length + idx;\n\n    // getter\n    if (arguments.length <= 1) return this.prop(['labels', idx]);\n    // setter\n    return this.prop(['labels', idx], label, opt);\n  },\n  labels: function (labels, opt) {\n    // getter\n    if (arguments.length === 0) {\n      labels = this.get('labels');\n      if (!Array.isArray(labels)) return [];\n      return labels.slice();\n    }\n    // setter\n    if (!Array.isArray(labels)) labels = [];\n    return this.set('labels', labels, opt);\n  },\n  hasLabels: function () {\n    const {\n      labels\n    } = this.attributes;\n    return Array.isArray(labels) && labels.length > 0;\n  },\n  insertLabel: function (idx, label, opt) {\n    if (!label) throw new Error('dia.Link: no label provided');\n    var labels = this.labels();\n    var n = labels.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n    labels.splice(idx, 0, label);\n    return this.labels(labels, opt);\n  },\n  // convenience function\n  // add label to end of labels array\n  appendLabel: function (label, opt) {\n    return this.insertLabel(-1, label, opt);\n  },\n  removeLabel: function (idx, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    labels.splice(idx, 1);\n    return this.labels(labels, opt);\n  },\n  // Vertices API\n\n  vertex: function (idx, vertex, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = vertices.length + idx;\n\n    // getter\n    if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n    // setter\n    var setVertex = this._normalizeVertex(vertex);\n    return this.prop(['vertices', idx], setVertex, opt);\n  },\n  vertices: function (vertices, opt) {\n    // getter\n    if (arguments.length === 0) {\n      vertices = this.get('vertices');\n      if (!Array.isArray(vertices)) return [];\n      return vertices.slice();\n    }\n\n    // setter\n    if (!Array.isArray(vertices)) vertices = [];\n    var setVertices = [];\n    for (var i = 0; i < vertices.length; i++) {\n      var vertex = vertices[i];\n      var setVertex = this._normalizeVertex(vertex);\n      setVertices.push(setVertex);\n    }\n    return this.set('vertices', setVertices, opt);\n  },\n  insertVertex: function (idx, vertex, opt) {\n    if (!vertex) throw new Error('dia.Link: no vertex provided');\n    var vertices = this.vertices();\n    var n = vertices.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n    var setVertex = this._normalizeVertex(vertex);\n    vertices.splice(idx, 0, setVertex);\n    return this.vertices(vertices, opt);\n  },\n  removeVertex: function (idx, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    vertices.splice(idx, 1);\n    return this.vertices(vertices, opt);\n  },\n  _normalizeVertex: function (vertex) {\n    // is vertex a point-like object?\n    // for example, a g.Point\n    var isPointProvided = !isPlainObject(vertex);\n    if (isPointProvided) return {\n      x: vertex.x,\n      y: vertex.y\n    };\n\n    // else: return vertex unchanged\n    return vertex;\n  },\n  // Transformations\n\n  translate: function (tx, ty, opt) {\n    // enrich the option object\n    opt = opt || {};\n    opt.translateBy = opt.translateBy || this.id;\n    opt.tx = tx;\n    opt.ty = ty;\n    return this.applyToPoints(function (p) {\n      return {\n        x: (p.x || 0) + tx,\n        y: (p.y || 0) + ty\n      };\n    }, opt);\n  },\n  scale: function (sx, sy, origin, opt) {\n    return this.applyToPoints(function (p) {\n      return Point(p).scale(sx, sy, origin).toJSON();\n    }, opt);\n  },\n  applyToPoints: function (fn, opt) {\n    if (!isFunction(fn)) {\n      throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n    }\n    var attrs = {};\n    var {\n      source,\n      target\n    } = this.attributes;\n    if (!source.id) {\n      attrs.source = fn(source);\n    }\n    if (!target.id) {\n      attrs.target = fn(target);\n    }\n    var vertices = this.vertices();\n    if (vertices.length > 0) {\n      attrs.vertices = vertices.map(fn);\n    }\n    return this.set(attrs, opt);\n  },\n  getSourcePoint: function () {\n    var sourceCell = this.getSourceCell();\n    if (!sourceCell) return new Point(this.source());\n    return sourceCell.getPointFromConnectedLink(this, 'source');\n  },\n  getTargetPoint: function () {\n    var targetCell = this.getTargetCell();\n    if (!targetCell) return new Point(this.target());\n    return targetCell.getPointFromConnectedLink(this, 'target');\n  },\n  getPointFromConnectedLink: function /* link, endType */\n  () {\n    return this.getPolyline().pointAt(0.5);\n  },\n  getPolyline: function () {\n    const points = [this.getSourcePoint(), ...this.vertices().map(Point), this.getTargetPoint()];\n    return new Polyline(points);\n  },\n  getBBox: function () {\n    return this.getPolyline().bbox();\n  },\n  reparent: function (opt) {\n    var newParent;\n    if (this.graph) {\n      var source = this.getSourceElement();\n      var target = this.getTargetElement();\n      var prevParent = this.getParentCell();\n      if (source && target) {\n        if (source === target || source.isEmbeddedIn(target)) {\n          newParent = target;\n        } else if (target.isEmbeddedIn(source)) {\n          newParent = source;\n        } else {\n          newParent = this.graph.getCommonAncestor(source, target);\n        }\n      }\n      if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n        // Unembed the link if source and target has no common ancestor\n        // or common ancestor changed\n        prevParent.unembed(this, opt);\n      }\n      if (newParent) {\n        newParent.embed(this, opt);\n      }\n    }\n    return newParent;\n  },\n  hasLoop: function (opt) {\n    opt = opt || {};\n    var {\n      source,\n      target\n    } = this.attributes;\n    var sourceId = source.id;\n    var targetId = target.id;\n    if (!sourceId || !targetId) {\n      // Link \"pinned\" to the paper does not have a loop.\n      return false;\n    }\n    var loop = sourceId === targetId;\n\n    // Note that there in the deep mode a link can have a loop,\n    // even if it connects only a parent and its embed.\n    // A loop \"target equals source\" is valid in both shallow and deep mode.\n    if (!loop && opt.deep && this.graph) {\n      var sourceElement = this.getSourceCell();\n      var targetElement = this.getTargetCell();\n      loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n    }\n    return loop;\n  },\n  // unlike source(), this method returns null if source is a point\n  getSourceCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var source = attributes.source;\n    return source && source.id && graph && graph.getCell(source.id) || null;\n  },\n  getSourceElement: function () {\n    var cell = this;\n    var visited = {};\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getSourceCell();\n    } while (cell && cell.isLink());\n    return cell;\n  },\n  // unlike target(), this method returns null if target is a point\n  getTargetCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var target = attributes.target;\n    return target && target.id && graph && graph.getCell(target.id) || null;\n  },\n  getTargetElement: function () {\n    var cell = this;\n    var visited = {};\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getTargetCell();\n    } while (cell && cell.isLink());\n    return cell;\n  },\n  // Returns the common ancestor for the source element,\n  // target element and the link itself.\n  getRelationshipAncestor: function () {\n    var connectionAncestor;\n    if (this.graph) {\n      var cells = [this, this.getSourceElement(),\n      // null if source is a point\n      this.getTargetElement() // null if target is a point\n      ].filter(function (item) {\n        return !!item;\n      });\n      connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n    }\n    return connectionAncestor || null;\n  },\n  // Is source, target and the link itself embedded in a given cell?\n  isRelationshipEmbeddedIn: function (cell) {\n    var cellId = isString(cell) || isNumber(cell) ? cell : cell.id;\n    var ancestor = this.getRelationshipAncestor();\n    return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n  },\n  // Get resolved default label.\n  _getDefaultLabel: function () {\n    var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n    var label = {};\n    label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n    label.position = defaultLabel.position;\n    label.attrs = defaultLabel.attrs;\n    label.size = defaultLabel.size;\n    return label;\n  }\n}, {\n  endsEqual: function (a, b) {\n    var portsEqual = a.port === b.port || !a.port && !b.port;\n    return a.id === b.id && portsEqual;\n  }\n});","map":{"version":3,"names":["Cell","clone","isPlainObject","isFunction","isString","isNumber","Point","Polyline","Link","extend","markup","join","toolMarkup","doubleToolMarkup","undefined","vertexMarkup","arrowheadMarkup","defaultLabel","labelMarkup","_builtins","tagName","selector","attrs","text","fill","fontSize","textAnchor","yAlignment","pointerEvents","rect","ref","rx","ry","refWidth","refHeight","refX","refY","position","distance","defaults","type","source","target","isLink","disconnect","opt","set","x","y","args","get","setSource","setOpt","isCellProvided","id","isPointProvided","setTarget","router","name","isRouterProvided","localRouter","localOpt","connector","isConnectorProvided","localConnector","label","idx","labels","isFinite","length","arguments","prop","Array","isArray","slice","hasLabels","attributes","insertLabel","Error","n","splice","appendLabel","removeLabel","vertex","vertices","setVertex","_normalizeVertex","setVertices","i","push","insertVertex","removeVertex","translate","tx","ty","translateBy","applyToPoints","p","scale","sx","sy","origin","toJSON","fn","TypeError","map","getSourcePoint","sourceCell","getSourceCell","getPointFromConnectedLink","getTargetPoint","targetCell","getTargetCell","getPolyline","pointAt","points","getBBox","bbox","reparent","newParent","graph","getSourceElement","getTargetElement","prevParent","getParentCell","isEmbeddedIn","getCommonAncestor","unembed","embed","hasLoop","sourceId","targetId","loop","deep","sourceElement","targetElement","getCell","cell","visited","getRelationshipAncestor","connectionAncestor","cells","filter","item","apply","isRelationshipEmbeddedIn","cellId","ancestor","_getDefaultLabel","size","endsEqual","a","b","portsEqual","port"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/node_modules/jointjs/src/dia/Link.mjs"],"sourcesContent":["import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n\n    // The default markup for links.\n    markup: [\n        '<path class=\"connection\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"marker-source\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"marker-target\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"connection-wrap\" d=\"M 0 0 0 0\"/>',\n        '<g class=\"labels\"/>',\n        '<g class=\"marker-vertices\"/>',\n        '<g class=\"marker-arrowheads\"/>',\n        '<g class=\"link-tools\"/>'\n    ].join(''),\n\n    toolMarkup: [\n        '<g class=\"link-tool\">',\n        '<g class=\"tool-remove\" event=\"remove\">',\n        '<circle r=\"11\" />',\n        '<path transform=\"scale(.8) translate(-16, -16)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\" />',\n        '<title>Remove link.</title>',\n        '</g>',\n        '<g class=\"tool-options\" event=\"link:options\">',\n        '<circle r=\"11\" transform=\"translate(25)\"/>',\n        '<path fill=\"white\" transform=\"scale(.55) translate(29, -16)\" d=\"M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z\"/>',\n        '<title>Link options.</title>',\n        '</g>',\n        '</g>'\n    ].join(''),\n\n    doubleToolMarkup: undefined,\n\n    // The default markup for showing/removing vertices. These elements are the children of the .marker-vertices element (see `this.markup`).\n    // Only .marker-vertex and .marker-vertex-remove element have special meaning. The former is used for\n    // dragging vertices (changing their position). The latter is used for removing vertices.\n    vertexMarkup: [\n        '<g class=\"marker-vertex-group\" transform=\"translate(<%= x %>, <%= y %>)\">',\n        '<circle class=\"marker-vertex\" idx=\"<%= idx %>\" r=\"10\" />',\n        '<path class=\"marker-vertex-remove-area\" idx=\"<%= idx %>\" d=\"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\" transform=\"translate(5, -33)\"/>',\n        '<path class=\"marker-vertex-remove\" idx=\"<%= idx %>\" transform=\"scale(.8) translate(9.5, -37)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\">',\n        '<title>Remove vertex.</title>',\n        '</path>',\n        '</g>'\n    ].join(''),\n\n    arrowheadMarkup: [\n        '<g class=\"marker-arrowhead-group marker-arrowhead-group-<%= end %>\">',\n        '<path class=\"marker-arrowhead\" end=\"<%= end %>\" d=\"M 26 0 L 0 13 L 26 26 z\" />',\n        '</g>'\n    ].join(''),\n\n    // may be overwritten by user to change default label (its markup, size, attrs, position)\n    defaultLabel: undefined,\n\n    // deprecated\n    // may be overwritten by user to change default label markup\n    // lower priority than defaultLabel.markup\n    labelMarkup: undefined,\n\n    // private\n    _builtins: {\n        defaultLabel: {\n            // builtin default markup:\n            // used if neither defaultLabel.markup\n            // nor label.markup is set\n            markup: [\n                {\n                    tagName: 'rect',\n                    selector: 'rect' // faster than tagName CSS selector\n                }, {\n                    tagName: 'text',\n                    selector: 'text' // faster than tagName CSS selector\n                }\n            ],\n            // builtin default attributes:\n            // applied only if builtin default markup is used\n            attrs: {\n                text: {\n                    fill: '#000000',\n                    fontSize: 14,\n                    textAnchor: 'middle',\n                    yAlignment: 'middle',\n                    pointerEvents: 'none'\n                },\n                rect: {\n                    ref: 'text',\n                    fill: '#ffffff',\n                    rx: 3,\n                    ry: 3,\n                    refWidth: 1,\n                    refHeight: 1,\n                    refX: 0,\n                    refY: 0\n                }\n            },\n            // builtin default position:\n            // used if neither defaultLabel.position\n            // nor label.position is set\n            position: {\n                distance: 0.5\n            }\n        }\n    },\n\n    defaults: {\n        type: 'link',\n        source: {},\n        target: {}\n    },\n\n    isLink: function() {\n\n        return true;\n    },\n\n    disconnect: function(opt) {\n\n        return this.set({\n            source: { x: 0, y: 0 },\n            target: { x: 0, y: 0 }\n        }, opt);\n    },\n\n    source: function(source, args, opt) {\n\n        // getter\n        if (source === undefined) {\n            return clone(this.get('source'));\n        }\n\n        // setter\n        var setSource;\n        var setOpt;\n\n        // `source` is a cell\n        // take only its `id` and combine with `args`\n        var isCellProvided = source instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.id = source.id;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(source);\n        if (isPointProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.x = source.x;\n            setSource.y = source.y;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is an object\n        // no checking\n        // two arguments\n        setSource = source;\n        setOpt = args;\n        return this.set('source', setSource, setOpt);\n    },\n\n    target: function(target, args, opt) {\n\n        // getter\n        if (target === undefined) {\n            return clone(this.get('target'));\n        }\n\n        // setter\n        var setTarget;\n        var setOpt;\n\n        // `target` is a cell\n        // take only its `id` argument and combine with `args`\n        var isCellProvided = target instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.id = target.id;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(target);\n        if (isPointProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.x = target.x;\n            setTarget.y = target.y;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is an object\n        // no checking\n        // two arguments\n        setTarget = target;\n        setOpt = args;\n        return this.set('target', setTarget, setOpt);\n    },\n\n    router: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var router = this.get('router');\n            if (!router) {\n                if (this.get('manhattan')) return { name: 'orthogonal' }; // backwards compatibility\n                return null;\n            }\n            if (typeof router === 'object') return clone(router);\n            return router; // e.g. a function\n        }\n\n        // setter\n        var isRouterProvided = ((typeof name === 'object') || (typeof name === 'function'));\n        var localRouter = isRouterProvided ? name : { name: name, args: args };\n        var localOpt = isRouterProvided ? args : opt;\n\n        return this.set('router', localRouter, localOpt);\n    },\n\n    connector: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var connector = this.get('connector');\n            if (!connector) {\n                if (this.get('smooth')) return { name: 'smooth' }; // backwards compatibility\n                return null;\n            }\n            if (typeof connector === 'object') return clone(connector);\n            return connector; // e.g. a function\n        }\n\n        // setter\n        var isConnectorProvided = ((typeof name === 'object' || typeof name === 'function'));\n        var localConnector = isConnectorProvided ? name : { name: name, args: args };\n        var localOpt = isConnectorProvided ? args : opt;\n\n        return this.set('connector', localConnector, localOpt);\n    },\n\n    // Labels API\n\n    // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n    label: function(idx, label, opt) {\n\n        var labels = this.labels();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = labels.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['labels', idx]);\n        // setter\n        return this.prop(['labels', idx], label, opt);\n    },\n\n    labels: function(labels, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            labels = this.get('labels');\n            if (!Array.isArray(labels)) return [];\n            return labels.slice();\n        }\n        // setter\n        if (!Array.isArray(labels)) labels = [];\n        return this.set('labels', labels, opt);\n    },\n\n    hasLabels: function() {\n        const { labels } = this.attributes;\n        return Array.isArray(labels) && labels.length > 0;\n    },\n\n    insertLabel: function(idx, label, opt) {\n\n        if (!label) throw new Error('dia.Link: no label provided');\n\n        var labels = this.labels();\n        var n = labels.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        labels.splice(idx, 0, label);\n        return this.labels(labels, opt);\n    },\n\n    // convenience function\n    // add label to end of labels array\n    appendLabel: function(label, opt) {\n\n        return this.insertLabel(-1, label, opt);\n    },\n\n    removeLabel: function(idx, opt) {\n\n        var labels = this.labels();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        labels.splice(idx, 1);\n        return this.labels(labels, opt);\n    },\n\n    // Vertices API\n\n    vertex: function(idx, vertex, opt) {\n\n        var vertices = this.vertices();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = vertices.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n        // setter\n        var setVertex = this._normalizeVertex(vertex);\n        return this.prop(['vertices', idx], setVertex, opt);\n    },\n\n    vertices: function(vertices, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            vertices = this.get('vertices');\n            if (!Array.isArray(vertices)) return [];\n            return vertices.slice();\n        }\n\n        // setter\n        if (!Array.isArray(vertices)) vertices = [];\n        var setVertices = [];\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            var setVertex = this._normalizeVertex(vertex);\n            setVertices.push(setVertex);\n        }\n        return this.set('vertices', setVertices, opt);\n    },\n\n    insertVertex: function(idx, vertex, opt) {\n\n        if (!vertex) throw new Error('dia.Link: no vertex provided');\n\n        var vertices = this.vertices();\n        var n = vertices.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        var setVertex = this._normalizeVertex(vertex);\n        vertices.splice(idx, 0, setVertex);\n        return this.vertices(vertices, opt);\n    },\n\n    removeVertex: function(idx, opt) {\n\n        var vertices = this.vertices();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        vertices.splice(idx, 1);\n        return this.vertices(vertices, opt);\n    },\n\n    _normalizeVertex: function(vertex) {\n\n        // is vertex a point-like object?\n        // for example, a g.Point\n        var isPointProvided = !isPlainObject(vertex);\n        if (isPointProvided) return { x: vertex.x, y: vertex.y };\n\n        // else: return vertex unchanged\n        return vertex;\n    },\n\n    // Transformations\n\n    translate: function(tx, ty, opt) {\n\n        // enrich the option object\n        opt = opt || {};\n        opt.translateBy = opt.translateBy || this.id;\n        opt.tx = tx;\n        opt.ty = ty;\n\n        return this.applyToPoints(function(p) {\n            return { x: (p.x || 0) + tx, y: (p.y || 0) + ty };\n        }, opt);\n    },\n\n    scale: function(sx, sy, origin, opt) {\n\n        return this.applyToPoints(function(p) {\n            return Point(p).scale(sx, sy, origin).toJSON();\n        }, opt);\n    },\n\n    applyToPoints: function(fn, opt) {\n\n        if (!isFunction(fn)) {\n            throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n        }\n\n        var attrs = {};\n\n        var { source, target } = this.attributes;\n        if (!source.id) {\n            attrs.source = fn(source);\n        }\n        if (!target.id) {\n            attrs.target = fn(target);\n        }\n\n        var vertices = this.vertices();\n        if (vertices.length > 0) {\n            attrs.vertices = vertices.map(fn);\n        }\n\n        return this.set(attrs, opt);\n    },\n\n    getSourcePoint: function() {\n        var sourceCell = this.getSourceCell();\n        if (!sourceCell) return new Point(this.source());\n        return sourceCell.getPointFromConnectedLink(this, 'source');\n    },\n\n    getTargetPoint: function() {\n        var targetCell = this.getTargetCell();\n        if (!targetCell) return new Point(this.target());\n        return targetCell.getPointFromConnectedLink(this, 'target');\n    },\n\n    getPointFromConnectedLink: function(/* link, endType */) {\n        return this.getPolyline().pointAt(0.5);\n    },\n\n    getPolyline: function() {\n        const points = [\n            this.getSourcePoint(),\n            ...this.vertices().map(Point),\n            this.getTargetPoint()\n        ];\n        return new Polyline(points);\n    },\n\n    getBBox: function() {\n        return this.getPolyline().bbox();\n    },\n\n    reparent: function(opt) {\n\n        var newParent;\n\n        if (this.graph) {\n\n            var source = this.getSourceElement();\n            var target = this.getTargetElement();\n            var prevParent = this.getParentCell();\n\n            if (source && target) {\n                if (source === target || source.isEmbeddedIn(target)) {\n                    newParent = target;\n                } else if (target.isEmbeddedIn(source)) {\n                    newParent = source;\n                } else {\n                    newParent = this.graph.getCommonAncestor(source, target);\n                }\n            }\n\n            if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n                // Unembed the link if source and target has no common ancestor\n                // or common ancestor changed\n                prevParent.unembed(this, opt);\n            }\n\n            if (newParent) {\n                newParent.embed(this, opt);\n            }\n        }\n\n        return newParent;\n    },\n\n    hasLoop: function(opt) {\n\n        opt = opt || {};\n\n        var { source, target } = this.attributes;\n        var sourceId = source.id;\n        var targetId = target.id;\n\n        if (!sourceId || !targetId) {\n            // Link \"pinned\" to the paper does not have a loop.\n            return false;\n        }\n\n        var loop = sourceId === targetId;\n\n        // Note that there in the deep mode a link can have a loop,\n        // even if it connects only a parent and its embed.\n        // A loop \"target equals source\" is valid in both shallow and deep mode.\n        if (!loop && opt.deep && this.graph) {\n\n            var sourceElement = this.getSourceCell();\n            var targetElement = this.getTargetCell();\n\n            loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n        }\n\n        return loop;\n    },\n\n    // unlike source(), this method returns null if source is a point\n    getSourceCell: function() {\n\n        const { graph, attributes } = this;\n        var source = attributes.source;\n        return (source && source.id && graph && graph.getCell(source.id)) || null;\n    },\n\n    getSourceElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getSourceCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // unlike target(), this method returns null if target is a point\n    getTargetCell: function() {\n\n        const { graph, attributes } = this;\n        var target = attributes.target;\n        return (target && target.id && graph && graph.getCell(target.id)) || null;\n    },\n\n    getTargetElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getTargetCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // Returns the common ancestor for the source element,\n    // target element and the link itself.\n    getRelationshipAncestor: function() {\n\n        var connectionAncestor;\n\n        if (this.graph) {\n\n            var cells = [\n                this,\n                this.getSourceElement(), // null if source is a point\n                this.getTargetElement() // null if target is a point\n            ].filter(function(item) {\n                return !!item;\n            });\n\n            connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n        }\n\n        return connectionAncestor || null;\n    },\n\n    // Is source, target and the link itself embedded in a given cell?\n    isRelationshipEmbeddedIn: function(cell) {\n\n        var cellId = (isString(cell) || isNumber(cell)) ? cell : cell.id;\n        var ancestor = this.getRelationshipAncestor();\n\n        return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n    },\n\n    // Get resolved default label.\n    _getDefaultLabel: function() {\n\n        var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n\n        var label = {};\n        label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n        label.position = defaultLabel.position;\n        label.attrs = defaultLabel.attrs;\n        label.size = defaultLabel.size;\n\n        return label;\n    }\n}, {\n\n    endsEqual: function(a, b) {\n\n        var portsEqual = a.port === b.port || !a.port && !b.port;\n        return a.id === b.id && portsEqual;\n    }\n});\n\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,KAAK,EAAEC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACxF,SAASC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;;AAEhD;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAGR,IAAI,CAACS,MAAM,CAAC;EAE5B;EACAC,MAAM,EAAE,CACJ,yDAAyD,EACzD,yEAAyE,EACzE,yEAAyE,EACzE,+CAA+C,EAC/C,qBAAqB,EACrB,8BAA8B,EAC9B,gCAAgC,EAChC,yBAAyB,CAC5B,CAACC,IAAI,CAAC,EAAE,CAAC;EAEVC,UAAU,EAAE,CACR,uBAAuB,EACvB,wCAAwC,EACxC,mBAAmB,EACnB,8NAA8N,EAC9N,6BAA6B,EAC7B,MAAM,EACN,+CAA+C,EAC/C,4CAA4C,EAC5C,glCAAglC,EAChlC,8BAA8B,EAC9B,MAAM,EACN,MAAM,CACT,CAACD,IAAI,CAAC,EAAE,CAAC;EAEVE,gBAAgB,EAAEC,SAAS;EAE3B;EACA;EACA;EACAC,YAAY,EAAE,CACV,2EAA2E,EAC3E,0DAA0D,EAC1D,qRAAqR,EACrR,0QAA0Q,EAC1Q,+BAA+B,EAC/B,SAAS,EACT,MAAM,CACT,CAACJ,IAAI,CAAC,EAAE,CAAC;EAEVK,eAAe,EAAE,CACb,sEAAsE,EACtE,gFAAgF,EAChF,MAAM,CACT,CAACL,IAAI,CAAC,EAAE,CAAC;EAEV;EACAM,YAAY,EAAEH,SAAS;EAEvB;EACA;EACA;EACAI,WAAW,EAAEJ,SAAS;EAEtB;EACAK,SAAS,EAAE;IACPF,YAAY,EAAE;MACV;MACA;MACA;MACAP,MAAM,EAAE,CACJ;QACIU,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM,CAAC;MACrB,CAAC,EAAE;QACCD,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM,CAAC;MACrB,CAAC,CACJ;;MACD;MACA;MACAC,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,QAAQ;UACpBC,UAAU,EAAE,QAAQ;UACpBC,aAAa,EAAE;QACnB,CAAC;QACDC,IAAI,EAAE;UACFC,GAAG,EAAE,MAAM;UACXN,IAAI,EAAE,SAAS;UACfO,EAAE,EAAE,CAAC;UACLC,EAAE,EAAE,CAAC;UACLC,QAAQ,EAAE,CAAC;UACXC,SAAS,EAAE,CAAC;UACZC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE;QACV;MACJ,CAAC;MACD;MACA;MACA;MACAC,QAAQ,EAAE;QACNC,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EAEDC,QAAQ,EAAE;IACNC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,CAAC,CAAC;IACVC,MAAM,EAAE,CAAC;EACb,CAAC;EAEDC,MAAM,EAAE,YAAW;IAEf,OAAO,IAAI;EACf,CAAC;EAEDC,UAAU,EAAE,UAASC,GAAG,EAAE;IAEtB,OAAO,IAAI,CAACC,GAAG,CAAC;MACZL,MAAM,EAAE;QAAEM,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;MACtBN,MAAM,EAAE;QAAEK,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE;IACzB,CAAC,EAAEH,GAAG,CAAC;EACX,CAAC;EAEDJ,MAAM,EAAE,UAASA,MAAM,EAAEQ,IAAI,EAAEJ,GAAG,EAAE;IAEhC;IACA,IAAIJ,MAAM,KAAK3B,SAAS,EAAE;MACtB,OAAOb,KAAK,CAAC,IAAI,CAACiD,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC;;IAEA;IACA,IAAIC,SAAS;IACb,IAAIC,MAAM;;IAEV;IACA;IACA,IAAIC,cAAc,GAAGZ,MAAM,YAAYzC,IAAI;IAC3C,IAAIqD,cAAc,EAAE;MAAE;MAClBF,SAAS,GAAGlD,KAAK,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BE,SAAS,CAACG,EAAE,GAAGb,MAAM,CAACa,EAAE;MACxBF,MAAM,GAAGP,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEK,SAAS,EAAEC,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACA,IAAIG,eAAe,GAAG,CAACrD,aAAa,CAACuC,MAAM,CAAC;IAC5C,IAAIc,eAAe,EAAE;MAAE;MACnBJ,SAAS,GAAGlD,KAAK,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BE,SAAS,CAACJ,CAAC,GAAGN,MAAM,CAACM,CAAC;MACtBI,SAAS,CAACH,CAAC,GAAGP,MAAM,CAACO,CAAC;MACtBI,MAAM,GAAGP,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEK,SAAS,EAAEC,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACAD,SAAS,GAAGV,MAAM;IAClBW,MAAM,GAAGH,IAAI;IACb,OAAO,IAAI,CAACH,GAAG,CAAC,QAAQ,EAAEK,SAAS,EAAEC,MAAM,CAAC;EAChD,CAAC;EAEDV,MAAM,EAAE,UAASA,MAAM,EAAEO,IAAI,EAAEJ,GAAG,EAAE;IAEhC;IACA,IAAIH,MAAM,KAAK5B,SAAS,EAAE;MACtB,OAAOb,KAAK,CAAC,IAAI,CAACiD,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC;;IAEA;IACA,IAAIM,SAAS;IACb,IAAIJ,MAAM;;IAEV;IACA;IACA,IAAIC,cAAc,GAAGX,MAAM,YAAY1C,IAAI;IAC3C,IAAIqD,cAAc,EAAE;MAAE;MAClBG,SAAS,GAAGvD,KAAK,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BO,SAAS,CAACF,EAAE,GAAGZ,MAAM,CAACY,EAAE;MACxBF,MAAM,GAAGP,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEU,SAAS,EAAEJ,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACA,IAAIG,eAAe,GAAG,CAACrD,aAAa,CAACwC,MAAM,CAAC;IAC5C,IAAIa,eAAe,EAAE;MAAE;MACnBC,SAAS,GAAGvD,KAAK,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BO,SAAS,CAACT,CAAC,GAAGL,MAAM,CAACK,CAAC;MACtBS,SAAS,CAACR,CAAC,GAAGN,MAAM,CAACM,CAAC;MACtBI,MAAM,GAAGP,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEU,SAAS,EAAEJ,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACAI,SAAS,GAAGd,MAAM;IAClBU,MAAM,GAAGH,IAAI;IACb,OAAO,IAAI,CAACH,GAAG,CAAC,QAAQ,EAAEU,SAAS,EAAEJ,MAAM,CAAC;EAChD,CAAC;EAEDK,MAAM,EAAE,UAASC,IAAI,EAAET,IAAI,EAAEJ,GAAG,EAAE;IAE9B;IACA,IAAIa,IAAI,KAAK5C,SAAS,EAAE;MACpB,IAAI2C,MAAM,GAAG,IAAI,CAACP,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAI,CAACO,MAAM,EAAE;QACT,IAAI,IAAI,CAACP,GAAG,CAAC,WAAW,CAAC,EAAE,OAAO;UAAEQ,IAAI,EAAE;QAAa,CAAC,CAAC,CAAC;QAC1D,OAAO,IAAI;MACf;MACA,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE,OAAOxD,KAAK,CAACwD,MAAM,CAAC;MACpD,OAAOA,MAAM,CAAC,CAAC;IACnB;;IAEA;IACA,IAAIE,gBAAgB,GAAK,OAAOD,IAAI,KAAK,QAAQ,IAAM,OAAOA,IAAI,KAAK,UAAY;IACnF,IAAIE,WAAW,GAAGD,gBAAgB,GAAGD,IAAI,GAAG;MAAEA,IAAI,EAAEA,IAAI;MAAET,IAAI,EAAEA;IAAK,CAAC;IACtE,IAAIY,QAAQ,GAAGF,gBAAgB,GAAGV,IAAI,GAAGJ,GAAG;IAE5C,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEc,WAAW,EAAEC,QAAQ,CAAC;EACpD,CAAC;EAEDC,SAAS,EAAE,UAASJ,IAAI,EAAET,IAAI,EAAEJ,GAAG,EAAE;IAEjC;IACA,IAAIa,IAAI,KAAK5C,SAAS,EAAE;MACpB,IAAIgD,SAAS,GAAG,IAAI,CAACZ,GAAG,CAAC,WAAW,CAAC;MACrC,IAAI,CAACY,SAAS,EAAE;QACZ,IAAI,IAAI,CAACZ,GAAG,CAAC,QAAQ,CAAC,EAAE,OAAO;UAAEQ,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI;MACf;MACA,IAAI,OAAOI,SAAS,KAAK,QAAQ,EAAE,OAAO7D,KAAK,CAAC6D,SAAS,CAAC;MAC1D,OAAOA,SAAS,CAAC,CAAC;IACtB;;IAEA;IACA,IAAIC,mBAAmB,GAAK,OAAOL,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAY;IACpF,IAAIM,cAAc,GAAGD,mBAAmB,GAAGL,IAAI,GAAG;MAAEA,IAAI,EAAEA,IAAI;MAAET,IAAI,EAAEA;IAAK,CAAC;IAC5E,IAAIY,QAAQ,GAAGE,mBAAmB,GAAGd,IAAI,GAAGJ,GAAG;IAE/C,OAAO,IAAI,CAACC,GAAG,CAAC,WAAW,EAAEkB,cAAc,EAAEH,QAAQ,CAAC;EAC1D,CAAC;EAED;;EAEA;EACAI,KAAK,EAAE,UAASC,GAAG,EAAED,KAAK,EAAEpB,GAAG,EAAE;IAE7B,IAAIsB,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAE1BD,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC;IACrD,IAAIA,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGC,MAAM,CAACE,MAAM,GAAGH,GAAG;;IAEtC;IACA,IAAII,SAAS,CAACD,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,CAACE,IAAI,CAAC,CAAC,QAAQ,EAAEL,GAAG,CAAC,CAAC;IAC5D;IACA,OAAO,IAAI,CAACK,IAAI,CAAC,CAAC,QAAQ,EAAEL,GAAG,CAAC,EAAED,KAAK,EAAEpB,GAAG,CAAC;EACjD,CAAC;EAEDsB,MAAM,EAAE,UAASA,MAAM,EAAEtB,GAAG,EAAE;IAE1B;IACA,IAAIyB,SAAS,CAACD,MAAM,KAAK,CAAC,EAAE;MACxBF,MAAM,GAAG,IAAI,CAACjB,GAAG,CAAC,QAAQ,CAAC;MAC3B,IAAI,CAACsB,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE,OAAO,EAAE;MACrC,OAAOA,MAAM,CAACO,KAAK,EAAE;IACzB;IACA;IACA,IAAI,CAACF,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAEA,MAAM,GAAG,EAAE;IACvC,OAAO,IAAI,CAACrB,GAAG,CAAC,QAAQ,EAAEqB,MAAM,EAAEtB,GAAG,CAAC;EAC1C,CAAC;EAED8B,SAAS,EAAE,YAAW;IAClB,MAAM;MAAER;IAAO,CAAC,GAAG,IAAI,CAACS,UAAU;IAClC,OAAOJ,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC;EACrD,CAAC;EAEDQ,WAAW,EAAE,UAASX,GAAG,EAAED,KAAK,EAAEpB,GAAG,EAAE;IAEnC,IAAI,CAACoB,KAAK,EAAE,MAAM,IAAIa,KAAK,CAAC,6BAA6B,CAAC;IAE1D,IAAIX,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAC1B,IAAIY,CAAC,GAAGZ,MAAM,CAACE,MAAM;IACrBH,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAIa,CAAC;IACrD,IAAIb,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGa,CAAC,GAAGb,GAAG,GAAG,CAAC;IAE9BC,MAAM,CAACa,MAAM,CAACd,GAAG,EAAE,CAAC,EAAED,KAAK,CAAC;IAC5B,OAAO,IAAI,CAACE,MAAM,CAACA,MAAM,EAAEtB,GAAG,CAAC;EACnC,CAAC;EAED;EACA;EACAoC,WAAW,EAAE,UAAShB,KAAK,EAAEpB,GAAG,EAAE;IAE9B,OAAO,IAAI,CAACgC,WAAW,CAAC,CAAC,CAAC,EAAEZ,KAAK,EAAEpB,GAAG,CAAC;EAC3C,CAAC;EAEDqC,WAAW,EAAE,UAAShB,GAAG,EAAErB,GAAG,EAAE;IAE5B,IAAIsB,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAC1BD,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC,CAAC;IAEtDC,MAAM,CAACa,MAAM,CAACd,GAAG,EAAE,CAAC,CAAC;IACrB,OAAO,IAAI,CAACC,MAAM,CAACA,MAAM,EAAEtB,GAAG,CAAC;EACnC,CAAC;EAED;;EAEAsC,MAAM,EAAE,UAASjB,GAAG,EAAEiB,MAAM,EAAEtC,GAAG,EAAE;IAE/B,IAAIuC,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAE;IAE9BlB,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC;IACrD,IAAIA,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGkB,QAAQ,CAACf,MAAM,GAAGH,GAAG;;IAExC;IACA,IAAII,SAAS,CAACD,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,CAACE,IAAI,CAAC,CAAC,UAAU,EAAEL,GAAG,CAAC,CAAC;;IAE9D;IACA,IAAImB,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;IAC7C,OAAO,IAAI,CAACZ,IAAI,CAAC,CAAC,UAAU,EAAEL,GAAG,CAAC,EAAEmB,SAAS,EAAExC,GAAG,CAAC;EACvD,CAAC;EAEDuC,QAAQ,EAAE,UAASA,QAAQ,EAAEvC,GAAG,EAAE;IAE9B;IACA,IAAIyB,SAAS,CAACD,MAAM,KAAK,CAAC,EAAE;MACxBe,QAAQ,GAAG,IAAI,CAAClC,GAAG,CAAC,UAAU,CAAC;MAC/B,IAAI,CAACsB,KAAK,CAACC,OAAO,CAACW,QAAQ,CAAC,EAAE,OAAO,EAAE;MACvC,OAAOA,QAAQ,CAACV,KAAK,EAAE;IAC3B;;IAEA;IACA,IAAI,CAACF,KAAK,CAACC,OAAO,CAACW,QAAQ,CAAC,EAAEA,QAAQ,GAAG,EAAE;IAC3C,IAAIG,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACf,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACtC,IAAIL,MAAM,GAAGC,QAAQ,CAACI,CAAC,CAAC;MACxB,IAAIH,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;MAC7CI,WAAW,CAACE,IAAI,CAACJ,SAAS,CAAC;IAC/B;IACA,OAAO,IAAI,CAACvC,GAAG,CAAC,UAAU,EAAEyC,WAAW,EAAE1C,GAAG,CAAC;EACjD,CAAC;EAED6C,YAAY,EAAE,UAASxB,GAAG,EAAEiB,MAAM,EAAEtC,GAAG,EAAE;IAErC,IAAI,CAACsC,MAAM,EAAE,MAAM,IAAIL,KAAK,CAAC,8BAA8B,CAAC;IAE5D,IAAIM,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAE;IAC9B,IAAIL,CAAC,GAAGK,QAAQ,CAACf,MAAM;IACvBH,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAIa,CAAC;IACrD,IAAIb,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGa,CAAC,GAAGb,GAAG,GAAG,CAAC;IAE9B,IAAImB,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;IAC7CC,QAAQ,CAACJ,MAAM,CAACd,GAAG,EAAE,CAAC,EAAEmB,SAAS,CAAC;IAClC,OAAO,IAAI,CAACD,QAAQ,CAACA,QAAQ,EAAEvC,GAAG,CAAC;EACvC,CAAC;EAED8C,YAAY,EAAE,UAASzB,GAAG,EAAErB,GAAG,EAAE;IAE7B,IAAIuC,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAE;IAC9BlB,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC,CAAC;IAEtDkB,QAAQ,CAACJ,MAAM,CAACd,GAAG,EAAE,CAAC,CAAC;IACvB,OAAO,IAAI,CAACkB,QAAQ,CAACA,QAAQ,EAAEvC,GAAG,CAAC;EACvC,CAAC;EAEDyC,gBAAgB,EAAE,UAASH,MAAM,EAAE;IAE/B;IACA;IACA,IAAI5B,eAAe,GAAG,CAACrD,aAAa,CAACiF,MAAM,CAAC;IAC5C,IAAI5B,eAAe,EAAE,OAAO;MAAER,CAAC,EAAEoC,MAAM,CAACpC,CAAC;MAAEC,CAAC,EAAEmC,MAAM,CAACnC;IAAE,CAAC;;IAExD;IACA,OAAOmC,MAAM;EACjB,CAAC;EAED;;EAEAS,SAAS,EAAE,UAASC,EAAE,EAAEC,EAAE,EAAEjD,GAAG,EAAE;IAE7B;IACAA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;IACfA,GAAG,CAACkD,WAAW,GAAGlD,GAAG,CAACkD,WAAW,IAAI,IAAI,CAACzC,EAAE;IAC5CT,GAAG,CAACgD,EAAE,GAAGA,EAAE;IACXhD,GAAG,CAACiD,EAAE,GAAGA,EAAE;IAEX,OAAO,IAAI,CAACE,aAAa,CAAC,UAASC,CAAC,EAAE;MAClC,OAAO;QAAElD,CAAC,EAAE,CAACkD,CAAC,CAAClD,CAAC,IAAI,CAAC,IAAI8C,EAAE;QAAE7C,CAAC,EAAE,CAACiD,CAAC,CAACjD,CAAC,IAAI,CAAC,IAAI8C;MAAG,CAAC;IACrD,CAAC,EAAEjD,GAAG,CAAC;EACX,CAAC;EAEDqD,KAAK,EAAE,UAASC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAExD,GAAG,EAAE;IAEjC,OAAO,IAAI,CAACmD,aAAa,CAAC,UAASC,CAAC,EAAE;MAClC,OAAO3F,KAAK,CAAC2F,CAAC,CAAC,CAACC,KAAK,CAACC,EAAE,EAAEC,EAAE,EAAEC,MAAM,CAAC,CAACC,MAAM,EAAE;IAClD,CAAC,EAAEzD,GAAG,CAAC;EACX,CAAC;EAEDmD,aAAa,EAAE,UAASO,EAAE,EAAE1D,GAAG,EAAE;IAE7B,IAAI,CAAC1C,UAAU,CAACoG,EAAE,CAAC,EAAE;MACjB,MAAM,IAAIC,SAAS,CAAC,uEAAuE,CAAC;IAChG;IAEA,IAAIlF,KAAK,GAAG,CAAC,CAAC;IAEd,IAAI;MAAEmB,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACkC,UAAU;IACxC,IAAI,CAACnC,MAAM,CAACa,EAAE,EAAE;MACZhC,KAAK,CAACmB,MAAM,GAAG8D,EAAE,CAAC9D,MAAM,CAAC;IAC7B;IACA,IAAI,CAACC,MAAM,CAACY,EAAE,EAAE;MACZhC,KAAK,CAACoB,MAAM,GAAG6D,EAAE,CAAC7D,MAAM,CAAC;IAC7B;IAEA,IAAI0C,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAE;IAC9B,IAAIA,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;MACrB/C,KAAK,CAAC8D,QAAQ,GAAGA,QAAQ,CAACqB,GAAG,CAACF,EAAE,CAAC;IACrC;IAEA,OAAO,IAAI,CAACzD,GAAG,CAACxB,KAAK,EAAEuB,GAAG,CAAC;EAC/B,CAAC;EAED6D,cAAc,EAAE,YAAW;IACvB,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACrC,IAAI,CAACD,UAAU,EAAE,OAAO,IAAIrG,KAAK,CAAC,IAAI,CAACmC,MAAM,EAAE,CAAC;IAChD,OAAOkE,UAAU,CAACE,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC/D,CAAC;EAEDC,cAAc,EAAE,YAAW;IACvB,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACrC,IAAI,CAACD,UAAU,EAAE,OAAO,IAAIzG,KAAK,CAAC,IAAI,CAACoC,MAAM,EAAE,CAAC;IAChD,OAAOqE,UAAU,CAACF,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC/D,CAAC;EAEDA,yBAAyB,EAAE,SAAS;EAAA,GAAqB;IACrD,OAAO,IAAI,CAACI,WAAW,EAAE,CAACC,OAAO,CAAC,GAAG,CAAC;EAC1C,CAAC;EAEDD,WAAW,EAAE,YAAW;IACpB,MAAME,MAAM,GAAG,CACX,IAAI,CAACT,cAAc,EAAE,EACrB,GAAG,IAAI,CAACtB,QAAQ,EAAE,CAACqB,GAAG,CAACnG,KAAK,CAAC,EAC7B,IAAI,CAACwG,cAAc,EAAE,CACxB;IACD,OAAO,IAAIvG,QAAQ,CAAC4G,MAAM,CAAC;EAC/B,CAAC;EAEDC,OAAO,EAAE,YAAW;IAChB,OAAO,IAAI,CAACH,WAAW,EAAE,CAACI,IAAI,EAAE;EACpC,CAAC;EAEDC,QAAQ,EAAE,UAASzE,GAAG,EAAE;IAEpB,IAAI0E,SAAS;IAEb,IAAI,IAAI,CAACC,KAAK,EAAE;MAEZ,IAAI/E,MAAM,GAAG,IAAI,CAACgF,gBAAgB,EAAE;MACpC,IAAI/E,MAAM,GAAG,IAAI,CAACgF,gBAAgB,EAAE;MACpC,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;MAErC,IAAInF,MAAM,IAAIC,MAAM,EAAE;QAClB,IAAID,MAAM,KAAKC,MAAM,IAAID,MAAM,CAACoF,YAAY,CAACnF,MAAM,CAAC,EAAE;UAClD6E,SAAS,GAAG7E,MAAM;QACtB,CAAC,MAAM,IAAIA,MAAM,CAACmF,YAAY,CAACpF,MAAM,CAAC,EAAE;UACpC8E,SAAS,GAAG9E,MAAM;QACtB,CAAC,MAAM;UACH8E,SAAS,GAAG,IAAI,CAACC,KAAK,CAACM,iBAAiB,CAACrF,MAAM,EAAEC,MAAM,CAAC;QAC5D;MACJ;MAEA,IAAIiF,UAAU,KAAK,CAACJ,SAAS,IAAIA,SAAS,CAACjE,EAAE,KAAKqE,UAAU,CAACrE,EAAE,CAAC,EAAE;QAC9D;QACA;QACAqE,UAAU,CAACI,OAAO,CAAC,IAAI,EAAElF,GAAG,CAAC;MACjC;MAEA,IAAI0E,SAAS,EAAE;QACXA,SAAS,CAACS,KAAK,CAAC,IAAI,EAAEnF,GAAG,CAAC;MAC9B;IACJ;IAEA,OAAO0E,SAAS;EACpB,CAAC;EAEDU,OAAO,EAAE,UAASpF,GAAG,EAAE;IAEnBA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;IAEf,IAAI;MAAEJ,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACkC,UAAU;IACxC,IAAIsD,QAAQ,GAAGzF,MAAM,CAACa,EAAE;IACxB,IAAI6E,QAAQ,GAAGzF,MAAM,CAACY,EAAE;IAExB,IAAI,CAAC4E,QAAQ,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA,OAAO,KAAK;IAChB;IAEA,IAAIC,IAAI,GAAGF,QAAQ,KAAKC,QAAQ;;IAEhC;IACA;IACA;IACA,IAAI,CAACC,IAAI,IAAIvF,GAAG,CAACwF,IAAI,IAAI,IAAI,CAACb,KAAK,EAAE;MAEjC,IAAIc,aAAa,GAAG,IAAI,CAAC1B,aAAa,EAAE;MACxC,IAAI2B,aAAa,GAAG,IAAI,CAACvB,aAAa,EAAE;MAExCoB,IAAI,GAAGE,aAAa,CAACT,YAAY,CAACU,aAAa,CAAC,IAAIA,aAAa,CAACV,YAAY,CAACS,aAAa,CAAC;IACjG;IAEA,OAAOF,IAAI;EACf,CAAC;EAED;EACAxB,aAAa,EAAE,YAAW;IAEtB,MAAM;MAAEY,KAAK;MAAE5C;IAAW,CAAC,GAAG,IAAI;IAClC,IAAInC,MAAM,GAAGmC,UAAU,CAACnC,MAAM;IAC9B,OAAQA,MAAM,IAAIA,MAAM,CAACa,EAAE,IAAIkE,KAAK,IAAIA,KAAK,CAACgB,OAAO,CAAC/F,MAAM,CAACa,EAAE,CAAC,IAAK,IAAI;EAC7E,CAAC;EAEDmE,gBAAgB,EAAE,YAAW;IACzB,IAAIgB,IAAI,GAAG,IAAI;IACf,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,GAAG;MACC,IAAIA,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,EAAE,OAAO,IAAI;MACjCoF,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,GAAG,IAAI;MACvBmF,IAAI,GAAGA,IAAI,CAAC7B,aAAa,EAAE;IAC/B,CAAC,QAAQ6B,IAAI,IAAIA,IAAI,CAAC9F,MAAM,EAAE;IAC9B,OAAO8F,IAAI;EACf,CAAC;EAED;EACAzB,aAAa,EAAE,YAAW;IAEtB,MAAM;MAAEQ,KAAK;MAAE5C;IAAW,CAAC,GAAG,IAAI;IAClC,IAAIlC,MAAM,GAAGkC,UAAU,CAAClC,MAAM;IAC9B,OAAQA,MAAM,IAAIA,MAAM,CAACY,EAAE,IAAIkE,KAAK,IAAIA,KAAK,CAACgB,OAAO,CAAC9F,MAAM,CAACY,EAAE,CAAC,IAAK,IAAI;EAC7E,CAAC;EAEDoE,gBAAgB,EAAE,YAAW;IACzB,IAAIe,IAAI,GAAG,IAAI;IACf,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,GAAG;MACC,IAAIA,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,EAAE,OAAO,IAAI;MACjCoF,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,GAAG,IAAI;MACvBmF,IAAI,GAAGA,IAAI,CAACzB,aAAa,EAAE;IAC/B,CAAC,QAAQyB,IAAI,IAAIA,IAAI,CAAC9F,MAAM,EAAE;IAC9B,OAAO8F,IAAI;EACf,CAAC;EAED;EACA;EACAE,uBAAuB,EAAE,YAAW;IAEhC,IAAIC,kBAAkB;IAEtB,IAAI,IAAI,CAACpB,KAAK,EAAE;MAEZ,IAAIqB,KAAK,GAAG,CACR,IAAI,EACJ,IAAI,CAACpB,gBAAgB,EAAE;MAAE;MACzB,IAAI,CAACC,gBAAgB,EAAE,CAAC;MAAA,CAC3B,CAACoB,MAAM,CAAC,UAASC,IAAI,EAAE;QACpB,OAAO,CAAC,CAACA,IAAI;MACjB,CAAC,CAAC;MAEFH,kBAAkB,GAAG,IAAI,CAACpB,KAAK,CAACM,iBAAiB,CAACkB,KAAK,CAAC,IAAI,CAACxB,KAAK,EAAEqB,KAAK,CAAC;IAC9E;IAEA,OAAOD,kBAAkB,IAAI,IAAI;EACrC,CAAC;EAED;EACAK,wBAAwB,EAAE,UAASR,IAAI,EAAE;IAErC,IAAIS,MAAM,GAAI9I,QAAQ,CAACqI,IAAI,CAAC,IAAIpI,QAAQ,CAACoI,IAAI,CAAC,GAAIA,IAAI,GAAGA,IAAI,CAACnF,EAAE;IAChE,IAAI6F,QAAQ,GAAG,IAAI,CAACR,uBAAuB,EAAE;IAE7C,OAAO,CAAC,CAACQ,QAAQ,KAAKA,QAAQ,CAAC7F,EAAE,KAAK4F,MAAM,IAAIC,QAAQ,CAACtB,YAAY,CAACqB,MAAM,CAAC,CAAC;EAClF,CAAC;EAED;EACAE,gBAAgB,EAAE,YAAW;IAEzB,IAAInI,YAAY,GAAG,IAAI,CAACiC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAACjC,YAAY,IAAI,CAAC,CAAC;IAEtE,IAAIgD,KAAK,GAAG,CAAC,CAAC;IACdA,KAAK,CAACvD,MAAM,GAAGO,YAAY,CAACP,MAAM,IAAI,IAAI,CAACwC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAChC,WAAW;IACjF+C,KAAK,CAAC5B,QAAQ,GAAGpB,YAAY,CAACoB,QAAQ;IACtC4B,KAAK,CAAC3C,KAAK,GAAGL,YAAY,CAACK,KAAK;IAChC2C,KAAK,CAACoF,IAAI,GAAGpI,YAAY,CAACoI,IAAI;IAE9B,OAAOpF,KAAK;EAChB;AACJ,CAAC,EAAE;EAECqF,SAAS,EAAE,UAASC,CAAC,EAAEC,CAAC,EAAE;IAEtB,IAAIC,UAAU,GAAGF,CAAC,CAACG,IAAI,KAAKF,CAAC,CAACE,IAAI,IAAI,CAACH,CAAC,CAACG,IAAI,IAAI,CAACF,CAAC,CAACE,IAAI;IACxD,OAAOH,CAAC,CAACjG,EAAE,KAAKkG,CAAC,CAAClG,EAAE,IAAImG,UAAU;EACtC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}