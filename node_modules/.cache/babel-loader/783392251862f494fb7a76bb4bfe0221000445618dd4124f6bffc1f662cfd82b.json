{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Grid = /** @class */function () {\n  function Grid() {\n    this.cells = [];\n    this.columnNum = 0;\n    this.rowNum = 0;\n    this.additionColumn = [];\n    this.additionRow = [];\n  }\n  Grid.prototype.init = function (width, height, gridSize) {\n    this.cells = [];\n    this.CELL_W = gridSize.CELL_W || Grid.DEFAULT_CELL_W;\n    this.CELL_H = gridSize.CELL_H || Grid.DEFAULT_CELL_H;\n    this.columnNum = Math.ceil(width / this.CELL_W);\n    this.rowNum = Math.ceil(height / this.CELL_H);\n    Grid.MIN_DIST = Math.pow(width, 2) + Math.pow(height, 2);\n    for (var i = 0; i < this.columnNum; i++) {\n      var tmp = [];\n      for (var j = 0; j < this.rowNum; j++) {\n        var cell = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false\n        };\n        tmp.push(cell);\n      }\n      this.cells.push(tmp);\n    }\n  };\n  Grid.prototype.findGridByNodeId = function (nodeId) {\n    var _a, _b;\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          if (((_b = (_a = this.cells[i][j]) === null || _a === void 0 ? void 0 : _a.node) === null || _b === void 0 ? void 0 : _b.id) === nodeId) {\n            return {\n              column: i,\n              row: j\n            };\n          }\n        }\n      }\n    }\n    return null;\n  };\n  Grid.prototype.sqdist = function (a, b) {\n    return Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2);\n  };\n  Grid.prototype.occupyNearest = function (p) {\n    var minDist = Grid.MIN_DIST;\n    var d;\n    var candidate = null;\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (!this.cells[i][j].occupied && (d = this.sqdist(p, this.cells[i][j])) < minDist) {\n          minDist = d;\n          candidate = this.cells[i][j];\n        }\n      }\n    }\n    if (candidate) {\n      candidate.occupied = true;\n    }\n    return candidate;\n  };\n  Grid.prototype.insertColumn = function (columnIndex, length) {\n    if (length <= 0) return;\n    // 插入空列\n    for (var i = 0; i < length; i++) {\n      this.cells[i + this.columnNum] = [];\n      for (var j = 0; j < this.rowNum; j++) {\n        this.cells[i + this.columnNum][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 交换数据\n    for (var i = this.columnNum - 1; i > columnIndex; i--) {\n      for (var j = 0; j < this.rowNum; j++) {\n        this.cells[i + length][j] = __assign(__assign({}, this.cells[i][j]), {\n          x: (i + length) * this.CELL_W,\n          y: j * this.CELL_H\n        });\n        this.cells[i][j] = {\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: true,\n          node: null\n        };\n      }\n    }\n    // 已有行列的处理\n    for (var j = 0; j < this.additionColumn.length; j++) {\n      if (this.additionColumn[j] >= columnIndex) {\n        this.additionColumn[j] += length;\n      }\n    }\n    // 记录新增的行列\n    for (var i = 0; i < length; i++) {\n      this.additionColumn.push(columnIndex + i + 1);\n    }\n    this.columnNum += length;\n  };\n  Grid.prototype.insertRow = function (rowIndex, length) {\n    if (length <= 0) return;\n    // 插入空行\n    for (var j = 0; j < length; j++) {\n      for (var i = 0; i < this.columnNum; i++) {\n        this.cells[i][j + this.rowNum] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 交换数据\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = this.rowNum - 1; j > rowIndex; j--) {\n        this.cells[i][j + length] = __assign(__assign({}, this.cells[i][j]), {\n          dx: i,\n          dy: j + length,\n          x: i * this.CELL_W,\n          y: (j + length) * this.CELL_H\n        });\n        this.cells[i][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 已有行列的处理\n    for (var j = 0; j < this.additionRow.length; j++) {\n      if (this.additionRow[j] >= rowIndex) {\n        this.additionRow[j] += length;\n      }\n    }\n    // 记录新增的行列\n    for (var i = 0; i < length; i++) {\n      this.additionRow.push(rowIndex + i + 1);\n    }\n    this.rowNum += length;\n  };\n  Grid.prototype.getNodes = function () {\n    var nodes = [];\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          nodes.push(this.cells[i][j]);\n        }\n      }\n    }\n    return nodes;\n  };\n  Grid.MIN_DIST = 50;\n  Grid.DEFAULT_CELL_W = 80;\n  Grid.DEFAULT_CELL_H = 80;\n  return Grid;\n}();\nexports.default = Grid;","map":{"version":3,"mappings":"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","names":["Grid","width","height","gridSize","cells","CELL_W","DEFAULT_CELL_W","CELL_H","DEFAULT_CELL_H","columnNum","Math","ceil","rowNum","MIN_DIST","pow","i","tmp","j","cell","dx","dy","x","y","occupied","push","nodeId","node","id","column","row","a","b","p","minDist","d","candidate","sqdist","columnIndex","length","additionColumn","rowIndex","additionRow","nodes"],"sourceRoot":"","sources":["../../../src/layout/er/grid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}