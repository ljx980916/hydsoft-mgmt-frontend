{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RadialLayout = void 0;\nvar util_1 = require(\"../../util\");\nvar base_1 = require(\"../base\");\nvar mds_1 = __importDefault(require(\"./mds\"));\nvar radialNonoverlapForce_1 = __importDefault(require(\"./radialNonoverlapForce\"));\nfunction getWeightMatrix(M) {\n  var rows = M.length;\n  var cols = M[0].length;\n  var result = [];\n  for (var i = 0; i < rows; i++) {\n    var row = [];\n    for (var j = 0; j < cols; j++) {\n      if (M[i][j] !== 0) {\n        row.push(1 / (M[i][j] * M[i][j]));\n      } else {\n        row.push(0);\n      }\n    }\n    result.push(row);\n  }\n  return result;\n}\nfunction getIndexById(array, id) {\n  var index = -1;\n  array.forEach(function (a, i) {\n    if (a.id === id) {\n      index = i;\n    }\n  });\n  return index;\n}\nfunction getEDistance(p1, p2) {\n  return Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));\n}\n/**\n * 辐射状布局\n */\nvar RadialLayout = /** @class */function (_super) {\n  __extends(RadialLayout, _super);\n  function RadialLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 停止迭代的最大迭代数 */\n    _this.maxIteration = 1000;\n    /** 中心点，默认为数据中第一个点 */\n    _this.focusNode = null;\n    /** 每一圈半径 */\n    _this.unitRadius = null;\n    /** 默认边长度 */\n    _this.linkDistance = 50;\n    /** 是否防止重叠 */\n    _this.preventOverlap = false;\n    /** 是否必须是严格的 radial 布局，即每一层的节点严格布局在一个环上。preventOverlap 为 true 时生效 */\n    _this.strictRadial = true;\n    /** 防止重叠步骤的最大迭代次数 */\n    _this.maxPreventOverlapIteration = 200;\n    _this.sortStrength = 10;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.updateCfg(options);\n    return _this;\n  }\n  RadialLayout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      focusNode: null,\n      unitRadius: null,\n      linkDistance: 50,\n      preventOverlap: false,\n      nodeSize: undefined,\n      nodeSpacing: undefined,\n      strictRadial: true,\n      maxPreventOverlapIteration: 200,\n      sortBy: undefined,\n      sortStrength: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n  RadialLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges || [];\n    if (!nodes || nodes.length === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n    if (!self.center) {\n      self.center = [self.width / 2, self.height / 2];\n    }\n    var center = self.center;\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n    var linkDistance = self.linkDistance;\n    // layout\n    var focusNode = null;\n    if ((0, util_1.isString)(self.focusNode)) {\n      var found = false;\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === self.focusNode) {\n          focusNode = nodes[i];\n          self.focusNode = focusNode;\n          found = true;\n          i = nodes.length;\n        }\n      }\n      if (!found) {\n        focusNode = null;\n      }\n    } else {\n      focusNode = self.focusNode;\n    }\n    // default focus node\n    if (!focusNode) {\n      focusNode = nodes[0];\n      self.focusNode = focusNode;\n    }\n    // the index of the focusNode in data\n    var focusIndex = getIndexById(nodes, focusNode.id);\n    if (focusIndex < 0) focusIndex = 0;\n    self.focusIndex = focusIndex;\n    // the graph-theoretic distance (shortest path distance) matrix\n    var adjMatrix = (0, util_1.getAdjMatrix)({\n      nodes: nodes,\n      edges: edges\n    }, false);\n    var D = (0, util_1.floydWarshall)(adjMatrix);\n    var maxDistance = self.maxToFocus(D, focusIndex);\n    // replace first node in unconnected component to the circle at (maxDistance + 1)\n    self.handleInfinity(D, focusIndex, maxDistance + 1);\n    self.distances = D;\n    // the shortest path distance from each node to focusNode\n    var focusNodeD = D[focusIndex];\n    var width = self.width || 500;\n    var height = self.height || 500;\n    var semiWidth = width - center[0] > center[0] ? center[0] : width - center[0];\n    var semiHeight = height - center[1] > center[1] ? center[1] : height - center[1];\n    if (semiWidth === 0) {\n      semiWidth = width / 2;\n    }\n    if (semiHeight === 0) {\n      semiHeight = height / 2;\n    }\n    // the maxRadius of the graph\n    var maxRadius = semiHeight > semiWidth ? semiWidth : semiHeight;\n    var maxD = Math.max.apply(Math, focusNodeD);\n    // the radius for each nodes away from focusNode\n    var radii = [];\n    focusNodeD.forEach(function (value, i) {\n      if (!self.unitRadius) {\n        self.unitRadius = maxRadius / maxD;\n      }\n      radii[i] = value * self.unitRadius;\n    });\n    self.radii = radii;\n    var eIdealD = self.eIdealDisMatrix();\n    // const eIdealD = scaleMatrix(D, linkDistance);\n    self.eIdealDistances = eIdealD;\n    // the weight matrix, Wij = 1 / dij^(-2)\n    var W = getWeightMatrix(eIdealD);\n    self.weights = W;\n    // the initial positions from mds\n    var mds = new mds_1.default({\n      linkDistance: linkDistance,\n      distances: eIdealD\n    });\n    var positions = mds.layout();\n    positions.forEach(function (p) {\n      if ((0, util_1.isNaN)(p[0])) {\n        p[0] = Math.random() * linkDistance;\n      }\n      if ((0, util_1.isNaN)(p[1])) {\n        p[1] = Math.random() * linkDistance;\n      }\n    });\n    self.positions = positions;\n    positions.forEach(function (p, i) {\n      nodes[i].x = p[0] + center[0];\n      nodes[i].y = p[1] + center[1];\n    });\n    // move the graph to origin, centered at focusNode\n    positions.forEach(function (p) {\n      p[0] -= positions[focusIndex][0];\n      p[1] -= positions[focusIndex][1];\n    });\n    self.run();\n    var preventOverlap = self.preventOverlap;\n    var nodeSize = self.nodeSize;\n    var nodeSizeFunc;\n    var strictRadial = self.strictRadial;\n    // stagger the overlapped nodes\n    if (preventOverlap) {\n      var nodeSpacing_1 = self.nodeSpacing;\n      var nodeSpacingFunc_1;\n      if ((0, util_1.isNumber)(nodeSpacing_1)) {\n        nodeSpacingFunc_1 = function () {\n          return nodeSpacing_1;\n        };\n      } else if ((0, util_1.isFunction)(nodeSpacing_1)) {\n        nodeSpacingFunc_1 = nodeSpacing_1;\n      } else {\n        nodeSpacingFunc_1 = function () {\n          return 0;\n        };\n      }\n      if (!nodeSize) {\n        nodeSizeFunc = function (d) {\n          if (d.size) {\n            if ((0, util_1.isArray)(d.size)) {\n              var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n              return res + nodeSpacingFunc_1(d);\n            }\n            if ((0, util_1.isObject)(d.size)) {\n              var res = d.size.width > d.size.height ? d.size.width : d.size.height;\n              return res + nodeSpacingFunc_1(d);\n            }\n            return d.size + nodeSpacingFunc_1(d);\n          }\n          return 10 + nodeSpacingFunc_1(d);\n        };\n      } else if ((0, util_1.isArray)(nodeSize)) {\n        nodeSizeFunc = function (d) {\n          var res = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n          return res + nodeSpacingFunc_1(d);\n        };\n      } else {\n        nodeSizeFunc = function (d) {\n          return nodeSize + nodeSpacingFunc_1(d);\n        };\n      }\n      var nonoverlapForceParams = {\n        nodes: nodes,\n        nodeSizeFunc: nodeSizeFunc,\n        adjMatrix: adjMatrix,\n        positions: positions,\n        radii: radii,\n        height: height,\n        width: width,\n        strictRadial: strictRadial,\n        focusID: focusIndex,\n        iterations: self.maxPreventOverlapIteration || 200,\n        k: positions.length / 4.5\n      };\n      var nonoverlapForce = new radialNonoverlapForce_1.default(nonoverlapForceParams);\n      positions = nonoverlapForce.layout();\n    }\n    // move the graph to center\n    positions.forEach(function (p, i) {\n      nodes[i].x = p[0] + center[0];\n      nodes[i].y = p[1] + center[1];\n    });\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n  RadialLayout.prototype.run = function () {\n    var self = this;\n    var maxIteration = self.maxIteration;\n    var positions = self.positions || [];\n    var W = self.weights || [];\n    var eIdealDis = self.eIdealDistances || [];\n    var radii = self.radii || [];\n    for (var i = 0; i <= maxIteration; i++) {\n      var param = i / maxIteration;\n      self.oneIteration(param, positions, radii, eIdealDis, W);\n    }\n  };\n  RadialLayout.prototype.oneIteration = function (param, positions, radii, D, W) {\n    var self = this;\n    var vparam = 1 - param;\n    var focusIndex = self.focusIndex;\n    positions.forEach(function (v, i) {\n      // v\n      var originDis = getEDistance(v, [0, 0]);\n      var reciODis = originDis === 0 ? 0 : 1 / originDis;\n      if (i === focusIndex) {\n        return;\n      }\n      var xMolecule = 0;\n      var yMolecule = 0;\n      var denominator = 0;\n      positions.forEach(function (u, j) {\n        // u\n        if (i === j) {\n          return;\n        }\n        // the euclidean distance between v and u\n        var edis = getEDistance(v, u);\n        var reciEdis = edis === 0 ? 0 : 1 / edis;\n        var idealDis = D[j][i];\n        // same for x and y\n        denominator += W[i][j];\n        // x\n        xMolecule += W[i][j] * (u[0] + idealDis * (v[0] - u[0]) * reciEdis);\n        // y\n        yMolecule += W[i][j] * (u[1] + idealDis * (v[1] - u[1]) * reciEdis);\n      });\n      var reciR = radii[i] === 0 ? 0 : 1 / radii[i];\n      denominator *= vparam;\n      denominator += param * reciR * reciR;\n      // x\n      xMolecule *= vparam;\n      xMolecule += param * reciR * v[0] * reciODis;\n      v[0] = xMolecule / denominator;\n      // y\n      yMolecule *= vparam;\n      yMolecule += param * reciR * v[1] * reciODis;\n      v[1] = yMolecule / denominator;\n    });\n  };\n  RadialLayout.prototype.eIdealDisMatrix = function () {\n    var self = this;\n    var nodes = self.nodes;\n    if (!nodes) return [];\n    var D = self.distances;\n    var linkDis = self.linkDistance;\n    var radii = self.radii || [];\n    var unitRadius = self.unitRadius || 50;\n    var result = [];\n    if (D) {\n      D.forEach(function (row, i) {\n        var newRow = [];\n        row.forEach(function (v, j) {\n          if (i === j) {\n            newRow.push(0);\n          } else if (radii[i] === radii[j]) {\n            // i and j are on the same circle\n            if (self.sortBy === \"data\") {\n              // sort the nodes on the same circle according to the ordering of the data\n              newRow.push(v * (Math.abs(i - j) * self.sortStrength) / (radii[i] / unitRadius));\n            } else if (self.sortBy) {\n              // sort the nodes on the same circle according to the attributes\n              var iValue = nodes[i][self.sortBy] || 0;\n              var jValue = nodes[j][self.sortBy] || 0;\n              if ((0, util_1.isString)(iValue)) {\n                iValue = iValue.charCodeAt(0);\n              }\n              if ((0, util_1.isString)(jValue)) {\n                jValue = jValue.charCodeAt(0);\n              }\n              newRow.push(v * (Math.abs(iValue - jValue) * self.sortStrength) / (radii[i] / unitRadius));\n            } else {\n              newRow.push(v * linkDis / (radii[i] / unitRadius));\n            }\n          } else {\n            // i and j are on different circle\n            // i and j are on different circle\n            var link = (linkDis + unitRadius) / 2;\n            newRow.push(v * link);\n          }\n        });\n        result.push(newRow);\n      });\n    }\n    return result;\n  };\n  RadialLayout.prototype.handleInfinity = function (matrix, focusIndex, step) {\n    var length = matrix.length;\n    // 遍历 matrix 中遍历 focus 对应行\n    for (var i = 0; i < length; i++) {\n      // matrix 关注点对应行的 Inf 项\n      if (matrix[focusIndex][i] === Infinity) {\n        matrix[focusIndex][i] = step;\n        matrix[i][focusIndex] = step;\n        // 遍历 matrix 中的 i 行，i 行中非 Inf 项若在 focus 行为 Inf，则替换 focus 行的那个 Inf\n        for (var j = 0; j < length; j++) {\n          if (matrix[i][j] !== Infinity && matrix[focusIndex][j] === Infinity) {\n            matrix[focusIndex][j] = step + matrix[i][j];\n            matrix[j][focusIndex] = step + matrix[i][j];\n          }\n        }\n      }\n    }\n    // 处理其他行的 Inf。根据该行对应点与 focus 距离以及 Inf 项点 与 focus 距离，决定替换值\n    for (var i = 0; i < length; i++) {\n      if (i === focusIndex) {\n        continue;\n      }\n      for (var j = 0; j < length; j++) {\n        if (matrix[i][j] === Infinity) {\n          var minus = Math.abs(matrix[focusIndex][i] - matrix[focusIndex][j]);\n          minus = minus === 0 ? 1 : minus;\n          matrix[i][j] = minus;\n        }\n      }\n    }\n  };\n  RadialLayout.prototype.maxToFocus = function (matrix, focusIndex) {\n    var max = 0;\n    for (var i = 0; i < matrix[focusIndex].length; i++) {\n      if (matrix[focusIndex][i] === Infinity) {\n        continue;\n      }\n      max = matrix[focusIndex][i] > max ? matrix[focusIndex][i] : max;\n    }\n    return max;\n  };\n  RadialLayout.prototype.getType = function () {\n    return \"radial\";\n  };\n  return RadialLayout;\n}(base_1.Base);\nexports.RadialLayout = RadialLayout;","map":{"version":3,"mappings":"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","names":["getWeightMatrix","M","rows","length","cols","result","i","row","j","push","getIndexById","array","id","index","forEach","a","getEDistance","p1","p2","Math","sqrt","__extends","options","_super","_this","updateCfg","RadialLayout","maxIteration","focusNode","unitRadius","linkDistance","preventOverlap","nodeSize","undefined","nodeSpacing","strictRadial","maxPreventOverlapIteration","sortBy","sortStrength","self","nodes","edges","onLayoutEnd","width","window","innerWidth","height","innerHeight","center","x","y","found","focusIndex","adjMatrix","D","maxDistance","maxToFocus","handleInfinity","distances","focusNodeD","semiWidth","semiHeight","maxRadius","maxD","max","radii","value","eIdealD","eIdealDisMatrix","eIdealDistances","W","weights","mds","mds_1","positions","layout","p","random","run","nodeSizeFunc","nodeSpacing_1","nodeSpacingFunc_1","d","size","res","nonoverlapForceParams","focusID","iterations","k","nonoverlapForce","radialNonoverlapForce_1","eIdealDis","param","oneIteration","vparam","v","originDis","reciODis","xMolecule","yMolecule","denominator","u","edis","reciEdis","idealDis","reciR","linkDis","newRow","abs","iValue","jValue","charCodeAt","link","matrix","step","Infinity","minus","base_1","exports"],"sourceRoot":"","sources":["../../../src/layout/radial/radial.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}