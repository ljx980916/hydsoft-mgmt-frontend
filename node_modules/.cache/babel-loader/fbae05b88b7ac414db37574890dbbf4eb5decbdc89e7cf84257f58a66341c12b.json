{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, renderList as _renderList, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-026453d9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  style: {\n    \"color\": \"#999\",\n    \"font-size\": \"12px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_Icon = _resolveComponent(\"Icon\");\n  const _component_a_month_picker = _resolveComponent(\"a-month-picker\");\n  const _component_a_quarter_picker = _resolveComponent(\"a-quarter-picker\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 环比配置 \"), _createVNode(_component_a_modal, {\n    title: \"环比配置\",\n    width: \"auto\",\n    \"title-align\": \"start\",\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[12] || (_cache[12] = $event => _ctx.visible = $event),\n    footer: null,\n    \"body-style\": {\n      padding: '25px'\n    },\n    onClose: _ctx.handleClose\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_a_table, {\n      class: \"arcoTable_columnsWidthAuto\",\n      columns: _ctx.dataContent.columns || [],\n      data: _ctx.dataContent.dataSourse.length && _ctx.dataContent.dataSourse || [],\n      loading: _ctx.dataContent.loading,\n      pagination: false,\n      \"expanded-keys\": _ctx.expandedRowKeys,\n      onExpandedChange: _ctx.expandedChange,\n      \"show-empty-tree\": \"\",\n      \"row-class\": _ctx.activeRowClass,\n      bordered: {\n        wrapper: true,\n        cell: true\n      }\n    }, _createSlots({\n      _: 2 /* DYNAMIC */\n    }, [_renderList(_ctx.dataContent.columns, item => {\n      return {\n        name: item.titleSlotName,\n        fn: _withCtx(() => [item.titleSlotName == 'monthAfter' || item.titleSlotName == 'monthBefore' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_2, \"(\" + _toDisplayString(item.days) + \"天)\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), item.titleSlotName == 'QAfter' || item.titleSlotName == 'QBefore' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(item.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.titleSlotName == 'monthBefore' ? (_openBlock(), _createBlock(_component_a_month_picker, {\n          key: 2,\n          pickerValue: _ctx.monthBeforeValue,\n          \"onUpdate:pickerValue\": _cache[0] || (_cache[0] = $event => _ctx.monthBeforeValue = $event),\n          onPopupVisibleChange: _cache[1] || (_cache[1] = $event => _ctx.changeVisible($event, 'MB')),\n          onChange: _cache[2] || (_cache[2] = $event => _ctx.changeTime($event, 'MB')),\n          size: \"mini\",\n          position: \"bottom\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Icon, {\n            icon: _ctx.monthBeforeIcon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"pickerValue\"])) : _createCommentVNode(\"v-if\", true), item.titleSlotName == 'monthAfter' ? (_openBlock(), _createBlock(_component_a_month_picker, {\n          key: 3,\n          pickerValue: _ctx.monthAfterValue,\n          \"onUpdate:pickerValue\": _cache[3] || (_cache[3] = $event => _ctx.monthAfterValue = $event),\n          onPopupVisibleChange: _cache[4] || (_cache[4] = $event => _ctx.changeVisible($event, 'MA')),\n          onChange: _cache[5] || (_cache[5] = $event => _ctx.changeTime($event, 'MA')),\n          size: \"mini\",\n          position: \"bottom\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Icon, {\n            icon: _ctx.monthAfterIcon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"pickerValue\"])) : _createCommentVNode(\"v-if\", true), item.titleSlotName == 'QBefore' ? (_openBlock(), _createBlock(_component_a_quarter_picker, {\n          key: 4,\n          pickerValue: _ctx.QBeforeValue,\n          \"onUpdate:pickerValue\": _cache[6] || (_cache[6] = $event => _ctx.QBeforeValue = $event),\n          onPopupVisibleChange: _cache[7] || (_cache[7] = $event => _ctx.changeVisible($event, 'QB')),\n          onChange: _cache[8] || (_cache[8] = $event => _ctx.changeTime($event, 'QB')),\n          size: \"mini\",\n          position: \"bottom\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Icon, {\n            icon: _ctx.QBeforeIcon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"pickerValue\"])) : _createCommentVNode(\"v-if\", true), item.titleSlotName == 'QAfter' ? (_openBlock(), _createBlock(_component_a_quarter_picker, {\n          key: 5,\n          pickerValue: _ctx.QAfterValue,\n          \"onUpdate:pickerValue\": _cache[9] || (_cache[9] = $event => _ctx.QAfterValue = $event),\n          onPopupVisibleChange: _cache[10] || (_cache[10] = $event => _ctx.changeVisible($event, 'QA')),\n          onChange: _cache[11] || (_cache[11] = $event => _ctx.changeTime($event, 'QA')),\n          size: \"mini\",\n          position: \"bottom\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_Icon, {\n            icon: _ctx.QAfterIcon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"pickerValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" </div> \")])\n      };\n    })]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"columns\", \"data\", \"loading\", \"expanded-keys\", \"onExpandedChange\", \"row-class\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onClose\"])]);\n}","map":{"version":3,"mappings":";;;;;;EAkBmIA,KAAiC,EAAjC;IAAA;IAAA;EAAA;AAAiC;;;;;;;;;;uBAjBlKC,oBA8DM,cA7DJC,6BAAa,EACbC,aA2DUC;IA3DAC,KAAK,EAAC,MAAM;IAACC,KAAK,EAAC,MAAM;IAAC,aAAW,EAAC,OAAO;IAASC,OAAO,EAAEC,YAAO;8DAAPA,YAAO;IAAGC,MAAM,EAAE,IAAI;IAAG,YAAU,EAAE;MAAAC;IAAA,CAAgB;IAAGC,OAAK,EAAEH;;sBACpI,MAyDM,CAzDNI,oBAyDM,cAxDFT,aAuDUU;MAtDNC,KAAK,EAAC,4BAA4B;MACjCC,OAAO,EAAEP,gBAAW,CAACO,OAAO;MAC5BC,IAAI,EAAGR,gBAAW,CAACS,UAAU,CAACC,MAAM,IAAIV,gBAAW,CAACS,UAAU;MAC9DE,OAAO,EAAEX,gBAAW,CAACW,OAAO;MAC5BC,UAAU,EAAE,KAAK;MACjB,eAAa,EAAEZ,oBAAe;MAC9Ba,gBAAe,EAAEb,mBAAc;MAChC,iBAAe,EAAf,EAAe;MACd,WAAS,EAAEA,mBAAc;MACzBc,QAAQ,EAAE;QAAAC;QAAAC;MAAA;;;oBAEehB,gBAAW,CAACO,OAAO,EAA3BU,IAAI;;cAAmDA,IAAI,CAACC,aAAa;qBACnF,MAA6K,CAAjKD,IAAI,CAACC,aAAa,oBAAmBD,IAAI,CAACC,aAAa,mCAAnEzB,oBAA6K,uDAArFwB,IAAI,CAACpB,KAAK,kBAAGO,oBAAiE,QAAjEe,UAAiE,EAAzB,GAAC,oBAAGF,IAAI,CAACG,IAAI,IAAG,IAAE,wDACnJH,IAAI,CAACC,aAAa,gBAAeD,IAAI,CAACC,aAAa,+BAA/DzB,oBAAoG,qCAApBwB,IAAI,CAACpB,KAAK,uDAEpFoB,IAAI,CAACC,aAAa,mCADzBG,aASkBC;;UAPTC,WAAW,EAAEvB,qBAAgB;sEAAhBA,qBAAgB;UACpCwB,oBAAoB,sCAAExB,kBAAa,CAACyB,MAAM;UAC1CC,QAAM,sCAAE1B,eAAU,CAACyB,MAAM;UAC1BE,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAC;;4BAEL,MAAqC,CAArCjC,aAAqCkC;YAA9BC,IAAI,EAAE9B;UAAe;;iFAG1BiB,IAAI,CAACC,aAAa,kCADxBG,aASiBC;;UAPTC,WAAW,EAAEvB,oBAAe;sEAAfA,oBAAe;UACnCwB,oBAAoB,sCAAExB,kBAAa,CAACyB,MAAM;UAC1CC,QAAM,sCAAE1B,eAAU,CAACyB,MAAM;UAC1BE,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAC;;4BAEL,MAAoC,CAApCjC,aAAoCkC;YAA7BC,IAAI,EAAE9B;UAAc;;iFAGzBiB,IAAI,CAACC,aAAa,+BADxBG,aAQmBU;;UANXR,WAAW,EAAEvB,iBAAY;sEAAZA,iBAAY;UAChCwB,oBAAoB,sCAAExB,kBAAa,CAACyB,MAAM;UAC1CC,QAAM,sCAAE1B,eAAU,CAACyB,MAAM;UAC1BE,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAC;;4BACL,MAAiC,CAAjCjC,aAAiCkC;YAA1BC,IAAI,EAAE9B;UAAW;;iFAGtBiB,IAAI,CAACC,aAAa,8BADxBG,aAQmBU;;UANXR,WAAW,EAAEvB,gBAAW;sEAAXA,gBAAW;UAC/BwB,oBAAoB,wCAAExB,kBAAa,CAACyB,MAAM;UAC1CC,QAAM,wCAAE1B,eAAU,CAACyB,MAAM;UAC1BE,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAC;;4BACL,MAAgC,CAAhCjC,aAAgCkC;YAAzBC,IAAI,EAAE9B;UAAU;;iFAE/BN,+BAAe","names":["style","_createElementBlock","_createCommentVNode","_createVNode","_component_a_modal","title","width","visible","_ctx","footer","padding","onClose","_createElementVNode","_component_a_table","class","columns","data","dataSourse","length","loading","pagination","onExpandedChange","bordered","wrapper","cell","item","titleSlotName","_hoisted_2","days","_createBlock","_component_a_month_picker","pickerValue","onPopupVisibleChange","$event","onChange","size","position","_component_Icon","icon","_component_a_quarter_picker"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/components/different.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 环比配置 -->\n    <a-modal  title=\"环比配置\" width=\"auto\" title-align=\"start\" v-model:visible=\"visible\" :footer=\"null\" :body-style=\"{padding:'25px'}\" @close=\"handleClose\">\n        <div>\n            <a-table \n                class=\"arcoTable_columnsWidthAuto\" \n                :columns=\"dataContent.columns ||[]\"  \n                :data=\"(dataContent.dataSourse.length && dataContent.dataSourse) || []\"  \n                :loading=\"dataContent.loading\"\n                :pagination=\"false\" \n                :expanded-keys=\"expandedRowKeys\"\n                @expanded-change=\"expandedChange\"\n                show-empty-tree \n                :row-class=\"activeRowClass\"\n                :bordered=\"{wrapper: true, cell: true}\" \n            >\n                <template  v-for=\"item in dataContent.columns\" :key = \"item.dataIndex\"  #[item.titleSlotName]>\n                        <span v-if=\"item.titleSlotName =='monthAfter' || item.titleSlotName =='monthBefore'\">{{ item.title }}<span style=\"color:#999;font-size:12px\">({{ item.days }}天)</span></span>\n                        <span v-if=\"item.titleSlotName =='QAfter' || item.titleSlotName =='QBefore'\">{{ item.title }}</span>\n                       <a-month-picker \n                        v-if=\"item.titleSlotName =='monthBefore'\"\n                        v-model:pickerValue=\"monthBeforeValue\" \n                        @popup-visible-change=\"changeVisible($event,'MB')\"\n                        @change=\"changeTime($event,'MB')\"\n                        size=\"mini\"\n                        position=\"bottom\"\n                        >\n                            <Icon :icon=\"monthBeforeIcon\"></Icon>\n                        </a-month-picker>\n                        <a-month-picker \n                        v-if=\"item.titleSlotName =='monthAfter'\"\n                        v-model:pickerValue=\"monthAfterValue\" \n                        @popup-visible-change=\"changeVisible($event,'MA')\"\n                        @change=\"changeTime($event,'MA')\"\n                        size=\"mini\"\n                        position=\"bottom\"\n                        >\n                            <Icon :icon=\"monthAfterIcon\"></Icon>\n                        </a-month-picker>\n                        <a-quarter-picker \n                        v-if=\"item.titleSlotName =='QBefore'\" \n                        v-model:pickerValue=\"QBeforeValue\" \n                        @popup-visible-change=\"changeVisible($event,'QB')\"\n                        @change=\"changeTime($event,'QB')\"\n                        size=\"mini\"\n                        position=\"bottom\">\n                            <Icon :icon=\"QBeforeIcon\"></Icon>\n                        </a-quarter-picker>\n                        <a-quarter-picker \n                        v-if=\"item.titleSlotName =='QAfter'\" \n                        v-model:pickerValue=\"QAfterValue\" \n                        @popup-visible-change=\"changeVisible($event,'QA')\"\n                        @change=\"changeTime($event,'QA')\"\n                        size=\"mini\"\n                        position=\"bottom\">\n                            <Icon :icon=\"QAfterIcon\"></Icon>\n                        </a-quarter-picker>\n                    <!-- </div> -->\n                </template>\n            </a-table>\n        </div>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { ref,reactive,watch,onBeforeMount} from 'vue';\nimport {differentColumns} from '@/views/demo/constColumns.js';\nimport Icon from '@/components/icon.vue';\nimport {getCurrentDate} from '@/utils/util.js';\nimport {countWorkdaysByMonth} from \"@/api/drillAnalyze.js\";\nlet { year} = getCurrentDate();\nconst props = defineProps({\n    data: {\n        type: Array,\n        default: () => [],\n    },\n    columns: {\n        type: Array,\n        default: () => [],\n    },\n    modalVisible:{\n        type:Boolean,\n        default:false\n    }\n});\nconst dataContent = reactive({\n    columns: JSON.parse(JSON.stringify(differentColumns)),\n    dataSourse:[],\n    loading: false\n});\nconst visible = ref(props.modalVisible);\nconst expandedRowKeys = ref([]);\nconst monthBeforeIcon = ref('caret-right');\nconst monthBeforeValue = ref('');\nconst monthAfterIcon = ref('caret-right');\nconst monthAfterValue = ref('');\nconst QBeforeIcon = ref('caret-right');\nconst QBeforeValue = ref('');\nconst QAfterIcon = ref('caret-right');\nconst QAfterValue = ref('');\nwatch(\n() => props.modalVisible,\n(newVal, oldVal) => {\n    if (newVal) {\n        visible.value = newVal;\n        dataContent.columns = JSON.parse(JSON.stringify(differentColumns));\n        dataContent.dataSourse = dealDifferentData(props.data).arr;\n        expandedRowKeys.value = dealDifferentData(props.data).keyArr;\n    }\n    }\n);\nonBeforeMount(()=>{\n    differentColumns.forEach(item=>{\n        let month = 0;\n        if(item.dataIndex.substring(0,5)=='month'){\n            month = item.dataIndex.substring(5)\n            const params = {\n                month: `${year}-${month}`,\n            };\n            countWorkdaysByMonth(params)\n            .then(res => {\n                if (res.code === \"200\") {\n                    item.days = res.data;\n                }\n            })\n            .catch(() => {\n                Message.error(\"请求失败\");\n            });\n        }\n    })\n})\nconst emit = defineEmits([\n\"handleClose\"\n]);\n// 展开\nconst expandedChange = rowkeys =>{\n    expandedRowKeys.value = rowkeys;\n}\n// 环差比数据处理\nlet keyArr = [];\nconst dealDifferentData = (arr)=>{\n    let dataIndex1 = '';\n    let dataIndex2 = '';\n    let dataIndex3 = '';\n    let dataIndex4 = '';\n    dataContent.columns.forEach(ele=>{\n        if(ele.titleSlotName ==\"monthBefore\"){\n            dataIndex1 = ele.dataIndex\n        }\n        if(ele.titleSlotName ==\"monthAfter\"){\n            dataIndex2 = ele.dataIndex\n        }\n        if(ele.titleSlotName ==\"QBefore\"){\n            dataIndex3 = ele.dataIndex\n        }if(ele.titleSlotName ==\"QAfter\"){\n            dataIndex4 = ele.dataIndex\n        }\n    })\n    Array.isArray(arr) && arr.forEach((item,index) => {\n        keyArr.push(item.key);\n        // 季度数据\n        for(var i=1;i<=3;i++){\n            if(item[`month${i}`] !== '-'){\n                // item.Q1 =  Number(item.Q1+=item[`month${i}`]).toFixed(2);\n                console.log((Number(item[`month${i}`])+= Number(item[`month${i}`]),'Q1111');\n            }\n        } \n        // console.log(item.Q1,'Q1');\n        item.Q2 = Number(item.month4 + item.month5 + item.month6).toFixed(2);\n        item.Q3 = Number(item.month7 + item.month8 + item.month9).toFixed(2);\n        item.Q4 = Number(item.month10 + item.month11 + item.month12).toFixed(2);\n        // console.log(item.month7,item.month8,item.month9,789);\n        // console.log(item.Q3,'item.Q3');\n        if(isNaN(item.Q1)){\n            item.Q1='-'\n        }\n        if(isNaN(item.Q2)){\n            item.Q2='-'\n        }\n        if(isNaN(item.Q3)){\n            item.Q3='-'\n        }\n        if(isNaN(item.Q4)){\n            item.Q4='-'\n        }\n        // 月份\n        if(!item.isRate){\n            if(item[dataIndex2] !=='-' && item[dataIndex1] !=='-' ){\n                item.monthDifferent = Number(item[dataIndex2]-item[dataIndex1]).toFixed(2);\n                item.MonthonMonth = Number(((item[dataIndex2]-item[dataIndex1])/item[dataIndex1])*100).toFixed(2)+ '%';\n            }else if(item[dataIndex1] !=='-' && item[dataIndex2] =='-' ){\n                item.monthDifferent = Number(0-item[dataIndex1]).toFixed(2);\n                item.MonthonMonth = Number(((0-item[dataIndex1])/item[dataIndex1])*100).toFixed(2)+ '%';\n            } else if (item[dataIndex1] =='-' && item[dataIndex2] !=='-' ){\n                item.monthDifferent = Number(item[dataIndex2]-0).toFixed(2);\n                item.MonthonMonth = '-';\n            }else{\n                item.monthDifferent='-'\n                item.MonthonMonth='-'\n            }\n        }else{\n            if(item[dataIndex2] !=='-' && item[dataIndex1] !=='-' ){\n                let num1= item[dataIndex1].substring(0,item[dataIndex1].length-1);\n                let num2= item[dataIndex2].substring(0,item[dataIndex2].length-1);\n                item.monthDifferent = Number(num2-num1).toFixed(2)+ '%';\n                item.MonthonMonth = Number((num2-num1)/num1).toFixed(2)+ '%';\n            }else if(item[dataIndex1] !=='-' && item[dataIndex2] =='-' ){\n                let num1= item[dataIndex1].substring(0,item[dataIndex1].length-1);\n                item.monthDifferent = Number(0-num1).toFixed(2)+ '%';\n                item.MonthonMonth = Number((0-num1)/num1).toFixed(2)+ '%';\n            } else if (item[dataIndex1] =='-' && item[dataIndex2] !=='-' ){\n                let num2= item[dataIndex2].substring(0,item[dataIndex2].length-1);\n                item.monthDifferent = Number(num2-0).toFixed(2)+ '%';\n                item.MonthonMonth = '-';\n            }else{\n                item.monthDifferent='-'\n                item.MonthonMonth='-'\n            }\n        }\n        // 季度\n        if(!item.isRate){\n            if(item[dataIndex4] !=='-' && item[dataIndex3] !=='-' ){\n                item.QDifferent = Number(item[dataIndex4]-item[dataIndex3]).toFixed(2);\n                item.QonQ = Number(((item[dataIndex4]-item[dataIndex3])/item[dataIndex3])*100).toFixed(2)+ '%';\n            }else if(item[dataIndex3] !=='-' && item[dataIndex4] =='-' ){\n                item.QDifferent = Number(0-item[dataIndex3]).toFixed(2);\n                item.QonQ = Number(((0-item[dataIndex3])/item[dataIndex3])*100).toFixed(2)+ '%';\n            } else if (item[dataIndex3] =='-' && item[dataIndex4] !=='-' ){\n                item.QDifferent = Number(item[dataIndex4]-0).toFixed(2);\n                item.QonQ = '-';\n            }else{\n                item.QDifferent='-'\n                item.QonQ='-'\n            }\n        }else{\n            if(item[dataIndex4] !=='-' && item[dataIndex3] !=='-' ){\n                let num1= item[dataIndex3].substring(0,item[dataIndex3].length-1);\n                let num2= item[dataIndex4].substring(0,item[dataIndex4].length-1);\n                item.QDifferent = Number(num2-num1).toFixed(2)+ '%';\n                item.QonQ = Number((num2-num1)/num1).toFixed(2)+ '%';\n            }else if(item[dataIndex3] !=='-' && item[dataIndex4] =='-' ){\n                let num1= item[dataIndex3].substring(0,item[dataIndex3].length-1);\n                item.QDifferent = Number(0-num1).toFixed(2)+ '%';\n                item.QonQ = Number((0-num1)/num1).toFixed(2)+ '%';\n            } else if (item[dataIndex3] =='-' && item[dataIndex4] !=='-' ){\n                let num2= item[dataIndex4].substring(0,item[dataIndex4].length-1);\n                item.QDifferent = Number(num2-0).toFixed(2)+ '%';\n                item.QonQ = '-';\n            }else{\n                item.QDifferent='-'\n                item.QonQ='-'\n            }\n        }\n        if(item.children && item.children.length){\n            dealDifferentData(item.children)\n        }\n    })\n    \n    return {arr,keyArr}\n};\n// 时间选择器开关\nconst changeVisible = (e,flag)=>{\n    if(flag =='MB'){\n        if(e){\n                monthBeforeIcon.value = 'caret-down'\n        }else{\n            monthBeforeIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='MA'){\n        if(e){\n                monthAfterIcon.value = 'caret-down'\n        }else{\n            monthAfterIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='QB'){\n        if(e){\n                QBeforeIcon.value = 'caret-down'\n        }else{\n            QBeforeIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='QA'){\n        if(e){\n            QAfterIcon.value = 'caret-down'\n        }else{\n            QAfterIcon.value = 'caret-right'\n        }\n    }\n}\n// 处理月份标题\nconst dealMonthTitle = (e,flag)=>{\n    let str = e.substr(e.length - 2);\n    let num =''\n    if(str.substr(0,1)==0){\n        num = str.substr(1)\n    }else{\n        num = str\n    }\n    props.columns.forEach(item=>{\n        // 确定是month表头\n        if(item.dataIndex.substr(0,5)=='month'){\n            // 选择的月份 == 折叠表格的某个表头\n            if(num == item.dataIndex.substr(5)){\n                // 对应的表头更换\n                dataContent.columns.forEach(ele=>{\n                    if(flag =='MB'){\n                        if(ele.titleSlotName == 'monthBefore'){\n                            ele.dataIndex = item.dataIndex;\n                            ele.title = num +'月';\n                            ele.days = item.days;\n                        }\n                        if(ele.dataIndex =='monthDifferent'){\n                            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                            parts[1] = num; // 替换'-'后的数字  \n                            ele.title = parts.join('-')+'月'; // 将两部分重新组合为字符串，并用'-'连接\n                        }\n                    }\n                    if(flag =='MA'){\n                        if(ele.titleSlotName == 'monthAfter'){\n                            ele.dataIndex = item.dataIndex;\n                            ele.title = num +'月';\n                            ele.days = item.days;\n                        }\n                        if(ele.dataIndex =='monthDifferent'){\n                            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                            parts[0] = num; // 替换'-'前的数字  \n                            ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n                        }\n                    }\n                })\n            }\n        }\n    })\n    dataContent.dataSourse = dealDifferentData(props.data).arr;\n};\n// 处理季度标题\nconst dealQTitle = (e,flag)=>{\n    let str = e.substr(e.length - 2);\n    let num =''\n    if(str.substr(0,1)==0){\n        num = str.substr(1)\n    }else{\n        num = str\n    }\n    const  QList = [\n        {\n            label:'1',\n            value:'Q1'\n        },\n        {\n            label:'4',\n            value:'Q2'\n        },\n        {\n            label:'7',\n            value:'Q3'\n        },\n        {\n            label:'10',\n            value:'Q4'\n        },\n    ]\n    // 对应的表头更换\n    dataContent.columns.forEach(ele=>{\n        if(flag =='QB'){\n            if(ele.titleSlotName == 'QBefore'){\n                //num对应的Q\n                ele.title = ele.dataIndex = QList.filter(item=>item.label == num)[0].value;\n            }\n            if(ele.dataIndex =='QDifferent'){\n                const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                parts[1] = QList.filter(item=>item.label == num)[0].value; // 替换'-'后的数字\n                ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n            }\n        }\n        if(flag =='QA'){\n            if(ele.titleSlotName == 'QAfter'){\n                ele.title = ele.dataIndex = QList.filter(item=>item.label == num)[0].value;\n            }\n            if(ele.dataIndex =='QDifferent'){\n                const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                parts[0] = QList.filter(item=>item.label == num)[0].value; // 替换'-'前的数字  \n                ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n            }\n        }\n    })\n    dataContent.dataSourse = dealDifferentData(props.data).arr;\n};\n// 更改时间\nconst changeTime=(e,flag)=>{\n    if(flag == 'MB'){\n        monthBeforeValue.value = e;\n        dealMonthTitle(e,flag);\n    }\n    if(flag == 'MA'){\n        monthAfterValue.value = e;\n        dealMonthTitle(e,flag);\n    }\n    if(flag == 'QA'){\n        QAfterValue.value = e;\n        dealQTitle(e,flag)\n    }\n    if(flag == 'QB'){\n        QBeforeValue.value = e;\n        dealQTitle(e,flag)\n    }\n};\n// 关闭\nconst handleClose = ()=>{\n    emit(\"handleClose\", false);\n};\n//单行高亮处理\nconst activeRowClass = (record) => {\n    if(record.raw.isGreenLight){\n        return 'activeRowGreen'\n    }else if(record.raw.isRate){\n        return 'activeRowPurple'\n    }else{\n        return ''\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.activeRowGreen > .arco-table-td) {\n    background-color: rgb(234, 248, 243) !important;\n}\n:deep(.activeRowPurple > .arco-table-td) {\n    background-color: rgb(240, 237, 248) !important;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}