{"ast":null,"code":"/**\n * @fileoverview 矩形\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { parseRadius } from '../util/parse';\nimport { inBox } from '../util/util';\nimport inRect from '../util/in-stroke/rect';\nimport inRectWithRadius from '../util/in-stroke/rect-radius';\nimport isPointInPath from '../util/in-path/point-in-path';\nvar Rect = /** @class */function (_super) {\n  __extends(Rect, _super);\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Rect.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      radius: 0\n    });\n  };\n  Rect.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var attrs = this.attr();\n    var minX = attrs.x;\n    var minY = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    // 无圆角时的策略\n    if (!radius) {\n      var halfWidth = lineWidth / 2;\n      // 同时填充和带有边框\n      if (isFill && isStroke) {\n        return inBox(minX - halfWidth, minY - halfWidth, width + halfWidth, height + halfWidth, x, y);\n      }\n      // 仅填充\n      if (isFill) {\n        return inBox(minX, minY, width, height, x, y);\n      }\n      if (isStroke) {\n        return inRect(minX, minY, width, height, lineWidth, x, y);\n      }\n    } else {\n      var isHit = false;\n      if (isStroke) {\n        isHit = inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y);\n      }\n      // 仅填充时带有圆角的矩形直接通过图形拾取\n      // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n      if (!isHit && isFill) {\n        isHit = isPointInPath(this, x, y);\n      }\n      return isHit;\n    }\n  };\n  Rect.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    context.beginPath();\n    if (radius === 0) {\n      // 改成原生的rect方法\n      context.rect(x, y, width, height);\n    } else {\n      var _a = parseRadius(radius),\n        r1 = _a[0],\n        r2 = _a[1],\n        r3 = _a[2],\n        r4 = _a[3];\n      context.moveTo(x + r1, y);\n      context.lineTo(x + width - r2, y);\n      r2 !== 0 && context.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n      context.lineTo(x + width, y + height - r3);\n      r3 !== 0 && context.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n      context.lineTo(x + r4, y + height);\n      r4 !== 0 && context.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n      context.lineTo(x, y + r1);\n      r1 !== 0 && context.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n      context.closePath();\n    }\n  };\n  return Rect;\n}(ShapeBase);\nexport default Rect;","map":{"version":3,"mappings":"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","names":["ShapeBase","parseRadius","inBox","inRect","inRectWithRadius","isPointInPath","__extends","Rect","attrs","_super","getDefaultAttrs","x","y","width","height","radius","isStroke","isFill","lineWidth","attr","minX","minY","halfWidth","isHit","context","beginPath","rect","r1","r2","r3","r4","moveTo","lineTo","arc","Math","PI","closePath"],"sourceRoot":"","sources":["../../src/shape/rect.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}