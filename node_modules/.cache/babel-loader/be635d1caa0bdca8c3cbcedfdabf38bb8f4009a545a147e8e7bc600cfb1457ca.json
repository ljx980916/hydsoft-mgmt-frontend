{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { AbstractCanvas } from '@antv/g-base';\nimport { SHAPE_TO_TAGS } from './constant';\nimport { drawChildren } from './util/draw';\nimport { setTransform, setClip } from './util/svg';\nimport { sortDom, createSVGElement } from './util/dom';\nimport * as Shape from './shape';\nimport Group from './group';\nimport Defs from './defs';\nvar Canvas = /** @class */function (_super) {\n  __extends(Canvas, _super);\n  function Canvas(cfg) {\n    return _super.call(this, __assign(__assign({}, cfg), {\n      autoDraw: true,\n      // 设置渲染引擎为 canvas，只读属性\n      renderer: 'svg'\n    })) || this;\n  }\n  Canvas.prototype.getShapeBase = function () {\n    return Shape;\n  };\n  Canvas.prototype.getGroupBase = function () {\n    return Group;\n  };\n  // 覆盖 Container 中通过遍历的方式获取 shape 对象的逻辑，直接走 SVG 的 dom 拾取即可\n  Canvas.prototype.getShape = function (x, y, ev) {\n    var target = ev.target || ev.srcElement;\n    if (!SHAPE_TO_TAGS[target.tagName]) {\n      var parent_1 = target.parentNode;\n      while (parent_1 && !SHAPE_TO_TAGS[parent_1.tagName]) {\n        parent_1 = parent_1.parentNode;\n      }\n      target = parent_1;\n    }\n    return this.find(function (child) {\n      return child.get('el') === target;\n    });\n  };\n  // 复写基类的方法生成标签\n  Canvas.prototype.createDom = function () {\n    var element = createSVGElement('svg');\n    var context = new Defs(element);\n    element.setAttribute('width', \"\" + this.get('width'));\n    element.setAttribute('height', \"\" + this.get('height'));\n    // 缓存 context 对象\n    this.set('context', context);\n    return element;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n  Canvas.prototype.onCanvasChange = function (changeType) {\n    var context = this.get('context');\n    var el = this.get('el');\n    if (changeType === 'sort') {\n      var children_1 = this.get('children');\n      if (children_1 && children_1.length) {\n        sortDom(this, function (a, b) {\n          return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n        });\n      }\n    } else if (changeType === 'clear') {\n      // el maybe null for canvas\n      if (el) {\n        // 清空 SVG 元素\n        el.innerHTML = '';\n        var defsEl = context.el;\n        // 清空 defs 元素\n        defsEl.innerHTML = '';\n        // 将清空后的 defs 元素挂载到 el 下\n        el.appendChild(defsEl);\n      }\n    } else if (changeType === 'matrix') {\n      setTransform(this);\n    } else if (changeType === 'clip') {\n      setClip(this, context);\n    } else if (changeType === 'changeSize') {\n      el.setAttribute('width', \"\" + this.get('width'));\n      el.setAttribute('height', \"\" + this.get('height'));\n    }\n  };\n  // 复写基类的 draw 方法\n  Canvas.prototype.draw = function () {\n    var context = this.get('context');\n    var children = this.getChildren();\n    setClip(this, context);\n    if (children.length) {\n      drawChildren(context, children);\n    }\n  };\n  return Canvas;\n}(AbstractCanvas);\nexport default Canvas;","map":{"version":3,"mappings":"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","names":["AbstractCanvas","SHAPE_TO_TAGS","drawChildren","setTransform","setClip","sortDom","createSVGElement","Shape","Group","Defs","__extends","cfg","_super","autoDraw","renderer","Canvas","x","y","ev","target","srcElement","tagName","parent_1","parentNode","find","child","get","element","context","setAttribute","set","changeType","el","children_1","length","a","b","indexOf","innerHTML","defsEl","appendChild","children","getChildren"],"sourceRoot":"","sources":["../src/canvas.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}