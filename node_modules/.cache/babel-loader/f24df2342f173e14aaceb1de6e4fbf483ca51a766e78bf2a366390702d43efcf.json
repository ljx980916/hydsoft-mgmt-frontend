{"ast":null,"code":"/**\n * @fileoverview shadow\n * @author dengfuping_develop@163.com\n */\nimport { each, uniqueId } from '@antv/util';\nimport { createSVGElement } from '../util/dom';\nvar ATTR_MAP = {\n  shadowColor: 'color',\n  shadowOpacity: 'opacity',\n  shadowBlur: 'blur',\n  shadowOffsetX: 'dx',\n  shadowOffsetY: 'dy'\n};\nvar SHADOW_DIMENSION = {\n  x: '-40%',\n  y: '-40%',\n  width: '200%',\n  height: '200%'\n};\nvar Shadow = /** @class */function () {\n  function Shadow(cfg) {\n    this.type = 'filter';\n    this.cfg = {};\n    this.type = 'filter';\n    var el = createSVGElement('filter');\n    // expand the filter region to fill in shadows\n    each(SHADOW_DIMENSION, function (v, k) {\n      el.setAttribute(k, v);\n    });\n    this.el = el;\n    this.id = uniqueId('filter_');\n    this.el.id = this.id;\n    this.cfg = cfg;\n    this._parseShadow(cfg, el);\n    return this;\n  }\n  Shadow.prototype.match = function (type, cfg) {\n    if (this.type !== type) {\n      return false;\n    }\n    var flag = true;\n    var config = this.cfg;\n    each(Object.keys(config), function (attr) {\n      if (config[attr] !== cfg[attr]) {\n        flag = false;\n        return false;\n      }\n    });\n    return flag;\n  };\n  Shadow.prototype.update = function (name, value) {\n    var config = this.cfg;\n    config[ATTR_MAP[name]] = value;\n    this._parseShadow(config, this.el);\n    return this;\n  };\n  Shadow.prototype._parseShadow = function (config, el) {\n    var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n    el.innerHTML = child;\n  };\n  return Shadow;\n}();\nexport default Shadow;","map":{"version":3,"mappings":"AAAA;;;;AAKA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,YAAY;AAC3C,SAASC,gBAAgB,QAAQ,aAAa;AAE9C,IAAMC,QAAQ,GAAG;EACfC,WAAW,EAAE,OAAO;EACpBC,aAAa,EAAE,SAAS;EACxBC,UAAU,EAAE,MAAM;EAClBC,aAAa,EAAE,IAAI;EACnBC,aAAa,EAAE;CAChB;AAED,IAAMC,gBAAgB,GAAG;EACvBC,CAAC,EAAE,MAAM;EACTC,CAAC,EAAE,MAAM;EACTC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;CACT;AAED;EAQE,gBAAYC,GAAG;IAPf,SAAI,GAAW,QAAQ;IAGvB,QAAG,GAEC,EAAE;IAGJ,IAAI,CAACC,IAAI,GAAG,QAAQ;IACpB,IAAMC,EAAE,GAAGd,gBAAgB,CAAC,QAAQ,CAAqB;IACzD;IACAF,IAAI,CAACS,gBAAgB,EAAE,UAACQ,CAAC,EAAEC,CAAC;MAC1BF,EAAE,CAACG,YAAY,CAACD,CAAC,EAAED,CAAC,CAAC;IACvB,CAAC,CAAC;IACF,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACI,EAAE,GAAGnB,QAAQ,CAAC,SAAS,CAAC;IAC7B,IAAI,CAACe,EAAE,CAACI,EAAE,GAAG,IAAI,CAACA,EAAE;IACpB,IAAI,CAACN,GAAG,GAAGA,GAAG;IACd,IAAI,CAACO,YAAY,CAACP,GAAG,EAAEE,EAAE,CAAC;IAC1B,OAAO,IAAI;EACb;EAEAM,sBAAK,GAAL,UAAMP,IAAI,EAAED,GAAG;IACb,IAAI,IAAI,CAACC,IAAI,KAAKA,IAAI,EAAE;MACtB,OAAO,KAAK;;IAEd,IAAIQ,IAAI,GAAG,IAAI;IACf,IAAMC,MAAM,GAAG,IAAI,CAACV,GAAG;IACvBd,IAAI,CAACyB,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,EAAE,UAACG,IAAI;MAC7B,IAAIH,MAAM,CAACG,IAAI,CAAC,KAAKb,GAAG,CAACa,IAAI,CAAC,EAAE;QAC9BJ,IAAI,GAAG,KAAK;QACZ,OAAO,KAAK;;IAEhB,CAAC,CAAC;IACF,OAAOA,IAAI;EACb,CAAC;EAEDD,uBAAM,GAAN,UAAOM,IAAI,EAAEC,KAAK;IAChB,IAAML,MAAM,GAAG,IAAI,CAACV,GAAG;IACvBU,MAAM,CAACrB,QAAQ,CAACyB,IAAI,CAAC,CAAC,GAAGC,KAAK;IAC9B,IAAI,CAACR,YAAY,CAACG,MAAM,EAAE,IAAI,CAACR,EAAE,CAAC;IAClC,OAAO,IAAI;EACb,CAAC;EAEDM,6BAAY,GAAZ,UAAaE,MAAM,EAAER,EAAE;IACrB,IAAMc,KAAK,GAAG,gCACNN,MAAM,CAACO,EAAE,IAAI,CAAC,yBACdP,MAAM,CAACQ,EAAE,IAAI,CAAC,mCACJR,MAAM,CAACS,IAAI,GAAGT,MAAM,CAACS,IAAI,GAAG,EAAE,GAAG,CAAC,kCACnCT,MAAM,CAACU,KAAK,GAAGV,MAAM,CAACU,KAAK,GAAG,MAAM,oCAClCV,MAAM,CAACW,OAAO,GAAGX,MAAM,CAACW,OAAO,GAAG,CAAC,kBACjD;IACLnB,EAAE,CAACoB,SAAS,GAAGN,KAAK;EACtB,CAAC;EACH,aAAC;AAAD,CAAC,EAvDD;AAyDA,eAAeR,MAAM","names":["each","uniqueId","createSVGElement","ATTR_MAP","shadowColor","shadowOpacity","shadowBlur","shadowOffsetX","shadowOffsetY","SHADOW_DIMENSION","x","y","width","height","cfg","type","el","v","k","setAttribute","id","_parseShadow","Shadow","flag","config","Object","keys","attr","name","value","child","dx","dy","blur","color","opacity","innerHTML"],"sourceRoot":"","sources":["../../src/defs/shadow.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}