{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __assign, __extends } from \"tslib\";\nimport { Cubic as CubicUtil } from '@antv/g-math';\nimport { each, isNil } from '@antv/util';\nimport ShapeBase from './base';\nimport { path2Absolute, path2Segments } from '@antv/path-util';\nimport { drawPath } from '../util/draw';\nimport isPointInPath from '../util/in-path/point-in-path';\nimport isInPolygon from '../util/in-path/polygon';\nimport PathUtil from '../util/path';\nimport * as ArrowUtil from '../util/arrow';\n// 是否在多个多边形内部\nfunction isInPolygons(polygons, x, y) {\n  var isHit = false;\n  for (var i = 0; i < polygons.length; i++) {\n    var points = polygons[i];\n    isHit = isInPolygon(points, x, y);\n    if (isHit) {\n      break;\n    }\n  }\n  return isHit;\n}\nvar Path = /** @class */function (_super) {\n  __extends(Path, _super);\n  function Path() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Path.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  };\n  Path.prototype.initAttrs = function (attrs) {\n    this._setPathArr(attrs.path);\n    this.setArrow();\n  };\n  // 更新属性时，检测是否更改了 path\n  Path.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    if (name === 'path') {\n      this._setPathArr(value);\n    }\n    // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n    this.setArrow();\n  };\n  // 将 path 转换成绝对路径\n  Path.prototype._setPathArr = function (path) {\n    // 转换 path 的格式\n    this.attrs.path = path2Absolute(path);\n    var hasArc = PathUtil.hasArc(path);\n    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n    this.set('hasArc', hasArc);\n    this.set('paramsCache', {}); // 清理缓存\n    this.set('segments', null); // 延迟生成 path，在动画场景下可能不会有拾取\n    this.set('curve', null);\n    this.set('tCache', null);\n    this.set('totalLength', null);\n  };\n  Path.prototype.getSegments = function () {\n    var segments = this.get('segements');\n    if (!segments) {\n      segments = path2Segments(this.attr('path'));\n      this.set('segments', segments);\n    }\n    return segments;\n  };\n  Path.prototype.setArrow = function () {\n    var attrs = this.attr();\n    var startArrow = attrs.startArrow,\n      endArrow = attrs.endArrow;\n    if (startArrow) {\n      var tangent = this.getStartTangent();\n      ArrowUtil.addStartArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\n    }\n    if (endArrow) {\n      var tangent = this.getEndTangent();\n      ArrowUtil.addEndArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\n    }\n  };\n  Path.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var segments = this.getSegments();\n    var hasArc = this.get('hasArc');\n    var isHit = false;\n    if (isStroke) {\n      var length_1 = this.getTotalLength();\n      isHit = PathUtil.isPointInStroke(segments, lineWidth, x, y, length_1);\n    }\n    if (!isHit && isFill) {\n      if (hasArc) {\n        // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割\n        isHit = isPointInPath(this, x, y);\n      } else {\n        var path = this.attr('path');\n        var extractResutl = PathUtil.extractPolygons(path);\n        // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理\n        isHit = isInPolygons(extractResutl.polygons, x, y) || isInPolygons(extractResutl.polylines, x, y);\n      }\n    }\n    return isHit;\n  };\n  Path.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var paramsCache = this.get('paramsCache'); // 由于计算圆弧的参数成本很大，所以要缓存\n    drawPath(this, context, attrs, paramsCache);\n  };\n  Path.prototype.afterDrawPath = function (context) {\n    var startArrowShape = this.get('startArrowShape');\n    var endArrowShape = this.get('endArrowShape');\n    if (startArrowShape) {\n      startArrowShape.draw(context);\n    }\n    if (endArrowShape) {\n      endArrowShape.draw(context);\n    }\n  };\n  /**\n   * Get total length of path\n   * @return {number} length\n   */\n  Path.prototype.getTotalLength = function () {\n    var totalLength = this.get('totalLength');\n    if (!isNil(totalLength)) {\n      return totalLength;\n    }\n    this._calculateCurve();\n    this._setTcache();\n    return this.get('totalLength');\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  Path.prototype.getPoint = function (ratio) {\n    var tCache = this.get('tCache');\n    if (!tCache) {\n      this._calculateCurve();\n      this._setTcache();\n      tCache = this.get('tCache');\n    }\n    var subt;\n    var index;\n    var curve = this.get('curve');\n    if (!tCache || tCache.length === 0) {\n      if (curve) {\n        return {\n          x: curve[0][1],\n          y: curve[0][2]\n        };\n      }\n      return null;\n    }\n    each(tCache, function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    var seg = curve[index];\n    if (isNil(seg) || isNil(index)) {\n      return null;\n    }\n    var l = seg.length;\n    var nextSeg = curve[index + 1];\n    return CubicUtil.pointAt(seg[l - 2], seg[l - 1], nextSeg[1], nextSeg[2], nextSeg[3], nextSeg[4], nextSeg[5], nextSeg[6], subt);\n  };\n  Path.prototype._calculateCurve = function () {\n    var path = this.attr().path;\n    this.set('curve', PathUtil.pathToCurve(path));\n  };\n  Path.prototype._setTcache = function () {\n    var totalLength = 0;\n    var tempLength = 0;\n    // 每段 curve 对应起止点的长度比例列表，形如: [[0, 0.25], [0.25, 0.6]. [0.6, 0.9], [0.9, 1]]\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    var segmentN;\n    var l;\n    var curve = this.get('curve');\n    if (!curve) {\n      return;\n    }\n    each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n      if (segmentN) {\n        totalLength += CubicUtil.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]) || 0;\n      }\n    });\n    this.set('totalLength', totalLength);\n    if (totalLength === 0) {\n      this.set('tCache', []);\n      return;\n    }\n    each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n      if (segmentN) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = CubicUtil.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]);\n        // 当 path 不连续时，segmentL 可能为空，为空时需要作为 0 处理\n        tempLength += segmentL || 0;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  };\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n  Path.prototype.getStartTangent = function () {\n    var segments = this.getSegments();\n    var result;\n    if (segments.length > 1) {\n      var startPoint = segments[0].currentPoint;\n      var endPoint = segments[1].currentPoint;\n      var tangent = segments[1].startTangent;\n      result = [];\n      if (tangent) {\n        result.push([startPoint[0] - tangent[0], startPoint[1] - tangent[1]]);\n        result.push([startPoint[0], startPoint[1]]);\n      } else {\n        result.push([endPoint[0], endPoint[1]]);\n        result.push([startPoint[0], startPoint[1]]);\n      }\n    }\n    return result;\n  };\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n  Path.prototype.getEndTangent = function () {\n    var segments = this.getSegments();\n    var length = segments.length;\n    var result;\n    if (length > 1) {\n      var startPoint = segments[length - 2].currentPoint;\n      var endPoint = segments[length - 1].currentPoint;\n      var tangent = segments[length - 1].endTangent;\n      result = [];\n      if (tangent) {\n        result.push([endPoint[0] - tangent[0], endPoint[1] - tangent[1]]);\n        result.push([endPoint[0], endPoint[1]]);\n      } else {\n        result.push([startPoint[0], startPoint[1]]);\n        result.push([endPoint[0], endPoint[1]]);\n      }\n    }\n    return result;\n  };\n  return Path;\n}(ShapeBase);\nexport default Path;","map":{"version":3,"mappings":"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","names":["Cubic","CubicUtil","each","isNil","ShapeBase","path2Absolute","path2Segments","drawPath","isPointInPath","isInPolygon","PathUtil","ArrowUtil","isInPolygons","polygons","x","y","isHit","i","length","points","__extends","Path","attrs","_super","getDefaultAttrs","startArrow","endArrow","_setPathArr","path","setArrow","name","value","originValue","onAttrChange","hasArc","set","segments","get","attr","tangent","getStartTangent","addStartArrow","getEndTangent","addEndArrow","isStroke","isFill","lineWidth","getSegments","length_1","getTotalLength","isPointInStroke","extractResutl","extractPolygons","polylines","context","paramsCache","startArrowShape","endArrowShape","draw","totalLength","_calculateCurve","_setTcache","ratio","tCache","subt","index","curve","v","seg","l","nextSeg","pointAt","pathToCurve","tempLength","segmentT","segmentL","segmentN","segment","push","result","startPoint","currentPoint","endPoint","startTangent","endTangent"],"sourceRoot":"","sources":["../../src/shape/path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}