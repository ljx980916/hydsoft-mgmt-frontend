{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"echartContainer\",\n    style: _normalizeStyle({\n      width: $props.width + 'px',\n      height: $props.height + 'px',\n      margin: '4px 0 -6px 0'\n    })\n  }, null, 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAAkH;IAA7GC,GAAG,EAAC,iBAAiB;IAAEC,KAAK;MAAAC,OAAWC,YAAK;MAAAC,QAAiBD,aAAM;MAAAE;IAAA","names":["_createElementBlock","ref","style","width","$props","height","margin"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/components/echartsContainer.vue"],"sourcesContent":["<template>\n  <div ref=\"echartContainer\" :style=\"{ width: width + 'px', height: height + 'px', margin : '4px 0 -6px 0' }\"></div>\n</template>\n\n<script setup>\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nconst props = defineProps({\n  // 折线路径数据\n  route: {\n    type: Array,\n    default: () => [],\n  },\n  height: {\n    type: Number,\n    default: 20,\n  },\n  width: {\n    type: Number,\n    default: 50,\n  },\n});\nconst echartContainer = ref(null);\nonMounted(() => {\n  var chartDom = echartContainer.value;\n  var myChart = echarts.init(chartDom);\n  var option;\n  option = {\n    xAxis: {\n      type: \"category\",\n      show: false,\n    },\n    yAxis: {\n      type: \"value\",\n      show: false,\n    },\n    tooltip: {\n      trigger: 'item',\n      position : 'top',\n      formatter: params=>{\n        return params.data?.name?.replaceAll('-','<br/>')\n      },\n      appendToBody: true\n    },\n    series: [\n      {\n        type: \"line\",\n        symbol: \"emptyCircle\",\n        symbolSize: 3,\n        itemStyle: {\n          color: \"#0770FF\",\n        },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: \"rgba(58,77,233,0.8)\",\n            },\n            {\n              offset: 1,\n              color: \"rgba(58,77,233,0.3)\",\n            },\n          ]),\n        },\n        data: props.route,\n      },\n    ],\n  };\n\n  option && myChart.setOption(option);\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}