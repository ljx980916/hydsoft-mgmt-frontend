{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFuncByUnknownType = exports.getFunc = exports.isFunction = void 0;\nvar _1 = require(\".\");\nvar number_1 = require(\"./number\");\nvar isFunction = function (val) {\n  return typeof val === 'function';\n};\nexports.isFunction = isFunction;\nvar getFunc = function (value, defaultValue, func) {\n  var resultFunc;\n  if (func) {\n    resultFunc = func;\n  } else if ((0, number_1.isNumber)(value)) {\n    resultFunc = function () {\n      return value;\n    };\n  } else {\n    resultFunc = function () {\n      return defaultValue;\n    };\n  }\n  return resultFunc;\n};\nexports.getFunc = getFunc;\nvar getFuncByUnknownType = function (defaultValue, value, resultIsNumber) {\n  if (resultIsNumber === void 0) {\n    resultIsNumber = true;\n  }\n  if (!value && value !== 0) {\n    return function (d) {\n      if (d.size) {\n        if ((0, _1.isArray)(d.size)) return d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n        if ((0, _1.isObject)(d.size)) return d.size.width > d.size.height ? d.size.width : d.size.height;\n        return d.size;\n      }\n      return defaultValue;\n    };\n  }\n  if ((0, exports.isFunction)(value)) {\n    return value;\n  }\n  if ((0, number_1.isNumber)(value)) {\n    return function () {\n      return value;\n    };\n  }\n  if ((0, _1.isArray)(value)) {\n    return function () {\n      if (resultIsNumber) {\n        var max = Math.max.apply(Math, value);\n        return isNaN(max) ? defaultValue : max;\n      }\n      return value;\n    };\n  }\n  if ((0, _1.isObject)(value)) {\n    return function () {\n      if (resultIsNumber) {\n        var max = Math.max(value.width, value.height);\n        return isNaN(max) ? defaultValue : max;\n      }\n      return [value.width, value.height];\n    };\n  }\n  return function () {\n    return defaultValue;\n  };\n};\nexports.getFuncByUnknownType = getFuncByUnknownType;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEO,IAAMA,UAAU,GAAG,UAACC,GAAY;EACrC,cAAOA,GAAG,KAAK,UAAU;AAAzB,CAAyB;AADdC,kBAAU;AAIhB,IAAMC,OAAO,GAAG,UACrBC,KAAa,EACbC,YAAoB,EACpBC,IAAwC;EAExC,IAAIC,UAAU;EACd,IAAID,IAAI,EAAE;IACRC,UAAU,GAAGD,IAAI;GAClB,MAAM,IAAI,qBAAQ,EAACF,KAAK,CAAC,EAAE;IAC1BG,UAAU,GAAG;MAAM,YAAK;IAAL,CAAK;GACzB,MAAM;IACLA,UAAU,GAAG;MAAM,mBAAY;IAAZ,CAAY;;EAEjC,OAAOA,UAAU;AACnB,CAAC;AAdYL,eAAO;AAgBb,IAAMM,oBAAoB,GAAG,UAClCH,YAAoB,EACpBD,KAAiG,EACjGK,cAA8B;EAA9B;IAAAA,qBAA8B;EAAA;EAE9B,IAAI,CAACL,KAAK,IAAIA,KAAK,KAAK,CAAC,EAAE;IACzB,OAAO,UAACM,CAAC;MACP,IAAIA,CAAC,CAACC,IAAI,EAAE;QACV,IAAI,cAAO,EAACD,CAAC,CAACC,IAAI,CAAC,EAAE,OAAOD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QACzE,IAAI,eAAQ,EAACD,CAAC,CAACC,IAAI,CAAC,EAAE,OAAOD,CAAC,CAACC,IAAI,CAACC,KAAK,GAAGF,CAAC,CAACC,IAAI,CAACE,MAAM,GAAGH,CAAC,CAACC,IAAI,CAACC,KAAK,GAAGF,CAAC,CAACC,IAAI,CAACE,MAAM;QACxF,OAAOH,CAAC,CAACC,IAAI;;MAEf,OAAON,YAAY;IACrB,CAAC;;EAEH,IAAI,sBAAU,EAACD,KAAK,CAAC,EAAE;IACrB,OAAOA,KAAK;;EAEd,IAAI,qBAAQ,EAACA,KAAK,CAAC,EAAE;IACnB,OAAO;MAAM,YAAK;IAAL,CAAK;;EAEpB,IAAI,cAAO,EAACA,KAAK,CAAC,EAAE;IAClB,OAAO;MACL,IAAIK,cAAc,EAAE;QAClB,IAAMK,GAAG,GAAGC,IAAI,CAACD,GAAG,OAARC,IAAI,EAASX,KAAkB,CAAC;QAC5C,OAAOY,KAAK,CAACF,GAAG,CAAC,GAAGT,YAAY,GAAGS,GAAG;;MAExC,OAAOV,KAAK;IACd,CAAC;;EAEH,IAAI,eAAQ,EAACA,KAAK,CAAC,EAAE;IACnB,OAAO;MACL,IAAIK,cAAc,EAAE;QAClB,IAAMK,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACV,KAAK,CAACQ,KAAK,EAAER,KAAK,CAACS,MAAM,CAAC;QAC/C,OAAOG,KAAK,CAACF,GAAG,CAAC,GAAGT,YAAY,GAAGS,GAAG;;MAExC,OAAO,CAACV,KAAK,CAACQ,KAAK,EAAER,KAAK,CAACS,MAAM,CAAC;IACpC,CAAC;;EAEH,OAAO;IAAM,mBAAY;EAAZ,CAAY;AAC3B,CAAC;AAxCYX,4BAAoB","names":["isFunction","val","exports","getFunc","value","defaultValue","func","resultFunc","getFuncByUnknownType","resultIsNumber","d","size","width","height","max","Math","isNaN"],"sourceRoot":"","sources":["../../src/util/function.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}