{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-780eddb8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"treeBox\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"dept\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"tree-org-node__text node-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue3_tree_org = _resolveComponent(\"vue3-tree-org\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_vue3_tree_org, {\n    data: $setup.treeData.data,\n    collapsable: true,\n    horizontal: false,\n    scalable: false,\n    draggable: false,\n    \"define-menus\": null,\n    \"default-expand-level\": Infinity,\n    toolBar: {\n      scale: false,\n      restore: false,\n      expand: false,\n      zoom: false,\n      fullscreen: false\n    },\n    onOnExpand: $setup.onExpand\n  }, {\n    default: _withCtx(({\n      node\n    }) => [node.$$data.isSubdivision ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n      name: \"g6Container\",\n      dept: node.$$data.dept,\n      class: \"g6Container\"\n    }, null, 8 /* PROPS */, _hoisted_3)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(node.label), 1 /* TEXT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_vue3_tree_org","data","$setup","treeData","collapsable","horizontal","scalable","draggable","Infinity","toolBar","scale","restore","expand","zoom","fullscreen","onOnExpand","onExpand","default","_withCtx","node","$$data","isSubdivision","_hoisted_2","_createElementVNode","name","dept","_hoisted_3","_hoisted_4","_toDisplayString","label","_"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/demo/organizationDemo.vue"],"sourcesContent":["<template>\n    <div class=\"treeBox\">\n        <vue3-tree-org\n            :data=\"treeData.data\"\n            :collapsable=\"true\"\n            :horizontal=\"false\"\n            :scalable=\"false\"\n            :draggable=\"false\"\n            :define-menus=\"null\"\n            :default-expand-level=\"Infinity\"\n            :toolBar=\"{ scale: false, restore: false, expand: false, zoom: false, fullscreen: false }\"\n            @on-expand=\"onExpand\"\n        >\n            <!-- 自定义节点内容 -->\n            <template v-slot=\"{node}\">\n                <div v-if=\"node.$$data.isSubdivision\">\n                    <div name=\"g6Container\" :dept=\"node.$$data.dept\" class=\"g6Container\"></div>\n                </div>\n                <div class=\"tree-org-node__text node-label\" v-else>\n                    {{ node.label }}\n                </div>\n            </template>\n        </vue3-tree-org>\n   </div>\n</template>\n\n<script setup>\nimport { onMounted, reactive,nextTick } from 'vue';\nimport { getDeptTree } from '../../api/organizationTree'\nimport { drawGraph } from './g6'\n\nconst treeRoot = {\n  id:1,\n  label:\"慧博云通科技股份有限公司\",\n  isSubdivision : false,\n  children : []\n}\nlet data = []\nconst treeData = reactive({\n    data : {\n      }\n})\n\nfunction setDataProperty(arr){\n  arr.forEach(item=>{\n    item.label = item.deptName\n    if(item.children && Array.isArray(item.children)){\n      setDataProperty(item.children)\n    }\n    if(item.parentId === null){\n      item.isRoot = true\n    }\n  })\n}\n\nconst asyncDrawGraph = async() => {\n  let depTreeData = await getDeptTree()\n  if(depTreeData.code === '200'){\n    let filterData = depTreeData.data.filter(item=>!((''+item.deptName).startsWith('FG')))\n    filterData.forEach(({ deptName })=>{\n      treeRoot.children.push({\n        id: deptName,\n        label:deptName, \n        isSubdivision : true,\n        dept : deptName\n      })\n    })\n    setDataProperty(filterData)\n    data = depTreeData.data\n    treeData.data = treeRoot\n  }\n \n  nextTick(()=>{\n        let nodes = document.getElementsByName('g6Container')\n        nodes.forEach(dom=>{\n            let dept = dom.getAttribute('dept')\n            let deptData = data.filter(item=>item.label===dept)\n            drawGraph(dom,deptData[0])\n        })\n    })\n}\nconst setNodeData = ()=>{\n  nextTick(()=>{\n        let nodes = document.getElementsByName('g6Container')\n        nodes.forEach(dom=>{\n            let dept = dom.getAttribute('dept')\n            let deptData = data.filter(item=>item.label===dept)\n            drawGraph(dom,deptData[0])\n        })\n    })\n}\nonMounted(()=>{\n  asyncDrawGraph()\n})\nconst onExpand = (e, data)=> {\n        setNodeData()\n    }\n\n</script>\n\n<style lang=\"scss\" scoped>\n.treeBox {\n  height: 100%;\n  display: flex;\n  :deep(.zm-tree-org .zm-draggable) {\n    position: static;\n    transform: translateY(0) !important;\n  }\n  :deep(.tree-org-node.is-leaf .tree-org-node__content .tree-org-node__inner){ \n    box-shadow: none;\n  }\n}\n.g6Container{\n    transform: translate(35%,-1.6%);\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;;EADxBC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;EAkBqBD,KAAK,EAAC;;;;uBAjBvBE,mBAAA,CAsBK,OAtBLC,UAsBK,GArBDC,YAAA,CAoBgBC,wBAAA;IAnBXC,IAAI,EAAEC,MAAA,CAAAC,QAAQ,CAACF,IAAI;IACnBG,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE,KAAK;IAChB,cAAY,EAAE,IAAI;IAClB,sBAAoB,EAAEC,QAAQ;IAC9BC,OAAO,EAAE;MAAAC,KAAA;MAAAC,OAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,UAAA;IAAA,CAA+E;IACxFC,UAAS,EAAEb,MAAA,CAAAc;;IAXxBC,OAAA,EAAAC,QAAA,CAegB,CAEM;MAHSC;IAAI,OACRA,IAAI,CAACC,MAAM,CAACC,aAAa,I,cAApCxB,mBAAA,CAEM,OAjBtByB,UAAA,GAgBoBC,mBAAA,CAA2E;MAAtEC,IAAI,EAAC,aAAa;MAAEC,IAAI,EAAEN,IAAI,CAACC,MAAM,CAACK,IAAI;MAAE9B,KAAK,EAAC;4BAhB3E+B,UAAA,E,oBAkBgB7B,mBAAA,CAEM,OAFN8B,UAEM,EAAAC,gBAAA,CADCT,IAAI,CAACU,KAAK,kB;IAnBjCC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}