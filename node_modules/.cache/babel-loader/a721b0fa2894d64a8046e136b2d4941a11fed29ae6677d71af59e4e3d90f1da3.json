{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_icon_plus = _resolveComponent(\"icon-plus\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_radio = _resolveComponent(\"a-radio\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_cascader = _resolveComponent(\"a-cascader\");\n  const _component_a_input_number = _resolveComponent(\"a-input-number\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 添加菜单 \"), $setup.permissions.includes('menu:add') ? (_openBlock(), _createBlock(_component_a_button, {\n    key: 0,\n    type: \"primary\",\n    onClick: $setup.handleAddMenu\n  }, {\n    icon: _withCtx(() => [_createVNode(_component_icon_plus)]),\n    default: _withCtx(() => [_createTextVNode(\"添加菜单\")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 表格内容 \"), _createVNode($setup[\"TableContainer\"], {\n    class: \"m-t-20\",\n    \"column-resizable\": \"\",\n    scroll: {\n      y: 600\n    },\n    scrollbar: false,\n    paginationTotal: $setup.dataContent.pagination.total,\n    paginationPageSize: $setup.dataContent.pagination.pageSize,\n    paginationCurrent: $setup.dataContent.pagination.pageNum,\n    loading: $setup.dataContent.loading,\n    tableColumns: $setup.dataContent.columns,\n    \"table-data\": $setup.dataContent.dataSource,\n    \"menu-name\": $setup.dataContent.menuName,\n    onHandleEdit: $setup.handleEditMenu,\n    onHandleDeleteMenu: $setup.handleDeleteMenu,\n    onPaginationCurrentChange: $setup.paginationCurrentChange,\n    onPaginationPageSizeChange: $setup.paginationPageSizeChange\n  }, null, 8 /* PROPS */, [\"paginationTotal\", \"paginationPageSize\", \"paginationCurrent\", \"loading\", \"tableColumns\", \"table-data\", \"menu-name\"]), _createCommentVNode(\" 添加菜单表单 \"), _createVNode(_component_a_modal, {\n    mask: true,\n    visible: $setup.addMenuModal,\n    \"onUpdate:visible\": _cache[7] || (_cache[7] = $event => $setup.addMenuModal = $event),\n    title: \"添加菜单\",\n    onOk: $setup.handleFormOk\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: $setup.form\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        field: \"类型\",\n        label: \"类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_radio_group, {\n          modelValue: $setup.form.type,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.type = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_radio, {\n            value: 0\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"目录\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_radio, {\n            value: 1\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"菜单\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_radio, {\n            value: 2\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"按钮\")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"菜单名称\",\n        label: \"菜单名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          type: \"text\",\n          placeholder: \"请输入菜单名称\",\n          modelValue: $setup.form.name,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"上级菜单\",\n        label: \"上级菜单\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_cascader, {\n          modelValue: $setup.form.parentId,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.parentId = $event),\n          options: $setup.casList,\n          expandTrigger: 'hover',\n          \"check-strictly\": \"\",\n          placeholder: \"请选择上级菜单\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"菜单URL\",\n        label: \"菜单URL\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          type: \"text\",\n          placeholder: \"请输入菜单路径\",\n          modelValue: $setup.form.url,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.url = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"授权标识\",\n        label: \"授权标识\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          type: \"text\",\n          placeholder: \"请输入授权标识\",\n          modelValue: $setup.form.perms,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.perms = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"排序号\",\n        label: \"排序号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input_number, {\n          placeholder: \"请输入排序号\",\n          modelValue: $setup.form.sort,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.sort = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        field: \"图标\",\n        label: \"图标\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          type: \"text\",\n          placeholder: \"请输入图标\",\n          modelValue: $setup.form.icon,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.form.icon = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","includes","_createBlock","_component_a_button","type","onClick","icon","_createVNode","_component_icon_plus","default","scroll","y","scrollbar","paginationTotal","pagination","total","paginationPageSize","pageSize","paginationCurrent","pageNum","loading","tableColumns","columns","dataSource","menuName","onHandleEdit","onHandleDeleteMenu","onPaginationCurrentChange","onPaginationPageSizeChange","_component_a_modal","mask","visible","title","onOk","_component_a_form","model","_component_a_form_item","field","label","_component_a_radio_group","_component_a_radio","value","_component_a_input","placeholder","name","_component_a_cascader","parentId","options","expandTrigger","url","perms","_component_a_input_number","sort"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/views/system/menuManage.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <!-- 添加菜单 -->\n    <a-button type=\"primary\" v-if=\"permissions.includes('menu:add')\" @click=\"handleAddMenu\">\n      <template #icon>\n        <icon-plus />\n      </template>\n      <template #default>添加菜单</template>\n    </a-button>\n    <!-- 表格内容 -->\n    <TableContainer\n      class=\"m-t-20\"\n      column-resizable\n      :scroll=\"{ y: 600 }\"\n      :scrollbar=\"false\"\n      :paginationTotal=\"dataContent.pagination.total\"\n      :paginationPageSize=\"dataContent.pagination.pageSize\"\n      :paginationCurrent=\"dataContent.pagination.pageNum\"\n      :loading=\"dataContent.loading\"\n      :tableColumns=\"dataContent.columns\"\n      :table-data=\"dataContent.dataSource\"\n      :menu-name=\"dataContent.menuName\"\n      @handleEdit=\"handleEditMenu\"\n      @handleDeleteMenu=\"handleDeleteMenu\"\n      @paginationCurrentChange=\"paginationCurrentChange\"\n      @paginationPageSizeChange=\"paginationPageSizeChange\"\n    ></TableContainer>\n    <!-- 添加菜单表单 -->\n    <a-modal :mask=\"true\" v-model:visible=\"addMenuModal\" title=\"添加菜单\" @ok=\"handleFormOk\">\n      <a-form :model=\"form\">\n        <a-form-item field=\"类型\" label=\"类型\">\n          <a-radio-group v-model=\"form.type\">\n            <a-radio :value=\"0\">目录</a-radio>\n            <a-radio :value=\"1\">菜单</a-radio>\n            <a-radio :value=\"2\">按钮</a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item field=\"菜单名称\" label=\"菜单名称\">\n          <a-input type=\"text\" placeholder=\"请输入菜单名称\" v-model=\"form.name\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"上级菜单\" label=\"上级菜单\">\n          <a-cascader\n            v-model=\"form.parentId\"\n            :options=\"casList\"\n            :expandTrigger=\"'hover'\"\n            check-strictly\n            placeholder=\"请选择上级菜单\"\n          />\n        </a-form-item>\n        <a-form-item field=\"菜单URL\" label=\"菜单URL\">\n          <a-input type=\"text\" placeholder=\"请输入菜单路径\" v-model=\"form.url\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"授权标识\" label=\"授权标识\">\n          <a-input type=\"text\" placeholder=\"请输入授权标识\" v-model=\"form.perms\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"排序号\" label=\"排序号\">\n          <a-input-number placeholder=\"请输入排序号\" v-model=\"form.sort\"></a-input-number>\n        </a-form-item>\n        <a-form-item field=\"图标\" label=\"图标\">\n          <a-input type=\"text\" placeholder=\"请输入图标\" v-model=\"form.icon\"></a-input>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref, toRaw, onBeforeMount } from \"vue\";\nimport { useMenuStore } from \"../../store/index\";\nimport { menuListColumns } from \"./constColumns\";\nimport { list, addList, editMenu, delMenu } from \"@/api/menu\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nimport { Message } from \"@arco-design/web-vue\";\nimport TableContainer from \"@/components/tableContainer.vue\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nconst menuStore = useMenuStore()\nconst permissions = menuStore.getPermission;\nonBeforeMount(() => {\n  $bus.emit(\"updateStructure\", [{ type: \"text\", color: \"#333\", msg: \"菜单列表\" }]);\n});\n// 表格配置信息\nconst dataContent = reactive({\n  columns: menuListColumns,\n  dataSource: [],\n  loading: false,\n  pagination: {\n    pageNum: 1,\n    pageSize: 10,\n    total: 0,\n  },\n  menuName: \"menu\",\n});\nconst addMenuModal = ref(false);\nconst form = reactive({\n  type: \"\",\n  name: \"\",\n  parentId: \"\",\n  url: \"\",\n  perms: \"\",\n  sort: undefined,\n  icon: \"\",\n});\nconst menuId = ref(\"\");\nconst casList = ref([]);\nconst treeData = arr => {\n  const treeArr = [];\n  arr.forEach(item => {\n    let obj = { label: item.name, value: item.id };\n    if (item.children && item.children.length) {\n      obj.children = treeData(item.children);\n      treeArr.push(obj);\n    } else {\n      treeArr.push(obj);\n    }\n  });\n  return treeArr;\n};\n// 获取列表数据\nconst getList = () => {\n  list().then(res => {\n    if (res.code === \"000000000000\") {\n      let arr = [];\n      res.data.forEach(item => {\n        item.children = [];\n        item.key = item.id;\n        if (item.parentId === \"000000\") {\n          arr.push(item);\n        }\n        res.data.forEach(val => {\n          if (val.parentId === item.id) {\n            item.children.push(val);\n          }\n        });\n      });\n      dataContent.dataSource = arr;\n      dataContent.pagination.total = Number(dataContent.dataSource.length);\n      casList.value = [\n        {\n          label: \"一级菜单\",\n          value: \"000000\",\n          children: treeData(arr.slice()),\n        },\n      ];\n    }\n  });\n};\ngetList();\n// 更改当前页码\nconst paginationCurrentChange = current => {\n  dataContent.pagination.pageNum = current;\n  getList();\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  dataContent.pagination.pageSize = pageSize;\n  getList();\n};\n// 添加菜单\nconst handleAddMenu = () => {\n  addMenuModal.value = true;\n  (form.type = \"\"),\n    (form.name = \"\"),\n    (form.parentId = \"\"),\n    (form.url = \"\"),\n    (form.perms = \"\"),\n    (form.sort = undefined),\n    (form.icon = \"\");\n};\n// 编辑\nconst handleEditMenu = record => {\n  addMenuModal.value = true;\n  menuId.value = record.id;\n  (form.type = record.type),\n    (form.name = record.name),\n    (form.parentId = record.parentId),\n    (form.url = record.url),\n    (form.perms = record.perms),\n    (form.sort = record.sort),\n    (form.icon = record.icon);\n};\n// 删除\nconst handleDeleteMenu = record => {\n  delMenu(record).then(res => {\n    if (res.code === \"000000000000\") {\n      Message.success(\"删除成功\");\n      getList();\n      $bus.emit(\"updateMenu\");\n      menuStore.menuSideBar().then(()=>{\n        Message.success(\"菜单已更新\");\n      })\n    } else {\n      Message.error(res.message);\n    }\n  });\n};\n// 添加菜单 确定\nconst handleFormOk = () => {\n  let values = toRaw(form);\n  values.id = menuId.value;\n  if (menuId.value === \"\") {\n    addList(values).then(res => {\n      if (res.code === \"000000000000\") {\n        Message.success(\"新建成功!\");\n        getList();\n        $bus.emit(\"updateMenu\");\n      } else {\n        Message.error(res.message);\n      }\n    });\n  } else {\n    editMenu(values).then(res => {\n      if (res.code === \"000000000000\") {\n        Message.success(\"更新成功!\");\n        getList();\n        $bus.emit(\"updateMenu\");\n      } else {\n        Message.error(res.message);\n      }\n    });\n    menuId.value = \"\";\n  }\n  menuStore.menuSideBar().then(()=>{\n    Message.success(\"菜单已更新\");\n  })\n};\n</script>\n\n<style lang=\"scss\">\n.m-t-20 {\n  margin-top: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}