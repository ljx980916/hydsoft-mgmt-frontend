{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, isVNode, mergeProps } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n  if (code) {\n    componentTags.push(\"code\");\n  }\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n  return componentTags;\n}\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return __spreadProps(__spreadValues({\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false,\n    css: false\n  }, omit(config, [\"showTooltip\"])), {\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  });\n}\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": text => true,\n    \"update:editText\": text => true,\n    \"editEnd\": () => true,\n    \"update:editing\": editing => true,\n    \"copy\": text => true,\n    \"ellipsis\": isEllipsis => true,\n    \"expand\": expanded => true\n  },\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n    function onEditEnd() {\n      if (!editing.value) return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n    const isCopied = ref(false);\n    let copyTimer = null;\n    function onCopyClick() {\n      var _a;\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n    function renderOperations(forceRenderExpand = false) {\n      if (ellipsisConfig.value.css) {\n        return createVNode(Operations, {\n          \"editable\": editable.value,\n          \"copyable\": copyable.value,\n          \"expandable\": ellipsisConfig.value.expandable,\n          \"isCopied\": isCopied.value,\n          \"isEllipsis\": showCSSTooltip.value,\n          \"expanded\": expanded.value,\n          \"forceRenderExpand\": forceRenderExpand || expanded.value,\n          \"editTooltipProps\": props.editTooltipProps,\n          \"copyTooltipProps\": props.copyTooltipProps,\n          \"onEdit\": onEditStart,\n          \"onCopy\": onCopyClick,\n          \"onExpand\": onExpandClick\n        }, {\n          \"copy-tooltip\": slots[\"copy-tooltip\"],\n          \"copy-icon\": slots[\"copy-icon\"],\n          \"expand-node\": slots[\"expand-node\"]\n        });\n      }\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n    function calEllipsis() {\n      if (!wrapperRef.value) return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        if (!ellipsisConfig.value.css) {\n          emit(\"ellipsis\", ellipsis2);\n        }\n      }\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis) return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, newVal => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    const contentRef = ref();\n    const showCSSTooltip = ref(false);\n    const calTooltip = () => {\n      if (wrapperRef.value && contentRef.value) {\n        const _show = contentRef.value.offsetHeight > wrapperRef.value.offsetHeight;\n        if (_show !== showCSSTooltip.value) {\n          showCSSTooltip.value = _show;\n          emit(\"ellipsis\", _show);\n        }\n      }\n    };\n    const ellipsisStyle = computed(() => {\n      if (expanded.value) {\n        return {};\n      }\n      return {\n        \"overflow\": \"hidden\",\n        \"text-overflow\": \"ellipsis\",\n        \"display\": \"-webkit-box\",\n        \"-webkit-line-clamp\": ellipsisConfig.value.rows,\n        \"-webkit-box-orient\": \"vertical\"\n      };\n    });\n    return () => {\n      var _a, _b;\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": text => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      if (ellipsisConfig.value.css) {\n        const Content2 = Wrap(props, children);\n        const Outer = createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef,\n          \"style\": ellipsisStyle.value\n        }, titleAttrs, attrs), {\n          default: () => [createVNode(\"span\", {\n            \"ref\": contentRef\n          }, [Content2])]\n        });\n        if (showCSSTooltip.value) {\n          return createVNode(TooltipComponent, mergeProps(tooltipProps, {\n            \"onResize\": () => calTooltip()\n          }), {\n            default: () => [Outer],\n            content: () => fullText.value\n          });\n        }\n        return createVNode(ResizeObserver, {\n          \"onResize\": () => {\n            calTooltip();\n          }\n        }, _isSlot(Outer) ? Outer : {\n          default: () => [Outer]\n        });\n      }\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n});\nexport { Base as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","defineComponent","toRefs","computed","ref","reactive","onUnmounted","watch","onMounted","onUpdated","createVNode","isVNode","mergeProps","getPrefixCls","isObject","EditContent","Operations","ResizeObserver","omit","useMergeState","measure","clipboard","getInnerText","caf","raf","Tooltip","Popover","_isSlot","s","toString","getComponentTags","props","bold","mark","underline","delete","propDelete","code","componentTags","push","Wrap","children","markStyle","color","backgroundColor","reduce","content","Tag","attrs","style","default","normalizeEllipsisConfig","config","showTooltip","TooltipComponent","type","tooltipProps","rows","suffix","ellipsisStr","expandable","css","Base","name","inheritAttrs","component","String","required","Boolean","disabled","editable","editing","defaultEditing","editText","copyable","copyText","copyDelay","Number","ellipsis","editTooltipProps","copyTooltipProps","emits","text","isEllipsis","expanded","setup","slots","emit","propEditing","prefixCls","classNames","wrapperRef","fullText","setEditing","mergeEditing","onEditStart","onEditChange","onEditEnd","isCopied","copyTimer","onCopyClick","_a","setTimeout","clearTimeout","ellipsisText","ellipsisConfig","rafId","onExpandClick","newVal","renderOperations","forceRenderExpand","showCSSTooltip","calEllipsis","ellipsis2","resizeOnNextFrame","needCalEllipsis","updateFullText","_fullText","contentRef","calTooltip","_show","offsetHeight","ellipsisStyle","_b","_editText","showEllipsis","titleAttrs","title","Component","Content2","Outer","Content"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/node_modules/@arco-design/web-vue/es/typography/base.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, isVNode, mergeProps } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n  if (code) {\n    componentTags.push(\"code\");\n  }\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n  return componentTags;\n}\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return __spreadProps(__spreadValues({\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false,\n    css: false\n  }, omit(config, [\"showTooltip\"])), {\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  });\n}\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": (text) => true,\n    \"update:editText\": (text) => true,\n    \"editEnd\": () => true,\n    \"update:editing\": (editing) => true,\n    \"copy\": (text) => true,\n    \"ellipsis\": (isEllipsis) => true,\n    \"expand\": (expanded) => true\n  },\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n    function onEditEnd() {\n      if (!editing.value)\n        return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n    const isCopied = ref(false);\n    let copyTimer = null;\n    function onCopyClick() {\n      var _a;\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n    function renderOperations(forceRenderExpand = false) {\n      if (ellipsisConfig.value.css) {\n        return createVNode(Operations, {\n          \"editable\": editable.value,\n          \"copyable\": copyable.value,\n          \"expandable\": ellipsisConfig.value.expandable,\n          \"isCopied\": isCopied.value,\n          \"isEllipsis\": showCSSTooltip.value,\n          \"expanded\": expanded.value,\n          \"forceRenderExpand\": forceRenderExpand || expanded.value,\n          \"editTooltipProps\": props.editTooltipProps,\n          \"copyTooltipProps\": props.copyTooltipProps,\n          \"onEdit\": onEditStart,\n          \"onCopy\": onCopyClick,\n          \"onExpand\": onExpandClick\n        }, {\n          \"copy-tooltip\": slots[\"copy-tooltip\"],\n          \"copy-icon\": slots[\"copy-icon\"],\n          \"expand-node\": slots[\"expand-node\"]\n        });\n      }\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n    function calEllipsis() {\n      if (!wrapperRef.value)\n        return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        if (!ellipsisConfig.value.css) {\n          emit(\"ellipsis\", ellipsis2);\n        }\n      }\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis)\n        return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, (newVal) => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    const contentRef = ref();\n    const showCSSTooltip = ref(false);\n    const calTooltip = () => {\n      if (wrapperRef.value && contentRef.value) {\n        const _show = contentRef.value.offsetHeight > wrapperRef.value.offsetHeight;\n        if (_show !== showCSSTooltip.value) {\n          showCSSTooltip.value = _show;\n          emit(\"ellipsis\", _show);\n        }\n      }\n    };\n    const ellipsisStyle = computed(() => {\n      if (expanded.value) {\n        return {};\n      }\n      return {\n        \"overflow\": \"hidden\",\n        \"text-overflow\": \"ellipsis\",\n        \"display\": \"-webkit-box\",\n        \"-webkit-line-clamp\": ellipsisConfig.value.rows,\n        \"-webkit-box-orient\": \"vertical\"\n      };\n    });\n    return () => {\n      var _a, _b;\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": (text) => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      if (ellipsisConfig.value.css) {\n        const Content2 = Wrap(props, children);\n        const Outer = createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef,\n          \"style\": ellipsisStyle.value\n        }, titleAttrs, attrs), {\n          default: () => [createVNode(\"span\", {\n            \"ref\": contentRef\n          }, [Content2])]\n        });\n        if (showCSSTooltip.value) {\n          return createVNode(TooltipComponent, mergeProps(tooltipProps, {\n            \"onResize\": () => calTooltip()\n          }), {\n            default: () => [Outer],\n            content: () => fullText.value\n          });\n        }\n        return createVNode(ResizeObserver, {\n          \"onResize\": () => {\n            calTooltip();\n          }\n        }, _isSlot(Outer) ? Outer : {\n          default: () => [Outer]\n        });\n      }\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n});\nexport { Base as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}