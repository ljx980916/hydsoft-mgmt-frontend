{"ast":null,"code":"import { arcToCubic } from './arc-2-cubic';\nimport { quadToCubic } from './quad-2-cubic';\nimport { lineToCubic } from './line-2-cubic';\nexport function segmentToCubic(segment, params) {\n  var pathCommand = segment[0];\n  var values = segment.slice(1).map(Number);\n  var x = values[0],\n    y = values[1];\n  var args;\n  var px1 = params.x1,\n    py1 = params.y1,\n    px = params.x,\n    py = params.y;\n  if (!'TQ'.includes(pathCommand)) {\n    params.qx = null;\n    params.qy = null;\n  }\n  switch (pathCommand) {\n    case 'M':\n      params.x = x;\n      params.y = y;\n      return segment;\n    case 'A':\n      args = [px1, py1].concat(values);\n      // @ts-ignore\n      return ['C'].concat(arcToCubic(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]));\n    case 'Q':\n      params.qx = x;\n      params.qy = y;\n      args = [px1, py1].concat(values);\n      // @ts-ignore\n      return ['C'].concat(quadToCubic(args[0], args[1], args[2], args[3], args[4], args[5]));\n    case 'L':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(px1, py1, x, y));\n    case 'Z':\n      // prevent NaN from divide 0\n      if (px1 === px && py1 === py) {\n        return ['C', px1, py1, px, py, px, py];\n      }\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(px1, py1, px, py));\n    default:\n  }\n  return segment;\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAM,SAAUC,cAAc,CAACC,OAAoB,EAAEC,MAAoB;EAChE,eAAW,GAAID,OAAO,GAAX;EAClB,IAAME,MAAM,GAAGF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EACpC,KAAC,GAAOH,MAAM,GAAb;IAAEI,CAAC,GAAIJ,MAAM,GAAV;EACX,IAAIK,IAAW;EACP,IAAIC,GAAG,GAA4BP,MAAM,GAAlC;IAAMQ,GAAG,GAAmBR,MAAM,GAAzB;IAAKS,EAAE,GAAYT,MAAM,EAAlB;IAAKU,EAAE,GAAKV,MAAM,EAAX;EAEtC,IAAI,CAAC,IAAI,CAACW,QAAQ,CAACC,WAAW,CAAC,EAAE;IAC/BZ,MAAM,CAACa,EAAE,GAAG,IAAI;IAChBb,MAAM,CAACc,EAAE,GAAG,IAAI;;EAGlB,QAAQF,WAAW;IACjB,KAAK,GAAG;MACNZ,MAAM,CAACe,CAAC,GAAGA,CAAC;MACZf,MAAM,CAACK,CAAC,GAAGA,CAAC;MACZ,OAAON,OAAO;IAChB,KAAK,GAAG;MACNO,IAAI,GAAG,CAACC,GAAG,EAAEC,GAAG,CAAC,CAACQ,MAAM,CAACf,MAAM,CAAC;MAChC;MACA,OAAO,CAAC,GAAG,CAAC,CAACe,MAAM,CACjBrB,UAAU,CAACW,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CACrF;IACnB,KAAK,GAAG;MACNN,MAAM,CAACa,EAAE,GAAGE,CAAC;MACbf,MAAM,CAACc,EAAE,GAAGT,CAAC;MACbC,IAAI,GAAG,CAACC,GAAG,EAAEC,GAAG,CAAC,CAACQ,MAAM,CAACf,MAAM,CAAC;MAChC;MACA,OAAO,CAAC,GAAG,CAAC,CAACe,MAAM,CAACpB,WAAW,CAACU,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAiB;IACxG,KAAK,GAAG;MACN;MACA,OAAO,CAAC,GAAG,CAAC,CAACU,MAAM,CAACnB,WAAW,CAACU,GAAG,EAAEC,GAAG,EAAEO,CAAC,EAAEV,CAAC,CAAC,CAAa;IAC9D,KAAK,GAAG;MACN;MACA,IAAIE,GAAG,KAAKE,EAAE,IAAID,GAAG,KAAKE,EAAE,EAAE;QAC5B,OAAO,CAAC,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAED,EAAE,EAAEC,EAAE,CAAC;;MAGxC;MACA,OAAO,CAAC,GAAG,CAAC,CAACM,MAAM,CAACnB,WAAW,CAACU,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAAa;IAChE;EAAQ;EAEV,OAAOX,OAAmB;AAC5B","names":["arcToCubic","quadToCubic","lineToCubic","segmentToCubic","segment","params","values","slice","map","Number","y","args","px1","py1","px","py","includes","pathCommand","qx","qy","x","concat"],"sourceRoot":"src/","sources":["path/process/segment-2-cubic.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}