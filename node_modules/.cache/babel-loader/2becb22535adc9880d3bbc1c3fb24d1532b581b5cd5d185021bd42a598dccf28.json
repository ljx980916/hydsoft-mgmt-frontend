{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { segmentLineFactory } from './segment-line-factory';\nimport { distanceSquareRoot } from './distance-square-root';\nfunction angleBetween(v0, v1) {\n  var v0x = v0.x,\n    v0y = v0.y;\n  var v1x = v1.x,\n    v1y = v1.y;\n  var p = v0x * v1x + v0y * v1y;\n  var n = Math.sqrt((Math.pow(v0x, 2) + Math.pow(v0y, 2)) * (Math.pow(v1x, 2) + Math.pow(v1y, 2)));\n  var sign = v0x * v1y - v0y * v1x < 0 ? -1 : 1;\n  var angle = sign * Math.acos(p / n);\n  return angle;\n}\n/**\n * Returns a {x,y} point at a given length, the total length and\n * the minimum and maximum {x,y} coordinates of a C (cubic-bezier) segment.\n * @see https://github.com/MadLittleMods/svg-curve-lib/blob/master/src/js/svg-curve-lib.js\n */\nfunction getPointAtArcSegmentLength(x1, y1, RX, RY, angle, LAF, SF, x, y, t) {\n  var abs = Math.abs,\n    sin = Math.sin,\n    cos = Math.cos,\n    sqrt = Math.sqrt,\n    PI = Math.PI;\n  var rx = abs(RX);\n  var ry = abs(RY);\n  var xRot = (angle % 360 + 360) % 360;\n  var xRotRad = xRot * (PI / 180);\n  if (x1 === x && y1 === y) {\n    return {\n      x: x1,\n      y: y1\n    };\n  }\n  if (rx === 0 || ry === 0) {\n    return segmentLineFactory(x1, y1, x, y, t).point;\n  }\n  var dx = (x1 - x) / 2;\n  var dy = (y1 - y) / 2;\n  var transformedPoint = {\n    x: cos(xRotRad) * dx + sin(xRotRad) * dy,\n    y: -sin(xRotRad) * dx + cos(xRotRad) * dy\n  };\n  var radiiCheck = Math.pow(transformedPoint.x, 2) / Math.pow(rx, 2) + Math.pow(transformedPoint.y, 2) / Math.pow(ry, 2);\n  if (radiiCheck > 1) {\n    rx *= sqrt(radiiCheck);\n    ry *= sqrt(radiiCheck);\n  }\n  var cSquareNumerator = Math.pow(rx, 2) * Math.pow(ry, 2) - Math.pow(rx, 2) * Math.pow(transformedPoint.y, 2) - Math.pow(ry, 2) * Math.pow(transformedPoint.x, 2);\n  var cSquareRootDenom = Math.pow(rx, 2) * Math.pow(transformedPoint.y, 2) + Math.pow(ry, 2) * Math.pow(transformedPoint.x, 2);\n  var cRadicand = cSquareNumerator / cSquareRootDenom;\n  cRadicand = cRadicand < 0 ? 0 : cRadicand;\n  var cCoef = (LAF !== SF ? 1 : -1) * sqrt(cRadicand);\n  var transformedCenter = {\n    x: cCoef * (rx * transformedPoint.y / ry),\n    y: cCoef * (-(ry * transformedPoint.x) / rx)\n  };\n  var center = {\n    x: cos(xRotRad) * transformedCenter.x - sin(xRotRad) * transformedCenter.y + (x1 + x) / 2,\n    y: sin(xRotRad) * transformedCenter.x + cos(xRotRad) * transformedCenter.y + (y1 + y) / 2\n  };\n  var startVector = {\n    x: (transformedPoint.x - transformedCenter.x) / rx,\n    y: (transformedPoint.y - transformedCenter.y) / ry\n  };\n  var startAngle = angleBetween({\n    x: 1,\n    y: 0\n  }, startVector);\n  var endVector = {\n    x: (-transformedPoint.x - transformedCenter.x) / rx,\n    y: (-transformedPoint.y - transformedCenter.y) / ry\n  };\n  var sweepAngle = angleBetween(startVector, endVector);\n  if (!SF && sweepAngle > 0) {\n    sweepAngle -= 2 * PI;\n  } else if (SF && sweepAngle < 0) {\n    sweepAngle += 2 * PI;\n  }\n  sweepAngle %= 2 * PI;\n  var alpha = startAngle + sweepAngle * t;\n  var ellipseComponentX = rx * cos(alpha);\n  var ellipseComponentY = ry * sin(alpha);\n  var point = {\n    x: cos(xRotRad) * ellipseComponentX - sin(xRotRad) * ellipseComponentY + center.x,\n    y: sin(xRotRad) * ellipseComponentX + cos(xRotRad) * ellipseComponentY + center.y\n  };\n  // to be used later\n  // point.ellipticalArcStartAngle = startAngle;\n  // point.ellipticalArcEndAngle = startAngle + sweepAngle;\n  // point.ellipticalArcAngle = alpha;\n  // point.ellipticalArcCenter = center;\n  // point.resultantRx = rx;\n  // point.resultantRy = ry;\n  return point;\n}\n/**\n * Returns a {x,y} point at a given length, the total length and\n * the shape minimum and maximum {x,y} coordinates of an A (arc-to) segment.\n *\n * For better performance, it can skip calculate bbox or length in some scenario.\n */\nexport function segmentArcFactory(X1, Y1, RX, RY, angle, LAF, SF, X2, Y2, distance, options) {\n  var _a;\n  var _b = options.bbox,\n    bbox = _b === void 0 ? true : _b,\n    _c = options.length,\n    length = _c === void 0 ? true : _c,\n    _d = options.sampleSize,\n    sampleSize = _d === void 0 ? 30 : _d;\n  var distanceIsNumber = typeof distance === 'number';\n  var x = X1;\n  var y = Y1;\n  var LENGTH = 0;\n  var prev = [x, y, LENGTH];\n  var cur = [x, y];\n  var t = 0;\n  var POINT = {\n    x: 0,\n    y: 0\n  };\n  var POINTS = [{\n    x: x,\n    y: y\n  }];\n  if (distanceIsNumber && distance <= 0) {\n    POINT = {\n      x: x,\n      y: y\n    };\n  }\n  // bad perf when size > 100\n  for (var j = 0; j <= sampleSize; j += 1) {\n    t = j / sampleSize;\n    _a = getPointAtArcSegmentLength(X1, Y1, RX, RY, angle, LAF, SF, X2, Y2, t), x = _a.x, y = _a.y;\n    if (bbox) {\n      POINTS.push({\n        x: x,\n        y: y\n      });\n    }\n    if (length) {\n      LENGTH += distanceSquareRoot(cur, [x, y]);\n    }\n    cur = [x, y];\n    if (distanceIsNumber && LENGTH >= distance && distance > prev[2]) {\n      var dv = (LENGTH - distance) / (LENGTH - prev[2]);\n      POINT = {\n        x: cur[0] * (1 - dv) + prev[0] * dv,\n        y: cur[1] * (1 - dv) + prev[1] * dv\n      };\n    }\n    prev = [x, y, LENGTH];\n  }\n  if (distanceIsNumber && distance >= LENGTH) {\n    POINT = {\n      x: X2,\n      y: Y2\n    };\n  }\n  return {\n    length: LENGTH,\n    point: POINT,\n    min: {\n      x: Math.min.apply(null, POINTS.map(function (n) {\n        return n.x;\n      })),\n      y: Math.min.apply(null, POINTS.map(function (n) {\n        return n.y;\n      }))\n    },\n    max: {\n      x: Math.max.apply(null, POINTS.map(function (n) {\n        return n.x;\n      })),\n      y: Math.max.apply(null, POINTS.map(function (n) {\n        return n.y;\n      }))\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["segmentLineFactory","distanceSquareRoot","angleBetween","v0","v1","v0x","v0y","v1x","v1y","p","n","Math","sqrt","sign","angle","acos","getPointAtArcSegmentLength","x1","y1","RX","RY","LAF","SF","x","y","t","sin","cos","PI","rx","abs","ry","xRot","xRotRad","point","dx","dy","transformedPoint","radiiCheck","cSquareNumerator","cSquareRootDenom","cRadicand","cCoef","transformedCenter","center","startVector","startAngle","endVector","sweepAngle","alpha","ellipseComponentX","ellipseComponentY","segmentArcFactory","X1","Y1","X2","Y2","distance","options","bbox","_c","length","_d","sampleSize","distanceIsNumber","LENGTH","prev","cur","POINT","POINTS","j","_a","push","dv","min","apply","map","max"],"sourceRoot":"src/","sources":["path/util/segment-arc-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}