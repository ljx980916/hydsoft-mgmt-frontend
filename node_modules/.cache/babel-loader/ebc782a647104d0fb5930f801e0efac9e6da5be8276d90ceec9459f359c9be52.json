{"ast":null,"code":"\"use strict\";\n\n// @ts-nocheck\n/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FruchtermanGPULayout = void 0;\nvar base_1 = require(\"../base\");\nvar util_1 = require(\"../../util\");\n// @ts-ignore\nvar g_webgpu_1 = require(\"@antv/g-webgpu\");\n// compile at runtime in dev mode\nvar gpu_1 = require(\"../../util/gpu\");\n// use compiled bundle in prod mode\nvar fruchtermanShader_1 = require(\"./fruchtermanShader\");\nvar constants_1 = require(\"../constants\");\n/**\n * fruchterman 布局\n */\nvar FruchtermanGPULayout = /** @class */function (_super) {\n  __extends(FruchtermanGPULayout, _super);\n  function FruchtermanGPULayout(options) {\n    var _this = _super.call(this) || this;\n    /** 停止迭代的最大迭代数 */\n    _this.maxIteration = 1000;\n    /** 重力大小，影响图的紧凑程度 */\n    _this.gravity = 10;\n    /** 速度 */\n    _this.speed = 1;\n    /** 是否产生聚类力 */\n    _this.clustering = false;\n    /** 根据哪个字段聚类 */\n    _this.clusterField = \"cluster\";\n    /** 聚类力大小 */\n    _this.clusterGravity = 10;\n    /** 是否启用web worker。前提是在web worker里执行布局，否则无效\t*/\n    _this.workerEnabled = false;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    _this.updateCfg(options);\n    return _this;\n  }\n  FruchtermanGPULayout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      gravity: 10,\n      speed: 1,\n      clustering: false,\n      clusterGravity: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n  FruchtermanGPULayout.prototype.execute = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var self, nodes, center, nodeMap, nodeIdxMap;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            self = this;\n            nodes = self.nodes;\n            if (!nodes || nodes.length === 0) {\n              if (self.onLayoutEnd) self.onLayoutEnd();\n              return [2 /*return*/];\n            }\n\n            if (!self.width && typeof window !== \"undefined\") {\n              self.width = window.innerWidth;\n            }\n            if (!self.height && typeof window !== \"undefined\") {\n              self.height = window.innerHeight;\n            }\n            if (!self.center) {\n              self.center = [self.width / 2, self.height / 2];\n            }\n            center = self.center;\n            if (nodes.length === 1) {\n              nodes[0].x = center[0];\n              nodes[0].y = center[1];\n              if (self.onLayoutEnd) self.onLayoutEnd();\n              return [2 /*return*/];\n            }\n\n            nodeMap = {};\n            nodeIdxMap = {};\n            nodes.forEach(function (node, i) {\n              if (!(0, util_1.isNumber)(node.x)) node.x = Math.random() * _this.width;\n              if (!(0, util_1.isNumber)(node.y)) node.y = Math.random() * _this.height;\n              nodeMap[node.id] = node;\n              nodeIdxMap[node.id] = i;\n            });\n            self.nodeMap = nodeMap;\n            self.nodeIdxMap = nodeIdxMap;\n            // layout\n            return [4 /*yield*/, self.run()];\n          case 1:\n            // layout\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  FruchtermanGPULayout.prototype.executeWithWorker = function (canvas, ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var self, nodes, center, nodeMap, nodeIdxMap;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            self = this;\n            nodes = self.nodes;\n            center = self.center;\n            if (!nodes || nodes.length === 0) {\n              return [2 /*return*/];\n            }\n\n            if (nodes.length === 1) {\n              nodes[0].x = center[0];\n              nodes[0].y = center[1];\n              return [2 /*return*/];\n            }\n\n            nodeMap = {};\n            nodeIdxMap = {};\n            nodes.forEach(function (node, i) {\n              if (!(0, util_1.isNumber)(node.x)) node.x = Math.random() * _this.width;\n              if (!(0, util_1.isNumber)(node.y)) node.y = Math.random() * _this.height;\n              nodeMap[node.id] = node;\n              nodeIdxMap[node.id] = i;\n            });\n            self.nodeMap = nodeMap;\n            self.nodeIdxMap = nodeIdxMap;\n            // layout\n            return [4 /*yield*/, self.run(canvas, ctx)];\n          case 1:\n            // layout\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  FruchtermanGPULayout.prototype.run = function (canvas, ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var self, nodes, edges, maxIteration, center, area, maxDisplace, k2, k, speed, clustering, _a, attributeArray, clusterCount, numParticles, _b, maxEdgePerVetex, nodesEdgesArray, workerEnabled, world, onLayoutEnd, clusterCenters, i, kernelFruchterman, kernelCluster, execute;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            self = this;\n            nodes = self.nodes;\n            edges = self.edges;\n            maxIteration = self.maxIteration;\n            center = self.center;\n            area = self.height * self.width;\n            maxDisplace = Math.sqrt(area) / 10;\n            k2 = area / (nodes.length + 1);\n            k = Math.sqrt(k2);\n            speed = self.speed;\n            clustering = self.clustering;\n            _a = (0, gpu_1.attributesToTextureData)([self.clusterField], nodes), attributeArray = _a.array, clusterCount = _a.count;\n            // pushing the fx and fy\n            nodes.forEach(function (node, i) {\n              var fx = 0;\n              var fy = 0;\n              if ((0, util_1.isNumber)(node.fx) && (0, util_1.isNumber)(node.fy)) {\n                fx = node.fx || 0.001;\n                fy = node.fy || 0.001;\n              }\n              attributeArray[4 * i + 1] = fx;\n              attributeArray[4 * i + 2] = fy;\n            });\n            numParticles = nodes.length;\n            _b = (0, gpu_1.buildTextureData)(nodes, edges), maxEdgePerVetex = _b.maxEdgePerVetex, nodesEdgesArray = _b.array;\n            workerEnabled = self.workerEnabled;\n            if (workerEnabled) {\n              world = g_webgpu_1.World.create({\n                canvas: canvas,\n                engineOptions: {\n                  supportCompute: true\n                }\n              });\n            } else {\n              world = g_webgpu_1.World.create({\n                engineOptions: {\n                  supportCompute: true\n                }\n              });\n            }\n            onLayoutEnd = self.onLayoutEnd;\n            clusterCenters = [];\n            for (i = 0; i < clusterCount; i++) {\n              clusterCenters.push(0, 0, 0, 0);\n            }\n            kernelFruchterman = world.createKernel(fruchtermanShader_1.fruchtermanBundle).setDispatch([numParticles, 1, 1]).setBinding({\n              u_Data: nodesEdgesArray,\n              u_K: k,\n              u_K2: k2,\n              u_Gravity: self.gravity,\n              u_ClusterGravity: self.clusterGravity || self.gravity || 1,\n              u_Speed: speed,\n              u_MaxDisplace: maxDisplace,\n              u_Clustering: clustering ? 1 : 0,\n              u_Center: center,\n              u_AttributeArray: attributeArray,\n              u_ClusterCenters: clusterCenters,\n              MAX_EDGE_PER_VERTEX: maxEdgePerVetex,\n              VERTEX_COUNT: numParticles\n            });\n            if (clustering) {\n              kernelCluster = world.createKernel(fruchtermanShader_1.clusterBundle).setDispatch([clusterCount, 1, 1]).setBinding({\n                u_Data: nodesEdgesArray,\n                u_NodeAttributes: attributeArray,\n                u_ClusterCenters: clusterCenters,\n                VERTEX_COUNT: numParticles,\n                CLUSTER_COUNT: clusterCount\n              });\n            }\n            execute = function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var i, finalParticleData;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      i = 0;\n                      _a.label = 1;\n                    case 1:\n                      if (!(i < maxIteration)) return [3 /*break*/, 6];\n                      // eslint-disable-next-line no-await-in-loop\n                      return [4 /*yield*/, kernelFruchterman.execute()];\n                    case 2:\n                      // eslint-disable-next-line no-await-in-loop\n                      _a.sent();\n                      if (!clustering) return [3 /*break*/, 4];\n                      kernelCluster.setBinding({\n                        u_Data: kernelFruchterman\n                      });\n                      // eslint-disable-next-line no-await-in-loop\n                      return [4 /*yield*/, kernelCluster.execute()];\n                    case 3:\n                      // eslint-disable-next-line no-await-in-loop\n                      _a.sent();\n                      kernelFruchterman.setBinding({\n                        u_ClusterCenters: kernelCluster\n                      });\n                      _a.label = 4;\n                    case 4:\n                      kernelFruchterman.setBinding({\n                        u_MaxDisplace: maxDisplace *= 0.99\n                      });\n                      _a.label = 5;\n                    case 5:\n                      i++;\n                      return [3 /*break*/, 1];\n                    case 6:\n                      return [4 /*yield*/, kernelFruchterman.getOutput()];\n                    case 7:\n                      finalParticleData = _a.sent();\n                      if (canvas) {\n                        // 传递数据给主线程\n                        ctx.postMessage({\n                          type: constants_1.LAYOUT_MESSAGE.GPUEND,\n                          vertexEdgeData: finalParticleData\n                          // edgeIndexBufferData,\n                        });\n                      } else {\n                        nodes.forEach(function (node, i) {\n                          var x = finalParticleData[4 * i];\n                          var y = finalParticleData[4 * i + 1];\n                          node.x = x;\n                          node.y = y;\n                        });\n                      }\n                      if (onLayoutEnd) onLayoutEnd();\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            };\n\n            return [4 /*yield*/, execute()];\n          case 1:\n            _c.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  FruchtermanGPULayout.prototype.getType = function () {\n    return \"fruchterman-gpu\";\n  };\n  return FruchtermanGPULayout;\n}(base_1.Base);\nexports.FruchtermanGPULayout = FruchtermanGPULayout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","updateCfg","FruchtermanGPULayout","maxIteration","gravity","speed","clustering","clusterGravity","self","nodes","length","onLayoutEnd","width","window","innerWidth","height","innerHeight","center","x","y","nodeMap","nodeIdxMap","forEach","node","i","Math","random","id","run","_a","canvas","ctx","edges","area","maxDisplace","sqrt","k2","k","clusterField","attributeArray","clusterCount","fx","fy","numParticles","_b","maxEdgePerVetex","nodesEdgesArray","workerEnabled","world","g_webgpu_1","create","engineOptions","supportCompute","clusterCenters","push","kernelFruchterman","createKernel","fruchtermanShader_1","setDispatch","setBinding","u_Data","u_K","u_K2","u_Gravity","u_ClusterGravity","u_Speed","u_MaxDisplace","u_Clustering","u_Center","u_AttributeArray","u_ClusterCenters","MAX_EDGE_PER_VERTEX","VERTEX_COUNT","kernelCluster","u_NodeAttributes","CLUSTER_COUNT","execute","getOutput","finalParticleData","postMessage","type","constants_1","GPUEND","vertexEdgeData","_c","base_1","exports"],"sourceRoot":"","sources":["../../../src/layout/gpu/fruchterman.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}