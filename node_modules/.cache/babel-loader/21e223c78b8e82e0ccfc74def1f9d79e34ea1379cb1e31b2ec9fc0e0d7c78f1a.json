{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7bc1232f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flex-center\"\n};\nconst _hoisted_2 = {\n  class: \"flex\"\n};\nconst _hoisted_3 = {\n  class: \"m-r-40\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"m-r-40\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"m-r-170\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  ref: \"chartContainerRef\",\n  class: \"chartContainer\"\n};\nconst _hoisted_10 = {\n  class: \"modal-title\"\n};\nconst _hoisted_11 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_radio = _resolveComponent(\"a-radio\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n  const _component_a_checkbox_group = _resolveComponent(\"a-checkbox-group\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_a_cascader_panel = _resolveComponent(\"a-cascader-panel\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", {\n    class: _normalizeClass(['defaultPadding', $setup.innerHeight > 1000 && 'yCenter']),\n    style: _normalizeStyle({\n      'height': $setup.innerHeight > 1000 ? $setup.innerHeight + 'px' : 'auto'\n    })\n  }, [_createElementVNode(\"header\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, [_createElementVNode(\"img\", {\n    src: $setup.barChart,\n    width: \"20\",\n    class: \"img\"\n  }, null, 8 /* PROPS */, _hoisted_4)]), _createVNode(_component_a_radio_group, {\n    type: \"button\",\n    size: \"medium\",\n    \"model-value\": $setup.barChartSelect,\n    \"onUpdate:model-value\": _cache[0] || (_cache[0] = $event => $setup.barChartSelect = $event),\n    onChange: $setup.selectChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_radio, {\n      value: \"营业收入(总) 直接成本(总)\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"收入&成本(总)\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"人均营业收入 人均直接成本\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"收入&成本(人均)\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: $setup.lineChart,\n    width: \"20\",\n    class: \"img\"\n  }, null, 8 /* PROPS */, _hoisted_6), _createVNode(_component_a_checkbox_group, {\n    \"model-value\": $setup.lineChartSelect,\n    \"onUpdate:model-value\": _cache[1] || (_cache[1] = $event => $setup.lineChartSelect = $event),\n    onChange: $setup.selectChange,\n    class: \"checkbox-group\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_checkbox, {\n      value: \"发薪人数\"\n    }, {\n      checkbox: _withCtx(({\n        checked\n      }) => [_createVNode(_component_a_tag, {\n        checked: checked,\n        class: _normalizeClass(['checkbox-tag', 'checkbox-tag1', checked && 'checkbox-tag-active']),\n        checkable: \"\",\n        style: _normalizeStyle({\n          color: checked ? '#3A64FF' : '#666666'\n        })\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"发薪人数\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"checked\", \"class\", \"style\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_checkbox, {\n      value: \"项目销售毛利率\"\n    }, {\n      checkbox: _withCtx(({\n        checked\n      }) => [_createVNode(_component_a_tag, {\n        checked: checked,\n        class: _normalizeClass(['checkbox-tag', 'checkbox-tag2', checked && 'checkbox-tag-active']),\n        style: _normalizeStyle({\n          color: checked ? '#3A64FF' : '#666666'\n        })\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"项目销售毛利率\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"checked\", \"class\", \"style\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: $setup.timeChart,\n    width: \"20\",\n    class: \"img\"\n  }, null, 8 /* PROPS */, _hoisted_8), _createVNode(_component_a_radio_group, {\n    type: \"button\",\n    size: \"medium\",\n    \"model-value\": $setup.timeChartSelect,\n    \"onUpdate:model-value\": _cache[2] || (_cache[2] = $event => $setup.timeChartSelect = $event),\n    onChange: $setup.timeSelectChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_radio, {\n      value: \"3\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"近3个月\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"6\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"近6个月\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"12\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"近12个月\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"])]), _createElementVNode(\"div\", null, [_createVNode(_component_a_button, {\n    type: \"primary\",\n    onClick: $setup.handleSwitchDept\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"切换\" + _toDisplayString($setup.sourceTypeMap[$setup.sourceType]), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  })])])]), _createElementVNode(\"main\", null, [_createVNode(_component_a_spin, {\n    loading: $setup.chartContainerLoading,\n    tip: \"数据加载中...\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, null, 512 /* NEED_PATCH */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"])])], 6 /* CLASS, STYLE */), _createVNode(_component_a_modal, {\n    visible: $setup.switchDeptModal.visible,\n    \"onUpdate:visible\": _cache[5] || (_cache[5] = $event => $setup.switchDeptModal.visible = $event),\n    width: \"800px\",\n    \"body-style\": {\n      height: '200px'\n    },\n    \"title-align\": \"start\"\n  }, {\n    title: _withCtx(() => [_createElementVNode(\"span\", _hoisted_10, \"切换\" + _toDisplayString($setup.sourceTypeMap[$setup.sourceType]), 1 /* TEXT */)]),\n\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_a_button, {\n      type: \"outline\",\n      class: \"m-r-10\",\n      onClick: _cache[4] || (_cache[4] = $event => $setup.switchDeptModal.visible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $setup.handleSwitchDeptModalOK\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确定\")]),\n      _: 1 /* STABLE */\n    })])]),\n\n    default: _withCtx(() => [_createVNode(_component_a_spin, {\n      loading: $setup.switchDeptModal.loading,\n      style: {\n        \"width\": \"100%\"\n      },\n      tip: \"数据加载中...\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_cascader_panel, {\n        options: $setup.switchDeptModal.options,\n        modelValue: $setup.switchDeptModal.selectItem,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.switchDeptModal.selectItem = $event),\n        \"check-strictly\": \"\",\n        \"expand-child\": \"\"\n      }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["class","ref","style","_createElementVNode","$setup","_hoisted_1","_hoisted_2","_hoisted_3","src","width","_createVNode","_component_a_radio_group","type","size","onChange","_component_a_radio","value","_hoisted_5","_component_a_checkbox_group","_component_a_checkbox","checkbox","checked","_component_a_tag","checkable","color","_hoisted_7","_component_a_button","onClick","_component_a_spin","loading","tip","_hoisted_9","_component_a_modal","visible","height","title","_hoisted_10","footer","_hoisted_11","_component_a_cascader_panel","options","selectItem"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/ringAnalyze/ringContrastChart.vue"],"sourcesContent":["<template>\n    <div :class=\"['defaultPadding',innerHeight>1000 && 'yCenter']\" :style=\"{'height':innerHeight>1000?innerHeight+'px':'auto'}\">\n        <header class=\"flex-center\">\n            <div class=\"flex\">\n                <div class=\"m-r-40\">\n                    <span>\n                        <img :src=\"barChart\" width=\"20\" class=\"img\">\n                    </span>\n                    <a-radio-group type=\"button\" size=\"medium\" v-model:model-value=\"barChartSelect\" @change=\"selectChange\">\n                        <a-radio value=\"营业收入(总) 直接成本(总)\">收入&成本(总)</a-radio>\n                        <a-radio value=\"人均营业收入 人均直接成本\">收入&成本(人均)</a-radio>\n                    </a-radio-group>\n                </div>\n                <div class=\"m-r-40\">\n                    <img :src=\"lineChart\" width=\"20\" class=\"img\">\n                    <a-checkbox-group v-model:model-value=\"lineChartSelect\" @change=\"selectChange\" class=\"checkbox-group\">\n                        <a-checkbox value=\"发薪人数\">\n                            <template #checkbox=\"{ checked }\">\n                                <a-tag :checked=\"checked\" :class=\"['checkbox-tag', 'checkbox-tag1',checked && 'checkbox-tag-active']\" checkable :style=\"{color : checked?'#3A64FF':'#666666'}\">发薪人数</a-tag>\n                            </template>\n                        </a-checkbox>\n                        <a-checkbox value=\"项目销售毛利率\">\n                            <template #checkbox=\"{ checked }\">\n                                <a-tag :checked=\"checked\" :class=\"['checkbox-tag', 'checkbox-tag2',checked && 'checkbox-tag-active']\" :style=\"{color : checked?'#3A64FF':'#666666'}\">项目销售毛利率</a-tag>\n                            </template>\n                        </a-checkbox>\n                    </a-checkbox-group>\n                </div>\n                <div class=\"m-r-170\">\n                    <img :src=\"timeChart\" width=\"20\" class=\"img\">\n                    <a-radio-group type=\"button\" size=\"medium\" v-model:model-value=\"timeChartSelect\" @change=\"timeSelectChange\">\n                        <a-radio value=\"3\">近3个月</a-radio>\n                        <a-radio value=\"6\">近6个月</a-radio>\n                        <a-radio value=\"12\">近12个月</a-radio>\n                    </a-radio-group>\n                </div>\n                <div>\n                    <a-button type=\"primary\" @click=\"handleSwitchDept\">切换{{ sourceTypeMap[sourceType] }}</a-button>\n                </div>\n            </div>\n        </header>\n        <main>\n            <a-spin :loading=\"chartContainerLoading\" tip=\"数据加载中...\" style=\"width: 100%;\">\n                <div ref=\"chartContainerRef\" class=\"chartContainer\">\n            </div>\n            </a-spin>\n        </main>\n    </div>\n    <a-modal v-model:visible=\"switchDeptModal.visible\" width=\"800px\" :body-style=\"{height:'200px'}\" title-align=\"start\">\n        <template #title>\n            <span class=\"modal-title\">切换{{ sourceTypeMap[sourceType] }}</span>\n        </template>\n        <a-spin :loading=\"switchDeptModal.loading\" style=\"width:100%\" tip=\"数据加载中...\">\n            <a-cascader-panel :options=\"switchDeptModal.options\" v-model=\"switchDeptModal.selectItem\" check-strictly expand-child/>\n        </a-spin>\n        <template #footer>\n            <div style=\"text-align: center;\">\n                <a-button type=\"outline\" class=\"m-r-10\" @click=\"switchDeptModal.visible=false\">取消</a-button>\n                <a-button type=\"primary\" @click=\"handleSwitchDeptModalOK\">确定</a-button>\n            </div>\n        </template>\n    </a-modal>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, reactive, ref, shallowRef, unref } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept,getDeptEcharts,getCustomerEcharts,getProjectEchartsUsingPOST,getCustomer,getProject } from '@/api/lookChart'\nimport { Message } from \"@arco-design/web-vue\";\nconst barChart = require('@/assets/images/barChart.svg')\nconst lineChart = require('@/assets/images/lineChart.svg')\nconst timeChart = require('@/assets/images/timeChart.svg')\nlet { deptName,interval,deptId,title,sourceType,customerName,projectName,projectId,taxRate,customerId } = window.history.state\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nconst innerHeight = window.innerHeight\nconst chartContainerRef = ref(null)\nconst chartContainerLoading = ref(false)\nlet sourceTypeMap = {\n    dept : '部门',\n    customer : '客户',\n    project : '项目'\n}\nlet myChart\nconst barChartSelect = ref('营业收入(总) 直接成本(总)')\nconst lineChartSelect = shallowRef(['发薪人数'])\nconst timeChartSelect = ref(interval)\nconst selectChange =()=>{\n    setChartData()\n}\nconst timeSelectChange = ()=>{\n    switch (sourceType) {\n        case 'dept':\n            getChartData()\n            break;\n        case 'customer':\n            getCustomerData()\n            break;\n        case 'project':\n            getProjectData()\n            break;\n        default:\n            break;\n    }\n}\nconst switchDeptModal = reactive({\n    visible : false,\n    selectItem : '',\n    options : [],\n    loading : false\n})\nconst handleSwitchDept = ()=>{\n    switchDeptModal.visible = true\n    if(switchDeptModal.options.length === 0){\n        switch (sourceType) {\n            case 'dept':\n                getDeptData()\n                break;\n            case 'customer':\n                getAllCustomerData()\n                break;\n            case 'project':\n                getAllProjecttData()\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst getDeptData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            interval : unref(timeChartSelect)\n        }\n        queryYoyAnalysisDept(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.deptId\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\n\nconst getAllCustomerData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : unref(timeChartSelect)\n        }\n        getCustomer(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.title\n                        item.label = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllProjecttData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : unref(timeChartSelect)\n        }\n        getProject(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.label = item.title\n                        item.value = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            item.label = item.projectName\n                            item.value = item.projectName\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nlet sourceData = []\nlet chartOptionColosMap = {\n    '营业收入(总)'  : '#6BD4B3',\n    '人均营业收入' : '#6BD4B3',\n    '直接成本(总)' : '#3491FA',\n    '人均直接成本' : '#3491FA',\n    '发薪人数' : '#FB6D6C',\n    '项目销售毛利率' : '#008026'\n\n}\nconst setChartData = ()=>{\n    let barChartVal = barChartSelect.value.split(' ')\n    let lineChartVal = lineChartSelect.value\n    let timeChartVal = timeChartSelect.value\n    let includeName = [...barChartVal,...lineChartVal,timeChartVal]\n    let legend = []\n    let fliterData = []\n    sourceData.forEach(item=>{\n        if(includeName.includes(item.name)){\n            let yAxisIndex = 0\n            if(item.type === 'bar'){\n                yAxisIndex = 0\n            }\n            if(item.type === 'line'){\n                yAxisIndex = 1\n            }\n            if(item.type === 'line' && item.name === '项目销售毛利率'){\n                yAxisIndex = 2\n            }\n            fliterData.push({\n                ...item,\n                barWidth: 20,\n                yAxisIndex,\n                itemStyle: {\n                    color : chartOptionColosMap[item.name]\n                },\n            })\n            legend.push(item.name)\n        }\n    })\n   chartOptions.legend = {\n        data: legend,\n        bottom : 0,\n        itemGap : 100\n    }\n    chartOptions.series = fliterData\n    if(myChart){\n        myChart.setOption(chartOptions,true);\n    }\n}\n// 请求部门维度看图数据\nconst getChartData = (id)=>{\n    let params = {\n        deptId : id || deptId || \"\",\n        tagKey:\"linkAnalysis\",\n        interval :unref(timeChartSelect),\n    }\n    chartContainerLoading.value = true\n    getDeptEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n// 请求客户维度看图数\nconst getCustomerData = (name)=>{\n    let params = {\n        tagKey:\"linkAnalysis2\",\n        interval :unref(timeChartSelect),\n        deptId: deptId || \"\",\n        title : name || title,\n        customerId : customerId || ''\n    }\n    chartContainerLoading.value = true\n    getCustomerEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n// 请求项目维度看图数据\nconst getProjectData = (obj)=>{\n    let params = {\n        interval :unref(timeChartSelect),\n        deptId : deptId || \"\",\n        tagKey:\"linkAnalysis3\",\n        projectId: obj?.projectId || projectId,\n        taxRate : obj?.taxRate || taxRate,\n    }\n    chartContainerLoading.value = true\n    getProjectEchartsUsingPOST(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//遍历树结构按条件找对应的数据\nfunction getOptionItem (arr,searchObj){\n    let currentSelectItem = {}\n    function searchItem(arr){\n        arr.forEach(item=>{\n            Object.keys(searchObj).forEach(key=>{\n                if(item[key] === searchObj[key]){\n                    currentSelectItem = item\n                }\n            })\n            if(item?.children?.length){\n                searchItem(item.children)\n            }\n        })\n    }\n    searchItem(arr)\n    return currentSelectItem\n}\nconst handleSwitchDeptModalOK = ()=>{\n    switchDeptModal.visible = false\n    if(switchDeptModal.selectItem){\n        let item\n        switch (sourceType) {\n            case 'dept':\n             item = getOptionItem(switchDeptModal.options,{ deptId : switchDeptModal.selectItem })\n            $bus.emit(\"updateStructure\", [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: item.deptName,\n                    isBack : true\n                },\n            ]);\n                getChartData(item.deptId)\n                break;\n            case 'customer':\n                 item = getOptionItem(switchDeptModal.options,{ title : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.title,\n                        isBack : true\n                    },\n                ]);\n                getCustomerData(item.title)\n                break;\n            case 'project':\n                 item = getOptionItem(switchDeptModal.options,{ projectName : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    { type: \"text\", color: \"#333\", msg:  `${item.groupCustomerName}-${customerName}`},\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.projectName,\n                        isBack : true\n                    },\n                ]);\n                let { finPcode ,taxRate } = item\n                getProjectData({\n                    projectId :finPcode,\n                    taxRate\n                })\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nconst chartOptions = {\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                    color: '#999'\n                }\n            },\n            // formatter : (params)=>{\n            //     let div = params.map(item=>{\n            //         return `\n            //             <div>\n            //                 ${item.marker}  ${item.seriesName.endsWith('率')?item.seriesName+' '+item.value+'%': item.seriesName+' '+item.value}\n            //             </div>\n            //         `\n            //     })\n            //     return `<span>\n            //             ${div}\n            //         </span>`\n            // }\n        },\n        grid: {\n            left : '10%',\n        },\n        xAxis: [\n            {\n                type: 'category',\n                axisTick: {\n                    alignWithLabel: true,\n                    inside: true,\n                },\n                axisLabel:{ \n                    rotate : 45\n                },\n                data: [],\n            },\n        ],\n        yAxis: [\n            {\n                name : '柱状',\n                type: 'value',\n                position: 'left',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                name : '折线',\n                type: 'value',\n                position: 'right',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                name : '折线',\n                type: 'value',\n                position: 'right',\n                offset: 60,\n                boundaryGap: [0.01,1],\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}%'\n                },\n                splitLine:{show: false}\n            }\n            \n        ],\n        series: []\n    }\nonMounted(()=>{\n    myChart = echarts.init(unref(chartContainerRef));\n    chartOptions && myChart.setOption(chartOptions);\n})\n\nonBeforeMount(()=>{\n    let breadList \n    switch (sourceType) {\n        case 'dept':\n            breadList = [\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: '环比分析列表',\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: deptName },\n            ]\n            switchDeptModal.selectItem = deptId\n            getChartData()\n            break;\n        case 'customer':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: deptName,\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: title },\n            ]\n            switchDeptModal.selectItem = customerId\n            getCustomerData()\n            break;\n        case 'project':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: `${title}-${customerName}`,\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: projectName },\n            ]\n            switchDeptModal.selectItem = projectId\n            getProjectData()\n            break;\n        default:\n            break;\n    }\n    $bus.emit(\"updateStructure\", breadList);\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.img {\n    vertical-align: middle;\n    margin: 0 12px;\n}\n.m-r-40{\n    margin-right: 40px;\n}\n.m-r-170{\n    margin-right: 170px;\n}\n.chartContainer{\n    height: 600px;\n}\n.modal-title {\n  color: #5a5a5a;\n  font-size: 14px;\n  font-weight: bold;\n}\n:deep(.checkbox-group){\n    background: #F2F3F5;\n    padding:4px\n}\n:deep(.arco-checkbox-group .arco-checkbox){\n    margin-right : 0\n}\n:deep(.checkbox-group .checkbox-tag){\n    font-size:13px\n}\n:deep(.checkbox-group .checkbox-tag1){\n    margin-left:-4px\n}\n:deep(.checkbox-group .checkbox-tag2){\n    margin-left:-2px\n}\n:deep(.checkbox-group .checkbox-tag-active){\n    background : white\n}\n:deep(.checkbox-group .checkbox-tag:hover){\n    background : white\n}\n.yCenter{\n    display : flex;\n    flex-direction : column;\n    justify-content:center\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}