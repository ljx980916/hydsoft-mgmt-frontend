{"ast":null,"code":"import { onMounted, reactive, ref, unref, onBeforeMount } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept, queryYoyAnalysisChart, queryCustomerYoyAnalysisChart, getProjectEcharts, getCustomer, getProject } from '@/api/lookChart';\nimport { Message } from \"@arco-design/web-vue\";\nimport { getCurrentTime } from '@/utils/util';\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nexport default {\n  __name: 'lookChart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let {\n      year,\n      month\n    } = getCurrentTime();\n    const barChart = require('@/assets/images/barChart.svg');\n    const lineChart = require('@/assets/images/lineChart.svg');\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    let {\n      barChartOptions,\n      deptId,\n      sourceType,\n      deptName,\n      customerName,\n      projectName,\n      title,\n      taxRate,\n      projectId\n    } = window.history.state;\n    barChartOptions = JSON.parse(barChartOptions).filter(item => item.title !== '发薪人数');\n    const chartContainerRef = ref(null);\n    const chartContainerLoading = ref(false);\n    let sourceTypeMap = {\n      dept: '部门',\n      customer: '客户',\n      project: '项目'\n    };\n    let myChart;\n    const barChartSelect = ref('colNo2');\n    const lineChartSelect = ref('colNo12');\n    const selectChange = () => {\n      updateData();\n    };\n    const switchDeptModal = reactive({\n      visible: false,\n      selectItem: '',\n      options: [],\n      loading: false\n    });\n    const handleSwitchDept = () => {\n      switchDeptModal.visible = true;\n      if (switchDeptModal.options.length === 0) {\n        switch (sourceType) {\n          case 'dept':\n            getDeptData();\n            break;\n          case 'customer':\n            getAllCustomerData();\n            break;\n          case 'project':\n            getAllProjecttData();\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    const getDeptData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          interval: month - 1\n        };\n        queryYoyAnalysisDept(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.value = item.deptId;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    const getAllCustomerData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          deptId,\n          interval: month - 1\n        };\n        getCustomer(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.value = item.title;\n                item.label = item.title;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    const getAllProjecttData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          deptId,\n          interval: month - 1\n        };\n        getProject(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.label = item.title;\n                item.value = item.title;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  item.label = item.projectName;\n                  item.value = item.projectName;\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    //部门数据\n    const getChartData = id => {\n      let params = {\n        deptId: id || deptId,\n        barType: unref(barChartSelect),\n        lineType: unref(lineChartSelect),\n        tagKey: \"yoyAnalysis\",\n        interval: month - 1\n      };\n      chartContainerLoading.value = true;\n      queryYoyAnalysisChart(params).then(res => {\n        if (res.code === '200') {\n          let {\n            lastYear,\n            thisYear\n          } = res.data;\n          chartOptions.legend = {\n            data: [` ${year - 1}`, ` ${year}`, `${year - 1} `, `${year} `],\n            bottom: 0\n          };\n          chartOptions.series = [{\n            name: ` ${year - 1}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#6BD4B3'\n            },\n            data: lastYear.bar\n          }, {\n            name: ` ${year}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#3491FA'\n            },\n            data: thisYear.bar\n          }, {\n            name: `${year - 1} `,\n            type: 'line',\n            itemStyle: {\n              color: '#FA6E6C'\n            },\n            data: lastYear.line\n          }, {\n            name: `${year} `,\n            type: 'line',\n            itemStyle: {\n              color: '#0D8731'\n            },\n            data: thisYear.line\n          }];\n          if (myChart) {\n            myChart.setOption(chartOptions);\n          }\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    //客户数据\n    const getCustomerChart = name => {\n      let params = {\n        deptId,\n        barType: unref(barChartSelect),\n        lineType: unref(lineChartSelect),\n        interval: month - 1,\n        tagKey: \"yoyAnalysis2\",\n        title: name || title\n      };\n      chartContainerLoading.value = true;\n      queryCustomerYoyAnalysisChart(params).then(res => {\n        if (res.code === '200') {\n          let {\n            lastYear,\n            thisYear\n          } = res.data;\n          chartOptions.legend = {\n            data: [` ${year - 1}`, ` ${year}`, `${year - 1} `, `${year} `],\n            bottom: 0\n          };\n          chartOptions.series = [{\n            name: ` ${year - 1}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#6BD4B3'\n            },\n            data: lastYear.bar\n          }, {\n            name: ` ${year}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#3491FA'\n            },\n            data: thisYear.bar\n          }, {\n            name: `${year - 1} `,\n            type: 'line',\n            itemStyle: {\n              color: '#FA6E6C'\n            },\n            data: lastYear.line\n          }, {\n            name: `${year} `,\n            type: 'line',\n            itemStyle: {\n              color: '#0D8731'\n            },\n            data: thisYear.line\n          }];\n          if (myChart) {\n            myChart.setOption(chartOptions);\n          }\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    //项目数据\n    const getProjectEchart = obj => {\n      let params = {\n        deptId,\n        barType: unref(barChartSelect),\n        lineType: unref(lineChartSelect),\n        interval: month - 1,\n        title: obj?.projectName || projectName,\n        tagKey: \"yoyAnalysis3\",\n        taxRate: obj?.taxRate || taxRate,\n        projectId: obj?.projectId || projectId\n      };\n      chartContainerLoading.value = true;\n      getProjectEcharts(params).then(res => {\n        if (res.code === '200') {\n          let {\n            lastYear,\n            thisYear\n          } = res.data;\n          chartOptions.legend = {\n            data: [` ${year - 1}`, ` ${year}`, `${year - 1} `, `${year} `],\n            bottom: 0\n          };\n          chartOptions.series = [{\n            name: ` ${year - 1}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#6BD4B3'\n            },\n            data: lastYear.bar\n          }, {\n            name: ` ${year}`,\n            type: 'bar',\n            yAxisIndex: 2,\n            itemStyle: {\n              color: '#3491FA'\n            },\n            data: thisYear.bar\n          }, {\n            name: `${year - 1} `,\n            type: 'line',\n            itemStyle: {\n              color: '#FA6E6C'\n            },\n            data: lastYear.line\n          }, {\n            name: `${year} `,\n            type: 'line',\n            itemStyle: {\n              color: '#0D8731'\n            },\n            data: thisYear.line\n          }];\n          if (myChart) {\n            myChart.setOption(chartOptions);\n          }\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    //遍历树结构按条件找对应的数据\n    function getOptionItem(arr, searchObj) {\n      let currentSelectItem = {};\n      function searchItem(arr) {\n        arr.forEach(item => {\n          Object.keys(searchObj).forEach(key => {\n            if (item[key] === searchObj[key]) {\n              currentSelectItem = item;\n            }\n          });\n          if (item?.children?.length) {\n            searchItem(item.children);\n          }\n        });\n      }\n      searchItem(arr);\n      return currentSelectItem;\n    }\n    const handleSwitchDeptModalOK = () => {\n      switchDeptModal.visible = false;\n      if (switchDeptModal.selectItem) {\n        let item;\n        switch (sourceType) {\n          case 'dept':\n            item = getOptionItem(switchDeptModal.options, {\n              deptId: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.deptName,\n              isBack: true\n            }]);\n            getChartData(item.deptId);\n            break;\n          case 'customer':\n            item = getOptionItem(switchDeptModal.options, {\n              title: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: deptName\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.title,\n              isBack: true\n            }]);\n            getCustomerChart(item.title);\n            break;\n          case 'project':\n            item = getOptionItem(switchDeptModal.options, {\n              projectName: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: deptName\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: `${item.groupCustomerName}-${customerName}`\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.projectName,\n              isBack: true\n            }]);\n            let {\n              finPcode,\n              taxRate,\n              projectName\n            } = item;\n            getProjectEchart({\n              projectId: finPcode,\n              taxRate,\n              projectName\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    const updateData = () => {\n      let breadList;\n      switch (sourceType) {\n        case 'dept':\n          breadList = [{\n            type: \"text\",\n            color: \"#333\",\n            msg: '同比分析列表'\n          }, {\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: deptName,\n            isBack: true\n          }];\n          getChartData();\n          break;\n        case 'customer':\n          breadList = [{\n            type: \"text\",\n            color: \"#333\",\n            msg: '同比分析列表'\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: deptName\n          }, {\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: title,\n            isBack: true\n          }];\n          getCustomerChart();\n          break;\n        case 'project':\n          breadList = [{\n            type: \"text\",\n            color: \"#333\",\n            msg: '同比分析列表'\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: deptName\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: `${title}-${customerName}`\n          }, {\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: projectName,\n            isBack: true\n          }];\n          getProjectEchart();\n          break;\n        default:\n          break;\n      }\n      $bus.emit(\"updateStructure\", breadList);\n    };\n    onBeforeMount(() => {\n      updateData();\n    });\n    const chartOptions = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          crossStyle: {\n            color: '#999'\n          }\n        }\n      },\n      grid: {\n        left: '15%'\n      },\n      xAxis: [{\n        type: 'category',\n        axisTick: {\n          alignWithLabel: true\n        },\n        data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n      }],\n      yAxis: [{\n        type: 'value',\n        position: 'right',\n        alignTicks: true,\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}'\n        },\n        splitLine: {\n          show: false\n        }\n      }, {\n        min: 10,\n        max: 100,\n        type: 'value',\n        position: 'left',\n        offset: 80,\n        boundaryGap: [0, 0.01],\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}%'\n        },\n        splitLine: {\n          show: false\n        }\n      }, {\n        type: 'value',\n        position: 'left',\n        alignTicks: true,\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}'\n        },\n        splitLine: {\n          show: false\n        }\n      }],\n      series: []\n    };\n    onMounted(() => {\n      myChart = echarts.init(unref(chartContainerRef));\n      chartOptions && myChart.setOption(chartOptions);\n    });\n    const __returned__ = {\n      get year() {\n        return year;\n      },\n      set year(v) {\n        year = v;\n      },\n      get month() {\n        return month;\n      },\n      set month(v) {\n        month = v;\n      },\n      barChart,\n      lineChart,\n      get $bus() {\n        return $bus;\n      },\n      set $bus(v) {\n        $bus = v;\n      },\n      get barChartOptions() {\n        return barChartOptions;\n      },\n      set barChartOptions(v) {\n        barChartOptions = v;\n      },\n      get deptId() {\n        return deptId;\n      },\n      set deptId(v) {\n        deptId = v;\n      },\n      get sourceType() {\n        return sourceType;\n      },\n      set sourceType(v) {\n        sourceType = v;\n      },\n      get deptName() {\n        return deptName;\n      },\n      set deptName(v) {\n        deptName = v;\n      },\n      get customerName() {\n        return customerName;\n      },\n      set customerName(v) {\n        customerName = v;\n      },\n      get projectName() {\n        return projectName;\n      },\n      set projectName(v) {\n        projectName = v;\n      },\n      get title() {\n        return title;\n      },\n      set title(v) {\n        title = v;\n      },\n      get taxRate() {\n        return taxRate;\n      },\n      set taxRate(v) {\n        taxRate = v;\n      },\n      get projectId() {\n        return projectId;\n      },\n      set projectId(v) {\n        projectId = v;\n      },\n      chartContainerRef,\n      chartContainerLoading,\n      get sourceTypeMap() {\n        return sourceTypeMap;\n      },\n      set sourceTypeMap(v) {\n        sourceTypeMap = v;\n      },\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      barChartSelect,\n      lineChartSelect,\n      selectChange,\n      switchDeptModal,\n      handleSwitchDept,\n      getDeptData,\n      getAllCustomerData,\n      getAllProjecttData,\n      getChartData,\n      getCustomerChart,\n      getProjectEchart,\n      getOptionItem,\n      handleSwitchDeptModalOK,\n      updateData,\n      chartOptions,\n      onMounted,\n      reactive,\n      ref,\n      unref,\n      onBeforeMount,\n      get echarts() {\n        return echarts;\n      },\n      get queryYoyAnalysisDept() {\n        return queryYoyAnalysisDept;\n      },\n      get queryYoyAnalysisChart() {\n        return queryYoyAnalysisChart;\n      },\n      get queryCustomerYoyAnalysisChart() {\n        return queryCustomerYoyAnalysisChart;\n      },\n      get getProjectEcharts() {\n        return getProjectEcharts;\n      },\n      get getCustomer() {\n        return getCustomer;\n      },\n      get getProject() {\n        return getProject;\n      },\n      get Message() {\n        return Message;\n      },\n      get getCurrentTime() {\n        return getCurrentTime;\n      },\n      get getCurrentInstance() {\n        return getCurrentInstance;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","ref","unref","onBeforeMount","echarts","queryYoyAnalysisDept","queryYoyAnalysisChart","queryCustomerYoyAnalysisChart","getProjectEcharts","getCustomer","getProject","Message","getCurrentTime","getCurrentInstance","year","month","barChart","require","lineChart","$bus","appContext","config","globalProperties","barChartOptions","deptId","sourceType","deptName","customerName","projectName","title","taxRate","projectId","window","history","state","JSON","parse","filter","item","chartContainerRef","chartContainerLoading","sourceTypeMap","dept","customer","project","myChart","barChartSelect","lineChartSelect","selectChange","updateData","switchDeptModal","visible","selectItem","options","loading","handleSwitchDept","length","getDeptData","getAllCustomerData","getAllProjecttData","params","interval","then","res","code","recursionDelChildren","arr","forEach","value","children","data","error","message","catch","err","finally","label","getChartData","id","barType","lineType","tagKey","lastYear","thisYear","chartOptions","legend","bottom","series","name","type","yAxisIndex","itemStyle","color","bar","line","setOption","getCustomerChart","getProjectEchart","obj","getOptionItem","searchObj","currentSelectItem","searchItem","Object","keys","key","handleSwitchDeptModalOK","emit","msg","isBack","groupCustomerName","finPcode","breadList","tooltip","trigger","axisPointer","crossStyle","grid","left","xAxis","axisTick","alignWithLabel","yAxis","position","alignTicks","axisLine","show","lineStyle","axisLabel","formatter","splitLine","min","max","offset","boundaryGap","init"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/ringAnalyze/lookChart.vue"],"sourcesContent":["<template>\n    <div class=\"defaultPadding\">\n        <header class=\"flex-center\">\n            <div class=\"flex\">\n                <div class=\"m-r-90\">\n                    <span>\n                        <img :src=\"barChart\" width=\"26\" class=\"img\">\n                    </span>\n                    <a-select :style=\"{width:'192px'}\" v-model:model-value=\"barChartSelect\" @change=\"selectChange\">\n                        <a-option \n                            v-for=\"item of barChartOptions\" \n                            :key=\"item.dataIndex\"\n                            :value=\"item.dataIndex\"\n                        >\n                            {{ item.title }}\n                        </a-option>\n                    </a-select>\n                </div>\n                <div class=\"m-r-80\">\n                    <img :src=\"lineChart\" width=\"26\" class=\"img\">\n                    <a-radio-group type=\"button\" size=\"large\" v-model:model-value=\"lineChartSelect\" @change=\"selectChange\">\n                        <a-radio value=\"colNo12\">C1发薪人数</a-radio>\n                        <a-radio value=\"colNo13\">R/S/G/C2发薪人数</a-radio>\n                    </a-radio-group>\n                </div>\n                <div>\n                    <a-button type=\"primary\" @click=\"handleSwitchDept\">切换{{ sourceTypeMap[sourceType] }}</a-button>\n                </div>\n            </div>\n        </header>\n        <main>\n            <a-spin :loading=\"chartContainerLoading\" tip=\"数据加载中...\" style=\"width: 100%;\">\n                <div ref=\"chartContainerRef\" class=\"chartContainer\">\n            </div>\n            </a-spin>\n        </main>\n    </div>\n    <a-modal v-model:visible=\"switchDeptModal.visible\" width=\"650px\" title-align=\"start\">\n        <template #title>\n            <span class=\"modal-title\">切换{{ sourceTypeMap[sourceType] }}</span>\n        </template>\n        <a-spin :loading=\"switchDeptModal.loading\" style=\"width:100%\" tip=\"数据加载中...\">\n            <a-cascader-panel :options=\"switchDeptModal.options\" v-model=\"switchDeptModal.selectItem\" expand-child/>\n        </a-spin>\n        <template #footer>\n            <div style=\"text-align: center;\">\n                <a-button type=\"outline\" class=\"m-r-10\" @click=\"switchDeptModal.visible=false\">取消</a-button>\n                <a-button type=\"primary\" @click=\"handleSwitchDeptModalOK\">确定</a-button>\n            </div>\n        </template>\n    </a-modal>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref, unref,onBeforeMount } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept,queryYoyAnalysisChart,queryCustomerYoyAnalysisChart,getProjectEcharts,getCustomer,getProject} from '@/api/lookChart'\nimport { Message } from \"@arco-design/web-vue\";\nimport { getCurrentTime } from '@/utils/util'\nlet { year,month } = getCurrentTime();\nconst barChart = require('@/assets/images/barChart.svg')\nconst lineChart = require('@/assets/images/lineChart.svg')\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nlet { barChartOptions,deptId,sourceType,deptName,customerName,projectName,title,taxRate,projectId } = window.history.state\nbarChartOptions = JSON.parse(barChartOptions).filter(item=>item.title !== '发薪人数')\nconst chartContainerRef = ref(null)\nconst chartContainerLoading = ref(false)\nlet sourceTypeMap = {\n    dept : '部门',\n    customer : '客户',\n    project : '项目'\n}\nlet myChart\nconst barChartSelect = ref('colNo2')\nconst lineChartSelect = ref('colNo12')\nconst selectChange =()=>{\n    updateData()\n}\nconst switchDeptModal = reactive({\n    visible : false,\n    selectItem : '',\n    options : [],\n    loading : false\n})\nconst handleSwitchDept = ()=>{\n    switchDeptModal.visible = true\n    if(switchDeptModal.options.length === 0){\n        switch (sourceType) {\n            case 'dept':\n                getDeptData()\n                break;\n            case 'customer':\n                getAllCustomerData()\n                break;\n            case 'project':\n                getAllProjecttData()\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst getDeptData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            interval : month-1\n        }\n        queryYoyAnalysisDept(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.deptId\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllCustomerData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : month-1\n        }\n        getCustomer(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.title\n                        item.label = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllProjecttData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : month-1\n        }\n        getProject(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.label = item.title\n                        item.value = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            item.label = item.projectName\n                            item.value = item.projectName\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\n//部门数据\nconst getChartData = (id)=>{\n    let params = {\n        deptId : id || deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        tagKey : \"yoyAnalysis\",\n        interval : month-1,\n    }\n    chartContainerLoading.value = true\n    queryYoyAnalysisChart(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//客户数据\nconst getCustomerChart = (name)=>{\n    let params = {\n        deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        interval : month-1,\n        tagKey:\"yoyAnalysis2\",\n        title : name || title,\n    }\n    chartContainerLoading.value = true\n    queryCustomerYoyAnalysisChart(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//项目数据\nconst getProjectEchart = (obj)=>{\n    let params = {\n        deptId,\n        barType : unref(barChartSelect),\n        lineType :unref(lineChartSelect),\n        interval : month-1,\n        title : obj?.projectName || projectName,\n        tagKey:\"yoyAnalysis3\",\n        taxRate : obj?.taxRate || taxRate,\n        projectId : obj?.projectId || projectId\n    }\n    chartContainerLoading.value = true\n    getProjectEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { lastYear,thisYear } = res.data\n            chartOptions.legend = {\n                data: [` ${year-1}`,` ${year}`,`${year-1} `,`${year} `],\n                bottom : 0,\n            }\n            chartOptions.series =[ \n                {\n                    name: ` ${year-1}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#6BD4B3'\n                    },\n                    data: lastYear.bar\n                },\n                {\n                    name: ` ${year}`,\n                    type: 'bar',\n                    yAxisIndex: 2,\n                    itemStyle: {\n                        color : '#3491FA'\n                    },\n                    data: thisYear.bar\n                },\n                {\n                    name: `${year-1} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#FA6E6C'\n                    },\n                    data: lastYear.line\n                },\n                {\n                    name: `${year} `,\n                    type: 'line',\n                    itemStyle: {\n                        color : '#0D8731'\n                    },\n                    data: thisYear.line\n                },\n            ]\n            if(myChart){\n                myChart.setOption(chartOptions);\n            }\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//遍历树结构按条件找对应的数据\nfunction getOptionItem (arr,searchObj){\n    let currentSelectItem = {}\n    function searchItem(arr){\n        arr.forEach(item=>{\n            Object.keys(searchObj).forEach(key=>{\n                if(item[key] === searchObj[key]){\n                    currentSelectItem = item\n                }\n            })\n            if(item?.children?.length){\n                searchItem(item.children)\n            }\n        })\n    }\n    searchItem(arr)\n    return currentSelectItem\n}\n\nconst handleSwitchDeptModalOK = ()=>{\n    switchDeptModal.visible = false\n    if(switchDeptModal.selectItem){\n        let item\n        switch (sourceType) {\n            case 'dept':\n             item = getOptionItem(switchDeptModal.options,{ deptId : switchDeptModal.selectItem })\n            $bus.emit(\"updateStructure\", [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: item.deptName,\n                    isBack : true\n                },\n            ]);\n                getChartData(item.deptId)\n                break;\n            case 'customer':\n                 item = getOptionItem(switchDeptModal.options,{ title : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.title,\n                        isBack : true\n                    },\n                ]);\n                getCustomerChart(item.title)\n                break;\n            case 'project':\n                 item = getOptionItem(switchDeptModal.options,{ projectName : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    { type: \"text\", color: \"#333\", msg:  `${item.groupCustomerName}-${customerName}`},\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.projectName,\n                        isBack : true\n                    },\n                ]);\n                let { finPcode ,taxRate,projectName } = item\n                getProjectEchart({\n                    projectId :finPcode,\n                    taxRate,\n                    projectName\n                })\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst updateData = ()=>{\n    let breadList\n    switch (sourceType) {\n        case 'dept':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: deptName,\n                    isBack : true\n                },\n            ]\n            getChartData()\n            break;\n        case 'customer':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: title,\n                    isBack : true\n                },\n            ]\n            getCustomerChart()\n            break;\n        case 'project':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '同比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                { type: \"text\", color: \"#333\", msg:  `${title}-${customerName}`},\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: projectName,\n                    isBack : true\n                },\n            ]\n            getProjectEchart()\n            break;\n        default:\n            break;\n    }\n    $bus.emit(\"updateStructure\", breadList);\n}\nonBeforeMount(()=>{\n    updateData()\n})\n\nconst chartOptions = {\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                    color: '#999'\n                }\n            }\n        },\n        grid: {\n            left : '15%',\n        },\n        xAxis: [\n            {\n                type: 'category',\n                axisTick: {\n                        alignWithLabel: true\n                    },\n                data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul','Aug','Sep','Oct','Nov','Dec'],\n            },\n        ],\n        yAxis: [\n            {\n                type: 'value',\n                position: 'right',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                min : 10,\n                max : 100,\n                type: 'value',\n                position: 'left',\n                offset: 80,\n                boundaryGap: [0, 0.01],\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}%'\n                },\n                splitLine:{show: false}\n            },\n            {\n                type: 'value',\n                position: 'left',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            }\n        ],\n        series: []\n    }\nonMounted(()=>{\n    myChart = echarts.init(unref(chartContainerRef));\n    chartOptions && myChart.setOption(chartOptions);\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.img {\n    vertical-align: middle;\n    margin: 0 12px;\n}\n.m-r-90{\n    margin-right: 90px;\n}\n.m-r-80{\n    margin-right: 80px;\n}\n.chartContainer{\n    height: 600px;\n}\n.modal-title {\n  color: #5a5a5a;\n  font-size: 14px;\n  font-weight: bold;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}