{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted, onUnmounted, onBeforeMount, shallowRef, nextTick, toRaw } from \"vue\";\nimport { Message } from \"@arco-design/web-vue\";\nimport calenderTable from \"@/components/calenderTable.vue\";\nimport { useMenuStore, useBreadListStore, useUserInfoStore } from \"../store/index\";\nimport { storeToRefs } from \"pinia\";\nimport { menuSideBar, getDetailList } from \"../api/menu\";\nimport { __canvasWM } from \"../utils/watermark\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nimport { getCurrentTime, clearAllCookies } from \"@/utils/util.js\";\nimport { goLogin } from \"@/utils/getToken\";\nimport { password } from \"@/api/login\";\nimport { LOGIN_PATH, isTest } from '@/store/mutation-types.js';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let isDev = !LOGIN_PATH.split('//')[1].startsWith('test');\n    const router = useRouter();\n    const route = useRoute();\n    const currentRoute = router.currentRoute;\n    let {\n      year,\n      month,\n      day\n    } = getCurrentTime();\n    let currentDate = `${year}/${month}/${day}`;\n    const dateNow = ref(currentDate);\n    const selectedKeys = ref([]);\n    const innerWidth = window.innerWidth;\n\n    /*-------------- 面包屑导航-start------------------- */\n    let breadListStore = useBreadListStore();\n    const {\n      breadList\n    } = storeToRefs(breadListStore);\n    console.log(breadListStore.breadList, 'breadListStore.breadList');\n    /*-----------侧边栏菜单-start-------------------- */\n    let menuStore = useMenuStore();\n    const collapsed = ref(false);\n    //页面刷新后,根据当前页面path从菜单中找出对应的菜单key高亮显示，并更改导航路径\n    // const menuShowActive = ref(true)\n    const newPwdReg = ref('/^[0-9a-zA-Z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]{8,}$/');\n    const minLength = ref('');\n    const complexityStatus = ref();\n    const regList = ref([]);\n    const ruleArry = ref([]);\n    const regTip = ref('');\n    function updateMenuActive() {\n      const currentPagePath = route.path;\n      // menuShowActive.value = false\n      function getCurrentMenu(arr, url) {\n        let obj = {};\n        arr.forEach(item => {\n          if (item.children.length) {\n            item.children.forEach(jtem => {\n              if (jtem.url === url) {\n                obj = {\n                  defaultOpenMenu: item,\n                  defaultSelectedMenu: jtem\n                };\n              }\n            });\n          }\n        });\n        return obj;\n      }\n      let {\n        defaultOpenMenu,\n        defaultSelectedMenu\n      } = getCurrentMenu(toRaw(menuStore.menuList), currentPagePath);\n      if (defaultOpenMenu && defaultSelectedMenu) {\n        // defaultOpenkeys.value = [defaultOpenMenu.id];\n        // defaultSelectedKeys.value = [defaultSelectedMenu.id];\n        breadListStore.breadList = [{\n          name: defaultOpenMenu.name\n        }, {\n          name: defaultSelectedMenu.name\n        }];\n        // nextTick(()=>{\n        //   menuShowActive.value = true\n        // })\n      } else {\n        // menuShowActive.value = true\n      }\n    }\n    updateMenuActive();\n    //点击浏览器前进后退时更新菜单激活状态\n    window.addEventListener(\"popstate\", function (e) {\n      updateMenuActive();\n    });\n    const handleMenuItem = (item, jtem) => {\n      let menuArr = [];\n      menuArr.push({\n        name: item.name\n      });\n      menuArr.push({\n        name: jtem.name\n      });\n      breadListStore.breadList = menuArr;\n      router.push(jtem.url);\n    };\n    const onCollapse = (val, type) => {\n      collapsed.value = val;\n    };\n\n    /*---------------菜单切换事件总线通信-start---------------- */\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    $bus.on(\"updateMenu\", () => {\n      menuSideBar().then(res => {\n        if (res.code === \"000000000000\") {\n          menuStore.$patch(state => {\n            state.menuList = res.data.menuList;\n            state.permissions = res.data.permissions;\n          });\n        }\n      }).catch(err => {\n        Message.error(err.message || \"菜单更新失败\");\n      });\n    });\n    onUnmounted(() => {\n      $bus.off(\"updateMenu\");\n    });\n\n    /************* 返回禁用状态-start********************* */\n    const goBackDisabled = ref(false);\n    $bus.on(\"goBackDisabled\", bool => {\n      goBackDisabled.value = bool;\n    });\n    /*--------------获取登录用户信息-start-------------------- */\n    const userStore = useUserInfoStore();\n    const userInfoContent = reactive({\n      info: {}\n    });\n    const calenderVisible = ref(false);\n    const getInfo = async () => {\n      let userInfo = userStore.getUserInfo;\n      userInfoContent.info = userInfo;\n      __canvasWM({\n        content: `${userInfo.name || userInfo.userName || userInfo.nickName} ${userInfo.workNo}`\n      });\n    };\n    onBeforeMount(() => {\n      getInfo();\n    });\n    /**----------- 修改密码modal-start ------------- */\n    const formRef = ref(null);\n    const confirmLoading = ref(false);\n    const restPwdModalVisible = ref(false);\n    const restModalForm = reactive({\n      sourcePassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    });\n    const restPwdModal = () => {\n      restPwdModalVisible.value = true;\n      getUserDetail();\n    };\n    // 获取详情\n    const getUserDetail = () => {\n      getDetailList().then(res => {\n        if (res.code === \"000000000000\") {\n          minLength.value = String(res.data.complexityMinLength);\n          complexityStatus.value = res.data.complexityStatus;\n          regList.value = [{\n            id: 0,\n            reg: `^(?=.*[A-Z]){${minLength.value},}.+$`,\n            regTip: `请输入包含大写字母的密码`\n          }, {\n            id: 1,\n            reg: `^(?=.*[a-z]){${minLength.value},}.+$`,\n            regTip: `请输入包含小写字母的密码`\n          }, {\n            id: 2,\n            reg: `^(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip: `请输入包含数字的密码`\n          }, {\n            id: 3,\n            reg: `^(?=.*[A-Z])(?=.*[a-z]){${minLength.value},}.+$`,\n            regTip: `请输入包含字母的密码`\n          }, {\n            id: 4,\n            reg: `^(?=.*[A-Z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip: `请输入包含大写字母和数字的密码`\n          }, {\n            id: 5,\n            reg: `^(?=.*[a-z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip: `请输入包含小写字母和数字的密码`\n          }, {\n            id: 6,\n            reg: `^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip: `请输入包含字母和数字的密码`\n          }];\n          ruleArry.value = res.data.complexityRule.split(',').map(Number);\n          if (complexityStatus.value) {\n            if (!ruleArry.value.includes(4)) {\n              if (ruleArry.value.includes(1) && ruleArry.value.includes(2) && !ruleArry.value.includes(3)) {\n                newPwdReg.value = regList.value[3].reg;\n                regTip.value = regList.value[3].regTip;\n              } else if (ruleArry.value.includes(1) && ruleArry.value.includes(3) && !ruleArry.value.includes(2)) {\n                newPwdReg.value = regList.value[4].reg;\n                regTip.value = regList.value[4].regTip;\n              } else if (ruleArry.value.includes(2) && ruleArry.value.includes(3) && !ruleArry.value.includes(1)) {\n                newPwdReg.value = regList.value[5].reg;\n                regTip.value = regList.value[5].regTip;\n              } else if (ruleArry.value.includes(1) && ruleArry.value.includes(2) && ruleArry.value.includes(3)) {\n                newPwdReg.value = regList.value[6].reg;\n                regTip.value = regList.value[6].regTip;\n              } else if (ruleArry.value.includes(1) && !ruleArry.value.includes(2) && !ruleArry.value.includes(3)) {\n                newPwdReg.value = regList.value[0].reg;\n                regTip.value = regList.value[0].regTip;\n              } else if (ruleArry.value.includes(2) && !ruleArry.value.includes(1) && !ruleArry.value.includes(3)) {\n                newPwdReg.value = regList.value[1].reg;\n                regTip.value = regList.value[1].regTip;\n              } else if (ruleArry.value.includes(3) && !ruleArry.value.includes(1) && !ruleArry.value.includes(2)) {\n                newPwdReg.value = regList.value[2].reg;\n                regTip.value = regList.value[2].regTip;\n              }\n            }\n          }\n        }\n      }).catch(err => {\n        Message.error(err || \"获取密码策略失败\");\n      });\n    };\n    // 校验密码\n    const validateToNextPassword = (value, callback) => {\n      if (complexityStatus.value) {\n        if (restModalForm.newPassword.length < Number(minLength.value)) {\n          callback(`请输入长度大于或等于${minLength.value}位的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(1) && ruleArry.value.includes(2) && ruleArry.value.includes(3)) {\n          // let reg = new RegExp(/^[A-Za-z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含字母、数字和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(1) && !ruleArry.value.includes(3) && !ruleArry.value.includes(2)) {\n          // let reg = new RegExp(/^[A-Z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由大写字母或特殊字符组成的密码`);\n          callback(`请输入包含大写字母和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(2) && !ruleArry.value.includes(3) && !ruleArry.value.includes(1)) {\n          // let reg = new RegExp(/^[a-z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[a-z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由小写字母或特殊字符组成的密码`);\n          callback(`请输入包含小写字母和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(3) && !ruleArry.value.includes(1) && !ruleArry.value.includes(2)) {\n          // let reg = new RegExp(/^[0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由数字或特殊字符组成的密码`);\n          callback(`请输入包含数字和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(1) && ruleArry.value.includes(2) && !ruleArry.value.includes(3)) {\n          // let reg = new RegExp(/^[A-Za-z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由字母或特殊字符组成的密码`);\n          callback(`请输入包含字母和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(1) && ruleArry.value.includes(3) && !ruleArry.value.includes(2)) {\n          // let reg = new RegExp(/^[A-Z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由大写字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含大写字母、数字和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && ruleArry.value.includes(2) && ruleArry.value.includes(3) && !ruleArry.value.includes(1)) {\n          // let reg = new RegExp(/^[a-z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由小写字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含小写字母、数字和特殊字符的密码`);\n        }\n        if (ruleArry.value.includes(4) && !ruleArry.value.includes(3) && !ruleArry.value.includes(2) && !ruleArry.value.includes(1)) {\n          // let reg = new RegExp(/^[!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/);\n          if (reg.test(value)) {\n            callback();\n            return;\n          }\n          // callback(`请输入由特殊字符组成的密码`);\n          callback(`请输入包含特殊字符的密码`);\n        }\n        let reg = new RegExp(newPwdReg.value);\n        if (reg.test(value)) {\n          callback();\n          return;\n        }\n        callback(regTip.value);\n      } else {\n        callback();\n        return;\n      }\n    };\n    const compareToFirstPassword = (value, callback) => {\n      if (value && value !== restModalForm.newPassword) {\n        callback(\"两次输入的密码不一致 (｡•́︿•̀｡)\");\n        return;\n      }\n      callback();\n    };\n    const handleRestPwdModalCancel = () => {\n      restPwdModalVisible.value = false;\n      confirmLoading.value = false;\n      formRef.value.resetFields();\n    };\n    const handleRestPwdModalOK = () => {\n      confirmLoading.value = true;\n      formRef.value.validate(err => {\n        if (!err) {\n          const formData = new FormData();\n          formData.append(\"oldPwd\", restModalForm.sourcePassword);\n          formData.append(\"newPwd\", restModalForm.newPassword);\n          password(formData).then(res => {\n            if (res.code === \"000000000000\") {\n              Message.success(res.message);\n              restPwdModalVisible.value = false;\n              userStore.Logout().then(res => {\n                Message.success(res.message);\n                clearAllCookies();\n                setTimeout(() => {\n                  goLogin();\n                }, 600);\n              }).catch(err => {\n                Message.error(err || \"退出失败\");\n              });\n            } else {\n              Message.error(res.message);\n            }\n          }).finally(() => {\n            confirmLoading.value = false;\n          });\n        }\n      });\n    };\n    /*------- 退出登录modal-start -----------*/\n    const logoutModalVisible = ref(false);\n    const handleLogoutOk = () => {\n      userStore.Logout().then(res => {\n        Message.success(res.message);\n        clearAllCookies();\n        setTimeout(() => {\n          goLogin();\n        }, 600);\n      }).catch(err => {\n        Message.error(err || \"退出失败\");\n      });\n    };\n    // 点击日历\n    const handleCalender = () => {\n      calenderVisible.value = true;\n    };\n    // 关闭日历\n    const handleCloseCalender = () => {\n      calenderVisible.value = false;\n    };\n    /*---------- 左上角显示结构---------------*/\n    const showStructureArr = ref([]);\n    $bus.on(\"updateStructure\", val => {\n      showStructureArr.value = Array.isArray(val) && val || [];\n    });\n    onUnmounted(() => {\n      $bus.off(\"updateStructure\");\n    });\n    const goPage = (params, isBack = false) => {\n      if (isBack) {\n        router.go(-1);\n        return;\n      }\n      $bus.emit(\"goBack\", params);\n    };\n\n    /**滚动条滚动事件 */\n    onMounted(() => {\n      selectedKeys.value = [breadListStore.breadList.length > 0 && breadListStore.breadList[1].name ? breadListStore.breadList[1].name : '下钻分析'];\n      let layoutMainDom = document.querySelector('#a-layout-main');\n      let prevScrollPos = layoutMainDom.pageYOffset || layoutMainDom.scrollTop;\n      layoutMainDom.addEventListener('scroll', e => {\n        let currentScrollPos = layoutMainDom.pageYOffset || layoutMainDom.scrollTop;\n        if (currentScrollPos > prevScrollPos) {\n          $bus.emit('handleScroll', {\n            scrollTop: e.target.scrollTop,\n            direction: 'down'\n          });\n        } else {\n          $bus.emit('handleScroll', {\n            scrollTop: e.target.scrollTop,\n            direction: 'up'\n          });\n        }\n        prevScrollPos = currentScrollPos;\n      });\n    });\n    const __returned__ = {\n      get isDev() {\n        return isDev;\n      },\n      set isDev(v) {\n        isDev = v;\n      },\n      router,\n      route,\n      currentRoute,\n      get year() {\n        return year;\n      },\n      set year(v) {\n        year = v;\n      },\n      get month() {\n        return month;\n      },\n      set month(v) {\n        month = v;\n      },\n      get day() {\n        return day;\n      },\n      set day(v) {\n        day = v;\n      },\n      get currentDate() {\n        return currentDate;\n      },\n      set currentDate(v) {\n        currentDate = v;\n      },\n      dateNow,\n      selectedKeys,\n      innerWidth,\n      get breadListStore() {\n        return breadListStore;\n      },\n      set breadListStore(v) {\n        breadListStore = v;\n      },\n      breadList,\n      get menuStore() {\n        return menuStore;\n      },\n      set menuStore(v) {\n        menuStore = v;\n      },\n      collapsed,\n      newPwdReg,\n      minLength,\n      complexityStatus,\n      regList,\n      ruleArry,\n      regTip,\n      updateMenuActive,\n      handleMenuItem,\n      onCollapse,\n      get $bus() {\n        return $bus;\n      },\n      set $bus(v) {\n        $bus = v;\n      },\n      goBackDisabled,\n      userStore,\n      userInfoContent,\n      calenderVisible,\n      getInfo,\n      formRef,\n      confirmLoading,\n      restPwdModalVisible,\n      restModalForm,\n      restPwdModal,\n      getUserDetail,\n      validateToNextPassword,\n      compareToFirstPassword,\n      handleRestPwdModalCancel,\n      handleRestPwdModalOK,\n      logoutModalVisible,\n      handleLogoutOk,\n      handleCalender,\n      handleCloseCalender,\n      showStructureArr,\n      goPage,\n      reactive,\n      ref,\n      onMounted,\n      onUnmounted,\n      onBeforeMount,\n      shallowRef,\n      nextTick,\n      toRaw,\n      get Message() {\n        return Message;\n      },\n      calenderTable,\n      get useMenuStore() {\n        return useMenuStore;\n      },\n      get useBreadListStore() {\n        return useBreadListStore;\n      },\n      get useUserInfoStore() {\n        return useUserInfoStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      },\n      get menuSideBar() {\n        return menuSideBar;\n      },\n      get getDetailList() {\n        return getDetailList;\n      },\n      get __canvasWM() {\n        return __canvasWM;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get getCurrentInstance() {\n        return getCurrentInstance;\n      },\n      get getCurrentTime() {\n        return getCurrentTime;\n      },\n      get clearAllCookies() {\n        return clearAllCookies;\n      },\n      get goLogin() {\n        return goLogin;\n      },\n      get password() {\n        return password;\n      },\n      get LOGIN_PATH() {\n        return LOGIN_PATH;\n      },\n      get isTest() {\n        return isTest;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","onMounted","onUnmounted","onBeforeMount","shallowRef","nextTick","toRaw","Message","calenderTable","useMenuStore","useBreadListStore","useUserInfoStore","storeToRefs","menuSideBar","getDetailList","__canvasWM","useRouter","useRoute","getCurrentInstance","getCurrentTime","clearAllCookies","goLogin","password","LOGIN_PATH","isTest","isDev","split","startsWith","router","route","currentRoute","year","month","day","currentDate","dateNow","selectedKeys","innerWidth","window","breadListStore","breadList","console","log","menuStore","collapsed","newPwdReg","minLength","complexityStatus","regList","ruleArry","regTip","updateMenuActive","currentPagePath","path","getCurrentMenu","arr","url","obj","forEach","item","children","length","jtem","defaultOpenMenu","defaultSelectedMenu","menuList","name","addEventListener","e","handleMenuItem","menuArr","push","onCollapse","val","type","value","$bus","appContext","config","globalProperties","on","then","res","code","$patch","state","data","permissions","catch","err","error","message","off","goBackDisabled","bool","userStore","userInfoContent","info","calenderVisible","getInfo","userInfo","getUserInfo","content","userName","nickName","workNo","formRef","confirmLoading","restPwdModalVisible","restModalForm","sourcePassword","newPassword","confirmPassword","restPwdModal","getUserDetail","String","complexityMinLength","id","reg","complexityRule","map","Number","includes","validateToNextPassword","callback","RegExp","test","compareToFirstPassword","handleRestPwdModalCancel","resetFields","handleRestPwdModalOK","validate","formData","FormData","append","success","Logout","setTimeout","finally","logoutModalVisible","handleLogoutOk","handleCalender","handleCloseCalender","showStructureArr","Array","isArray","goPage","params","isBack","go","emit","layoutMainDom","document","querySelector","prevScrollPos","pageYOffset","scrollTop","currentScrollPos","target","direction"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <a-layout class=\"layout-demo\">\n    <a-layout-sider breakpoint=\"lg\" :width=\"innerWidth>1800?240:180\" :collapsed=\"collapsed\" class=\"menu-container\" @collapse=\"onCollapse\">\n      <!-- logo部分 -->\n      <div class=\"logo\">\n        <span v-if=\"!collapsed\">经营管理系统</span>\n        <span v-else>\n          <img src=\"../../public/huibo.png\" width=\"24\" />\n        </span>\n      </div>\n      <!-- 菜单  -->\n      <a-menu\n        :default-open-keys=\"[(breadListStore.breadList.length > 0 && breadListStore.breadList[0].name)?breadListStore.breadList[0].name:'业务体验']\"\n        v-model:selected-keys=\"selectedKeys\"\n        show-collapse-button\n        :class=\"['aside-menu-content', { 'aside-menu': !collapsed }]\"\n        auto-open\n        @collapse=\"onCollapse\"\n      >\n        <a-sub-menu v-for=\"item of menuStore.getMenuList\" :key=\"item.name\">\n          <template #title>\n            <span>\n              <component :is=\"item.icon\"></component>\n              {{ item.name }}\n            </span>\n          </template>\n          <a-menu-item v-for=\"jtem of item.children\" :key=\"jtem.name\" @click=\"handleMenuItem(item, jtem)\">\n            {{ jtem.name }}\n          </a-menu-item>\n        </a-sub-menu>\n      </a-menu>\n    </a-layout-sider>\n    <a-layout class=\"content\">\n      <a-layout-header class=\"menu-horizontal flex-between-noCenter\" style=\"padding: 0 24px\">\n        <div>\n          <div\n            v-if=\"\n              [\n                'drill',\n                'empStatistics',\n                'ringContrastChart',\n                'lookChart',\n                'customerRingSame',\n                'projectRingSame',\n                'staticPicture',\n                'staticDetail',\n              ].includes(currentRoute.name)\n            \"\n            style=\"padding-left: 20px; font-size: 14px; min-height: 30px; color: #333; font-weight: 500\"\n          >\n            <template v-for=\"(item, index) of showStructureArr\" :key=\"index\">\n              <span v-if=\"item.type === 'text'\" :style=\"{ color: item.color, lineHeight: '32px' }\">\n                {{ item.msg }}\n              </span>\n              <a-button\n                type=\"text\"\n                v-else-if=\"item.type === 'button'\"\n                @click=\"goPage(item.params, item.isBack)\"\n                :disabled=\"goBackDisabled\"\n              >\n                {{ item.msg }}\n              </a-button>\n              <span v-if=\"index < showStructureArr.length - 1\" class=\"m-l-4 m-r-4\">/</span>\n            </template>\n          </div>\n          <!-- 面包屑  -->\n          <div v-else>\n            <a-breadcrumb :style=\"{ margin: '16px 0' }\">\n              <a-breadcrumb-item v-for=\"item of breadList\" :key=\"item.name\">{{ item.name }}</a-breadcrumb-item>\n            </a-breadcrumb>\n          </div>\n        </div>\n        <div>\n          <!-- 日历 -->\n          <a-space class=\"m-r-24\">\n            <a-button shape=\"round\" @click=\"handleCalender\">\n              <template #icon>\n                <span class=\"blue\"><icon-calendar size=\"medium\" /></span>\n              </template>\n              {{ dateNow }}\n            </a-button>\n          </a-space>\n          <!-- 退出登录部门 -->\n          <a-space class=\"userContent\">\n            <img src=\"huibo.png\" width=\"20\" />\n            <a-dropdown trigger=\"hover\">\n              <span class=\"pointer\">\n                {{ userInfoContent.info.name || userInfoContent.info.userName || userInfoContent.info.nickName }}\n              </span>\n              <template #content>\n                <a-doption v-if=\"isTest\" @click=\"restPwdModal\">修改密码</a-doption>\n                <a-doption @click=\"logoutModalVisible = true\">退出登录</a-doption>\n              </template>\n            </a-dropdown>\n          </a-space>\n        </div>\n      </a-layout-header>\n      <a-layout id='a-layout-main' class=\"main\" style=\"padding: 10px 10px 0 10px;margin:10px;\">\n        <a-layout-content>\n          <router-view />\n        </a-layout-content>\n        <!-- 内容区底部  -->\n        <!-- <a-layout-footer>Footer</a-layout-footer> -->\n      </a-layout>\n    </a-layout>\n  </a-layout>\n  <div class=\"dropDownContainer\"></div>\n  <a-modal\n    v-model:visible=\"logoutModalVisible\"\n    width=\"400px\"\n    @ok=\"handleLogoutOk\"\n    @cancel=\"logoutModalVisible = false\"\n    okText=\"确定\"\n    cancelText=\"取消\"\n    unmountOnClose\n  >\n    <template #title>退出登录</template>\n    <div>确定退出登录吗？</div>\n  </a-modal>\n  <a-modal :ok-loading=\"confirmLoading\" v-model:visible=\"restPwdModalVisible\" title=\"修改密码\">\n    <a-form\n      :model=\"restModalForm\"\n      :labelCol=\"{ xs: { span: 24 }, sm: { span: 5 } }\"\n      :wrapperCol=\"{ xs: { span: 24 }, sm: { span: 16 } }\"\n      ref=\"formRef\"\n    >\n      <a-form-item label=\"旧密码\" field=\"sourcePassword\" :rules=\"[{ required: true, message: '请填写旧密码' }]\" :feedback=\"true\">\n        <a-input-password placeholder=\"请输入旧密码\" v-model=\"restModalForm.sourcePassword\" />\n      </a-form-item>\n      <a-form-item\n        label=\"新密码\"\n        field=\"newPassword\"\n        :rules=\"[{ required: true, message: '请填写新密码' }, { validator: validateToNextPassword }]\"\n        :feedback=\"true\"\n        :validate-trigger=\"['change', 'input', 'blur']\"\n      >\n        <a-input-password placeholder=\"请输入新密码\" v-model=\"restModalForm.newPassword\" />\n      </a-form-item>\n      <a-form-item\n        label=\"确认新密码\"\n        field=\"confirmPassword\"\n        :rules=\"[{ required: true, message: '请再次输入新密码' }, { validator: compareToFirstPassword }]\"\n        :feedback=\"true\"\n        :validate-trigger=\"['change', 'input', 'blur']\"\n      >\n        <a-input-password placeholder=\"请再次输入新密码\" v-model=\"restModalForm.confirmPassword\" />\n      </a-form-item>\n    </a-form>\n    <template #footer>\n      <a-button @click=\"handleRestPwdModalCancel\">取消</a-button>\n      <a-button type=\"primary\" @click=\"handleRestPwdModalOK\">确定</a-button>\n    </template>\n  </a-modal>\n  <a-modal\n    v-model:visible=\"calenderVisible\"\n    width=\"1044px\"\n    :footer=\"false\"\n    :simple=\"true\"\n    :modalStyle=\"{ padding: '0 24px 10px' }\"\n  >\n    <template #title>\n      <span class=\"close\" @click=\"handleCloseCalender\">\n        <icon-close />\n      </span>\n    </template>\n    <calenderTable />\n  </a-modal>\n</template>\n<script setup>\nimport { reactive, ref, onMounted, onUnmounted, onBeforeMount, shallowRef, nextTick, toRaw } from \"vue\";\nimport { Message } from \"@arco-design/web-vue\";\nimport calenderTable from \"@/components/calenderTable.vue\";\nimport { useMenuStore, useBreadListStore, useUserInfoStore } from \"../store/index\";\nimport { storeToRefs } from \"pinia\";\nimport { menuSideBar,getDetailList } from \"../api/menu\";\nimport { __canvasWM } from \"../utils/watermark\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nimport { getCurrentTime,clearAllCookies } from \"@/utils/util.js\";\nimport { goLogin } from \"@/utils/getToken\";\nimport { password } from \"@/api/login\";\nimport { LOGIN_PATH,isTest } from '@/store/mutation-types.js'\nlet isDev = !LOGIN_PATH.split('//')[1].startsWith('test')\nconst router = useRouter();\nconst route = useRoute();\nconst currentRoute = router.currentRoute;\nlet { year, month, day } = getCurrentTime();\nlet currentDate = `${year}/${month}/${day}`;\nconst dateNow = ref(currentDate);\nconst selectedKeys = ref([]);\nconst innerWidth = window.innerWidth\n\n/*-------------- 面包屑导航-start------------------- */\nlet breadListStore = useBreadListStore();\nconst { breadList } = storeToRefs(breadListStore);\nconsole.log(breadListStore.breadList,'breadListStore.breadList');\n/*-----------侧边栏菜单-start-------------------- */\nlet menuStore = useMenuStore();\nconst collapsed = ref(false);\n//页面刷新后,根据当前页面path从菜单中找出对应的菜单key高亮显示，并更改导航路径\n// const menuShowActive = ref(true)\nconst newPwdReg = ref('/^[0-9a-zA-Z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]{8,}$/')\nconst minLength = ref('')\nconst complexityStatus = ref()\nconst regList =ref([])\nconst ruleArry=ref([])\nconst regTip = ref('')\nfunction updateMenuActive(){\n  const currentPagePath = route.path;\n  // menuShowActive.value = false\n  function getCurrentMenu(arr, url) {\n    let obj = {};\n    arr.forEach(item => {\n      if (item.children.length) {\n        item.children.forEach(jtem => {\n          if (jtem.url === url) {\n            obj = {\n              defaultOpenMenu: item,\n              defaultSelectedMenu: jtem,\n            };\n          }\n        });\n      }\n    });\n      return obj;\n  }\n  let { defaultOpenMenu, defaultSelectedMenu } = getCurrentMenu(toRaw(menuStore.menuList), currentPagePath);\n  if (defaultOpenMenu && defaultSelectedMenu) {\n    // defaultOpenkeys.value = [defaultOpenMenu.id];\n    // defaultSelectedKeys.value = [defaultSelectedMenu.id];\n    breadListStore.breadList = [{ name: defaultOpenMenu.name }, { name: defaultSelectedMenu.name }];\n    // nextTick(()=>{\n    //   menuShowActive.value = true\n    // })\n  }else{\n    // menuShowActive.value = true\n  }\n}\nupdateMenuActive()\n//点击浏览器前进后退时更新菜单激活状态\nwindow.addEventListener(\"popstate\", function (e){\n  updateMenuActive()\n} )\n\nconst handleMenuItem = (item, jtem) => {\n  let menuArr = [];\n  menuArr.push({ name: item.name });\n  menuArr.push({ name: jtem.name });\n  breadListStore.breadList = menuArr;\n  router.push(jtem.url);\n};\nconst onCollapse = (val, type) => {\n  collapsed.value = val;\n};\n\n/*---------------菜单切换事件总线通信-start---------------- */\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n$bus.on(\"updateMenu\", () => {\n  menuSideBar()\n    .then(res => {\n      if (res.code === \"000000000000\") {\n        menuStore.$patch(state => {\n          state.menuList = res.data.menuList;\n          state.permissions = res.data.permissions;\n        });\n      }\n    })\n    .catch(err => {\n      Message.error(err.message || \"菜单更新失败\");\n    });\n});\nonUnmounted(() => {\n  $bus.off(\"updateMenu\");\n});\n\n/************* 返回禁用状态-start********************* */\nconst goBackDisabled = ref(false);\n$bus.on(\"goBackDisabled\", bool => {\n  goBackDisabled.value = bool;\n});\n/*--------------获取登录用户信息-start-------------------- */\nconst userStore = useUserInfoStore();\nconst userInfoContent = reactive({\n  info: {},\n});\nconst calenderVisible = ref(false);\nconst getInfo = async () => {\n  let userInfo = userStore.getUserInfo;\n  userInfoContent.info = userInfo;\n  __canvasWM({\n    content: `${userInfo.name || userInfo.userName || userInfo.nickName} ${userInfo.workNo}`,\n  });\n};\nonBeforeMount(() => {\n  getInfo();\n});\n/**----------- 修改密码modal-start ------------- */\nconst formRef = ref(null);\nconst confirmLoading = ref(false);\nconst restPwdModalVisible = ref(false);\nconst restModalForm = reactive({\n  sourcePassword: \"\",\n  newPassword: \"\",\n  confirmPassword: \"\",\n});\nconst restPwdModal = ()=>{\n  restPwdModalVisible.value= true\n  getUserDetail()\n}\n// 获取详情\nconst getUserDetail = () => {\n  getDetailList()\n    .then(res => {\n      if (res.code === \"000000000000\") {\n        minLength.value = String(res.data.complexityMinLength);\n        complexityStatus.value = res.data.complexityStatus;\n        regList.value = [\n          {\n            id:0,\n            reg:`^(?=.*[A-Z]){${minLength.value},}.+$`,\n            regTip:`请输入包含大写字母的密码`\n          }, \n          {\n            id:1,\n            reg:`^(?=.*[a-z]){${minLength.value},}.+$`,\n            regTip:`请输入包含小写字母的密码`\n          },\n          {\n            id:2,\n            reg:`^(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip:`请输入包含数字的密码`\n          },\n          {\n            id:3,\n            reg:`^(?=.*[A-Z])(?=.*[a-z]){${minLength.value},}.+$`,\n            regTip:`请输入包含字母的密码`\n          },\n           {\n            id:4,\n            reg:`^(?=.*[A-Z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip:`请输入包含大写字母和数字的密码`\n          },\n          {\n            id:5,\n            reg:`^(?=.*[a-z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip:`请输入包含小写字母和数字的密码`\n          },\n          {\n            id:6,\n            reg:`^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]){${minLength.value},}.+$`,\n            regTip:`请输入包含字母和数字的密码`\n          },\n        ]\n        ruleArry.value = res.data.complexityRule.split(',').map(Number);\n        if(complexityStatus.value){\n          if(!ruleArry.value.includes(4)){\n              if(ruleArry.value.includes(1) && ruleArry.value.includes(2) && !ruleArry.value.includes(3)){\n                newPwdReg.value = regList.value[3].reg;\n                regTip.value = regList.value[3].regTip\n              }else\n              if(ruleArry.value.includes(1) && ruleArry.value.includes(3)&& !ruleArry.value.includes(2)){\n                newPwdReg.value = regList.value[4].reg;\n                regTip.value = regList.value[4].regTip\n              }else\n              if(ruleArry.value.includes(2) && ruleArry.value.includes(3) && !ruleArry.value.includes(1)){\n                newPwdReg.value = regList.value[5].reg;\n                regTip.value = regList.value[5].regTip\n              }else\n              if(ruleArry.value.includes(1) && ruleArry.value.includes(2)&& ruleArry.value.includes(3)){\n                newPwdReg.value = regList.value[6].reg;\n                regTip.value = regList.value[6].regTip\n              }else\n              if(ruleArry.value.includes(1)&& !ruleArry.value.includes(2)&& !ruleArry.value.includes(3)){\n                newPwdReg.value =regList.value[0].reg;\n                regTip.value = regList.value[0].regTip\n              }else\n              if(ruleArry.value.includes(2) && !ruleArry.value.includes(1) && !ruleArry.value.includes(3)){\n                newPwdReg.value = regList.value[1].reg;\n                  regTip.value = regList.value[1].regTip\n              }else\n              if(ruleArry.value.includes(3) && !ruleArry.value.includes(1) && !ruleArry.value.includes(2)){\n                newPwdReg.value = regList.value[2].reg;\n                regTip.value = regList.value[2].regTip\n              }\n          }\n        }\n      }\n    })\n    .catch(err => {\n      Message.error(err || \"获取密码策略失败\");\n    });\n};\n// 校验密码\nconst validateToNextPassword = (value, callback) => {\n  if(complexityStatus.value){\n      if(restModalForm.newPassword.length < Number(minLength.value)){\n        callback(`请输入长度大于或等于${minLength.value}位的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(1)&& ruleArry.value.includes(2) && ruleArry.value.includes(3)){\n          // let reg = new RegExp(/^[A-Za-z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含字母、数字和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(1) && !ruleArry.value.includes(3) && !ruleArry.value.includes(2)){\n          // let reg = new RegExp(/^[A-Z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由大写字母或特殊字符组成的密码`);\n          callback(`请输入包含大写字母和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(2) && !ruleArry.value.includes(3) && !ruleArry.value.includes(1)){\n          // let reg = new RegExp(/^[a-z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[a-z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由小写字母或特殊字符组成的密码`);\n          callback(`请输入包含小写字母和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(3) && !ruleArry.value.includes(1) && !ruleArry.value.includes(2)){\n          // let reg = new RegExp(/^[0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由数字或特殊字符组成的密码`);\n          callback(`请输入包含数字和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(1)&& ruleArry.value.includes(2) && !ruleArry.value.includes(3)){\n          // let reg = new RegExp(/^[A-Za-z!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由字母或特殊字符组成的密码`);\n          callback(`请输入包含字母和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(1)&&  ruleArry.value.includes(3) && !ruleArry.value.includes(2)){\n          // let reg = new RegExp(/^[A-Z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由大写字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含大写字母、数字和特殊字符的密码`);\n      }\n      if(ruleArry.value.includes(4) && ruleArry.value.includes(2)&&  ruleArry.value.includes(3) && !ruleArry.value.includes(1)){\n          // let reg = new RegExp(/^[a-z0-9!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由小写字母、数字或特殊字符组成的密码`);\n          callback(`请输入包含小写字母、数字和特殊字符的密码`);\n      }   \n      if(ruleArry.value.includes(4) && !ruleArry.value.includes(3) && !ruleArry.value.includes(2) && !ruleArry.value.includes(1)){\n          // let reg = new RegExp(/^[!@#$%^&*()\\-_=+\\[\\]{};:\\'\",<.>\\/?~]+$/)\n          let reg = new RegExp(/^(?=.*[!@#$%^&*()\\-_=+\\[\\]{}\\\\|;:'\",<.>/\\?~]).+$/)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          // callback(`请输入由特殊字符组成的密码`);\n          callback(`请输入包含特殊字符的密码`);\n      }   \n      let reg = new RegExp(newPwdReg.value)\n          if (reg.test(value)) {\n              callback();\n              return;\n          }\n          callback(regTip.value);\n  }else{\n    callback();\n    return;\n  }\n};\nconst compareToFirstPassword = (value, callback) => {\n  if (value && value !== restModalForm.newPassword) {\n    callback(\"两次输入的密码不一致 (｡•́︿•̀｡)\");\n    return;\n  }\n  callback();\n};\nconst handleRestPwdModalCancel = () => {\n  restPwdModalVisible.value = false;\n  confirmLoading.value = false;\n  formRef.value.resetFields();\n};\nconst handleRestPwdModalOK = () => {\n  confirmLoading.value = true;\n  formRef.value.validate(err => {\n    if (!err) {\n      const formData = new FormData();\n      formData.append(\"oldPwd\", restModalForm.sourcePassword);\n      formData.append(\"newPwd\", restModalForm.newPassword);\n      password(formData)\n        .then(res => {\n          if (res.code === \"000000000000\") {\n            Message.success(res.message);\n            restPwdModalVisible.value = false;\n            userStore\n              .Logout()\n              .then(res => {\n                Message.success(res.message);\n                clearAllCookies()\n                setTimeout(() => {\n                  goLogin();\n                }, 600);\n              })\n              .catch(err => {\n                Message.error(err || \"退出失败\");\n              });\n          } else {\n            Message.error(res.message);\n          }\n        })\n        .finally(() => {\n          confirmLoading.value = false;\n        });\n    }\n  });\n};\n/*------- 退出登录modal-start -----------*/\nconst logoutModalVisible = ref(false);\nconst handleLogoutOk = () => {\n  userStore\n    .Logout()\n    .then(res => {\n      Message.success(res.message);\n      clearAllCookies()\n      setTimeout(() => {\n        goLogin();\n      }, 600);\n    })\n    .catch(err => {\n      Message.error(err || \"退出失败\");\n    });\n};\n// 点击日历\nconst handleCalender = () => {\n  calenderVisible.value = true;\n};\n// 关闭日历\nconst handleCloseCalender = () => {\n  calenderVisible.value = false;\n};\n/*---------- 左上角显示结构---------------*/\nconst showStructureArr = ref([]);\n$bus.on(\"updateStructure\", val => {\n  showStructureArr.value = (Array.isArray(val) && val) || [];\n});\nonUnmounted(() => {\n  $bus.off(\"updateStructure\");\n});\nconst goPage = (params, isBack = false) => {\n  if (isBack) {\n    router.go(-1);\n    return;\n  }\n  $bus.emit(\"goBack\", params);\n};\n\n/**滚动条滚动事件 */\nonMounted(()=>{\n  selectedKeys.value = [(breadListStore.breadList.length > 0 && breadListStore.breadList[1].name)?breadListStore.breadList[1].name:'下钻分析'];\n  let layoutMainDom = document.querySelector('#a-layout-main')\n  let prevScrollPos = layoutMainDom.pageYOffset || layoutMainDom.scrollTop\n  layoutMainDom.addEventListener('scroll',e=>{\n    let currentScrollPos = layoutMainDom.pageYOffset || layoutMainDom.scrollTop\n    if (currentScrollPos > prevScrollPos){\n      $bus.emit('handleScroll', {\n        scrollTop : e.target.scrollTop,\n        direction : 'down'\n      })\n    } else {\n      $bus.emit('handleScroll', {\n        scrollTop : e.target.scrollTop,\n        direction : 'up'\n      })\n    }\n    prevScrollPos = currentScrollPos;\n    \n  })\n})\n</script>\n<style lang=\"scss\" scoped>\n.close {\n  font-size: 26px;\n  position: absolute;\n  left: 95%;\n  top: 2%;\n  z-index: 9999999;\n}\n.menu-container :deep(.arco-layout-sider-children) {\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 6px; /*高宽分别对应横竖滚动条的尺寸*/\n    height: 6px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 6px;\n    background: rgba(144, 147, 153, 0.5);\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 5px;\n    background: transparent;\n  }\n}\n.layout-demo {\n  height: 100vh;\n  background: var(--color-fill-2);\n  border: 1px solid var(--color-border);\n}\n.layout-demo .content {\n  overflow: visible;\n  width: calc(100vw - 240px);\n}\n.layout-demo :deep(.arco-layout-sider) {\n  &::-webkit-scrollbar {\n    width: 6px; /*高宽分别对应横竖滚动条的尺寸*/\n    height: 6px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 6px;\n    background: rgba(144, 147, 153, 0.5);\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 5px;\n    background: transparent;\n  }\n}\n.layout-demo :deep(.arco-layout-sider) .logo {\n  height: 64px;\n  text-align: center;\n  line-height: 64px;\n  font-weight: bold;\n  font-size: 20px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #f2f2f2;\n}\n// .layout-demo :deep(.arco-layout-sider-light) .logo{\n//   background: var(--color-fill-2);\n// }\n.layout-demo .menu-horizontal :deep(.arco-menu-light) {\n  background-color: transparent;\n}\n.layout-demo :deep(.arco-layout-header) {\n  height: 64px;\n  line-height: 64px;\n  background: var(--color-bg-3);\n  //background-color: var(--color-fill-2);\n}\n.layout-demo :deep(.arco-layout-footer) {\n  height: 48px;\n  color: var(--color-text-2);\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 48px;\n}\n.layout-demo :deep(.arco-layout-content) {\n  color: var(--color-text-2);\n  font-weight: 400;\n  font-size: 14px;\n  background: var(--color-bg-3);\n  // padding: 30px;\n}\n.layout-demo .main {\n  //background: var(--color-bg-3);\n  background-color: var(--color-fill-2);\n  overflow-y: auto;\n}\n.layout-demo :deep(.arco-menu) {\n  min-height: calc(100vh - 78px);\n}\n.layout-demo .aside-menu :deep(.arco-menu-collapse-button) {\n  position: fixed;\n  left: 140px;\n  bottom: 14px;\n}\n.layout-demo .aside-menu-content {\n  margin-top: 13px;\n}\n.layout-demo .aside-menu-content :deep(.arco-menu-inner) {\n  padding-right: 0;\n}\n.layout-demo .aside-menu-content :deep(.arco-menu-item.arco-menu-selected) {\n  border-right: 4px solid #5370ff;\n}\n.userContent {\n  float: right;\n  color: var(--color-text-2);\n  margin-right: 20px;\n}\n.dropDownContainer {\n  position: absolute;\n}\n.dropDownContainer :deep(.arco-dropdown .arco-scrollbar) {\n  height: 390px;\n}\n.dropDownContainer :deep(.arco-dropdown .arco-scrollbar .arco-scrollbar-track) {\n  display: none;\n}\n.dropDownContainer :deep(.arco-dropdown-list-wrapper) {\n  max-height: none !important;\n  overflow-y: visible !important;\n}\n.grey {\n  color: #5a5a5a;\n}\n.bold {\n  font-weight: bold;\n}\n.gray {\n  color: #bfb4a9;\n}\n.font-14 {\n  font-size: 12px;\n}\n.mr-10 {\n  margin-right: 10px;\n}\n.close {\n  color: #dddddd;\n}\n.m-t-15 {\n  margin-top: 15px;\n}\n\n.pointer {\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}