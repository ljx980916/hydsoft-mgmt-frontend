{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"月份 :   \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \"展开至 :   \", -1 /* HOISTED */);\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"m-b-20\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", null, \"成本类型 :   \", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  style: {\n    \"float\": \"right\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_month_picker = _resolveComponent(\"a-month-picker\");\n  const _component_a_radio = _resolveComponent(\"a-radio\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_icon_download = _resolveComponent(\"icon-download\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_a_month_picker, {\n    style: {\n      \"width\": \"130px\"\n    },\n    \"model-value\": $setup.monthVal,\n    \"onUpdate:model-value\": _cache[0] || (_cache[0] = $event => $setup.monthVal = $event),\n    class: \"m-r-20\",\n    \"value-format\": \"YYYYMM\",\n    \"allow-clear\": false,\n    disabledDate: $setup.getDisabledTime,\n    onChange: $setup.monthChange\n  }, null, 8 /* PROPS */, [\"model-value\"]), _hoisted_4, _createVNode(_component_a_radio_group, {\n    type: \"button\",\n    \"model-value\": $setup.expandTabs,\n    \"onUpdate:model-value\": _cache[1] || (_cache[1] = $event => $setup.expandTabs = $event),\n    onChange: $setup.handleExpandTabsChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_radio, {\n      value: \"level1\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"一级部门\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"level2\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"二级部门\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"all\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"末级部门\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"])]), _createVNode(_component_a_table, {\n    columns: $setup.level1TableInfo.columns,\n    data: $setup.level1TableInfo.data,\n    bordered: {\n      cell: true\n    },\n    \"column-resizable\": \"\",\n    scroll: {\n      maxHeight: $setup.level1TableInfo.maxHeight\n    },\n    scrollbar: false,\n    pagination: false,\n    \"expanded-keys\": $setup.level1TableInfo.defaultExpandedKeys,\n    loading: $setup.level1TableInfo.loading,\n    ref: \"level1TableRef\",\n    onExpandedChange: $setup.expandedChange\n  }, {\n    deptName: _withCtx(({\n      record\n    }) => [_createElementVNode(\"a\", {\n      href: \"javaScript:void(0)\",\n      style: {\n        \"color\": \"#165dff\"\n      },\n      onClick: $event => $setup.jump('level2', record)\n    }, _toDisplayString(record.deptName), 9 /* TEXT, PROPS */, _hoisted_5)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"columns\", \"data\", \"scroll\", \"expanded-keys\", \"loading\"])], 512 /* NEED_PATCH */), [[_vShow, $setup.currentLevel === 'level1']]), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createVNode(_component_a_radio_group, {\n    type: \"button\",\n    \"model-value\": $setup.costType,\n    \"onUpdate:model-value\": _cache[2] || (_cache[2] = $event => $setup.costType = $event),\n    onChange: $setup.handleCostTypeChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_radio, {\n      value: \"ALL\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"ALL\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"G\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"G\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"C2\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"C2\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"S\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"S\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_radio, {\n      value: \"R\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"R\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_a_popconfirm, {\n    content: \"你确定要导出吗?\",\n    onOk: $setup.handleExport\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      loading: $setup.exportLoading,\n      style: {\n        \"border-radius\": \"4px\"\n      }\n    }, {\n      icon: _withCtx(() => [_createVNode(_component_icon_download)]),\n      default: _withCtx(() => [_createTextVNode(\"导出\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])]),\n    _: 1 /* STABLE */\n  })])]), _createVNode(_component_a_table, {\n    columns: $setup.level2TableInfo.columns,\n    data: $setup.level2TableInfo.data,\n    bordered: {\n      cell: true\n    },\n    \"column-resizable\": \"\",\n    scroll: {\n      maxHeight: $setup.level2TableInfo.maxHeight\n    },\n    scrollbar: false,\n    pagination: false,\n    loading: $setup.level2TableInfo.loading,\n    ref: \"level2TableRef\",\n    onExpandedChange: $setup.expandedChange\n  }, {\n    empName: _withCtx(({\n      record\n    }) => [_createTextVNode(_toDisplayString(record.empName) + \" \", 1 /* TEXT */), record.isDeptHead ? (_openBlock(), _createBlock(_component_a_tag, {\n      key: 0,\n      color: \"#5370FF\",\n      bordered: \"\",\n      style: {\n        background: '#E6F7FF',\n        fonSize: '12px',\n        color: '#5370FF',\n        marginLeft: '10px'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 部门负责人 \")]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"columns\", \"data\", \"scroll\", \"loading\"])], 512 /* NEED_PATCH */), [[_vShow, $setup.currentLevel === 'level2']])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_a_month_picker","$setup","disabledDate","onChange","_hoisted_4","_component_a_radio_group","type","_component_a_radio","value","_component_a_table","columns","data","bordered","cell","scroll","maxHeight","scrollbar","pagination","defaultExpandedKeys","loading","ref","onExpandedChange","deptName","record","href","onClick","_hoisted_6","_hoisted_7","_hoisted_8","_component_a_popconfirm","content","onOk","_component_a_button","icon","_component_icon_download","default","empName","isDeptHead","_createBlock","_component_a_tag","color","background","fonSize","marginLeft"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/views/staffStatistics/empStatistics.vue"],"sourcesContent":["<template>\n    <div class=\"defaultPadding\">\n        <div v-show=\"currentLevel === 'level1'\">\n            <div class=\"m-b-20\">\n                <span>月份 :  &nbsp;&nbsp;</span>\n                <a-month-picker\n                    style=\"width: 130px;\" \n                    v-model:model-value=\"monthVal\" \n                    class=\"m-r-20\" \n                    value-format=\"YYYYMM\"\n                    :allow-clear=\"false\"\n                    :disabledDate=\"getDisabledTime\"\n                    @change=\"monthChange\" \n                />\n                <span>展开至 : &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" v-model:model-value=\"expandTabs\" @change=\"handleExpandTabsChange\">\n                    <a-radio value=\"level1\">一级部门</a-radio>\n                    <a-radio value=\"level2\">二级部门</a-radio>\n                    <a-radio value=\"all\">末级部门</a-radio>\n                </a-radio-group>\n            </div>\n            <a-table\n                :columns=\"level1TableInfo.columns\"\n                :data=\"level1TableInfo.data\"\n                :bordered=\"{cell:true}\"\n                column-resizable\n                :scroll=\"{ maxHeight: level1TableInfo.maxHeight }\"\n                :scrollbar=\"false\"\n                :pagination=\"false\"\n                :expanded-keys=\"level1TableInfo.defaultExpandedKeys\"\n                :loading=\"level1TableInfo.loading\"\n                ref=\"level1TableRef\"\n                @expanded-change=\"expandedChange\"\n            >\n                <template #deptName=\"{record}\">\n                    <a href=\"javaScript:void(0)\" style=\"color: #165dff\" @click=\"jump('level2', record)\">\n                        {{ record.deptName }}\n                    </a>\n                </template>\n            </a-table>\n        </div>\n        <div v-show=\"currentLevel === 'level2'\">\n            <div class=\"m-b-20\">\n                <span>成本类型 :  &nbsp;&nbsp;</span>\n                <a-radio-group type=\"button\" v-model:model-value=\"costType\" @change=\"handleCostTypeChange\">\n                    <a-radio value=\"ALL\">ALL</a-radio>\n                    <a-radio value=\"G\">G</a-radio>\n                    <a-radio value=\"C2\">C2</a-radio>\n                    <a-radio value=\"S\">S</a-radio>\n                    <a-radio value=\"R\">R</a-radio>\n                </a-radio-group>\n                <div style=\"float:right\">\n                    <a-popconfirm content=\"你确定要导出吗?\" @ok=\"handleExport\">\n                        <a-button type=\"primary\" :loading=\"exportLoading\" style=\"border-radius: 4px\">\n                        <template #icon>\n                            <icon-download />\n                        </template>\n                        <template #default>导出</template>\n                        </a-button>\n                    </a-popconfirm>\n                </div>\n            </div>\n            <a-table\n                :columns=\"level2TableInfo.columns\"\n                :data=\"level2TableInfo.data\"\n                :bordered=\"{cell:true}\"\n                column-resizable\n                :scroll=\"{ maxHeight: level2TableInfo.maxHeight }\"\n                :scrollbar=\"false\"\n                :pagination=\"false\"\n                :loading=\"level2TableInfo.loading\"\n                ref=\"level2TableRef\"\n                @expanded-change=\"expandedChange\"\n            >\n                <template #empName=\"{ record }\">\n                    {{ record.empName }}\n                    <a-tag \n                        color=\"#5370FF\" \n                        v-if=\"record.isDeptHead\" \n                        bordered\n                        :style=\"{background:'#E6F7FF',fonSize:'12px',color:'#5370FF',marginLeft:'10px'}\"\n                    >\n                        部门负责人\n                    </a-tag>\n                </template>\n            </a-table>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, reactive, ref, nextTick, watchEffect,onUnmounted } from 'vue'\nimport { exportEmpExcel, queryDeptCostDetail,queryDeptsCostData } from '@/api/empStatistics'\nimport { dataAddKey,toInteger } from '@/utils/util'\nimport { Message } from '@arco-design/web-vue'\nimport moment from 'moment'\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n\n\nconst monthVal = ref(new Date())\nconst monthChange = ()=>{\n    getDeptsCostData()\n}\n//禁选日期\nconst getDisabledTime = current => {\n  return current.valueOf() < moment(\"2023-01-01 00:00:00\").valueOf();\n};\nconst currentLevel = ref('level1')\nconst expandTabs = ref('level1')\nconst handleExpandTabsChange = val=>{\n    expandTabs.value = val\n    level1TableInfo.defaultExpandedKeys = filterLevelkeys(sourceData,val)\n}\nconst filterLevelkeys = (arr,key)=>{\n    if(arr.length){\n        let expandKeys = []\n        switch (key) {\n            case 'all':\n                function getKeys(arr){\n                    arr.forEach(item=>{\n                        expandKeys.push(item.key)\n                        if(item?.children?.length){\n                            getKeys(item.children)\n                        }\n                    })\n                }\n                getKeys(arr)\n                break;\n            case 'level1' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                })\n                break;\n            case 'level2' :\n                arr.forEach(item=>{\n                    expandKeys.push(item.key)\n                    if(item?.children?.length){\n                       item.children.forEach(jtem=>{\n                        expandKeys.push(jtem.key)\n                       })\n                    }\n                })\n                break;\n            default:\n                expandKeys = []\n                break;\n        }\n        return expandKeys\n    }\n}\nconst level1TableInfo = reactive({\n    columns : [\n        {\n            title: '部门名称',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            fixed : 'left',\n            width : 230,\n            slotName : 'deptName'\n        },\n        {\n            title: 'G+C2人数',\n            dataIndex: 'GC2Number',\n            key: 'GC2Number',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'G+C2人数占比',\n            dataIndex: 'GC2Rate',\n            key: 'GC2Rate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'S人数',\n            dataIndex: 'SNumber',\n            key: 'SNumber',\n            width : 90,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'S人数占比',\n            dataIndex: 'SRate',\n            key: 'SRate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'R人数',\n            dataIndex: 'RNumber',\n            key: 'RNumber',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val) && val === 0){\n                    return '-'\n                }\n                return val\n            }    \n        },\n        {\n            title: 'R人数占比',\n            dataIndex: 'RRate',\n            key: 'RRate',\n            width : 110,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = +record[column.dataIndex]\n                if(!isNaN(val)){\n                    return (val*100).toFixed(2) + '%'\n                }\n                return val\n            }    \n        }\n    ],\n    data : [],\n    maxHeight : '600px',\n    loading :false,\n    defaultExpandedKeys : []\n})\nconst expandedChange = keys =>{\n    level1TableInfo.defaultExpandedKeys = keys\n}\nconst level2TableRef = ref(null);\nlet selectDept = ''\nconst jump = (val,record) =>{\n    selectDept = record.deptName\n    currentLevel.value = val\n    if(val === 'level2'){\n        getDeptCostDetail()\n        let breadList = [\n            { \n                type: \"button\",\n                color: \"#333\",\n                msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}`,\n                params: \"level1\",\n            },\n            {\n                type: \"text\",\n                color: \"#333\",\n                msg: record.deptName,\n            },\n        ];\n        $bus.emit(\"updateStructure\", breadList);\n        if( level2TableInfo.maxHeight === '600px' && level2TableRef.value){\n            nextTick(() => {\n                let head = level2TableRef.value.$el;\n                let innerHeight = window.innerHeight;\n                let elHeight = head.getBoundingClientRect().top;\n                level2TableInfo.maxHeight = innerHeight>900?innerHeight+130+'px':innerHeight - elHeight - 32 + \"px\";\n            });\n        }\n    }\n}\nlet sourceData = []\nconst getDeptsCostData = ()=>{\n    let params = {\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    level1TableInfo.loading = true\n    queryDeptsCostData(params).then(res=>{\n        if(res.code === '200'){\n            dataAddKey(res.data,\"key\",\"id\")\n            let expandKeys = []\n            res.data.forEach(item=>{\n                expandKeys.push(item.key)\n            })\n            level1TableInfo.data = res.data\n            level1TableInfo.defaultExpandedKeys = expandKeys\n            sourceData = res.data\n        }else {\n            Message.error(res.message || '请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '请求失败')\n    }).finally(()=>{\n        level1TableInfo.loading = false\n    })\n}\nonBeforeMount(()=>{\n    getDeptsCostData()\n})\nconst level1TableRef = ref(null);\nonMounted(() => {\n  if (level1TableRef.value) {\n    let head = level1TableRef.value.$el;\n    nextTick(() => {\n      let innerHeight = window.innerHeight;\n      let elHeight = head.getBoundingClientRect().top;\n      level1TableInfo.maxHeight = innerHeight - elHeight - 32 + \"px\";\n    });\n  }\n    $bus.on(\"goBack\", val => {\n        currentLevel.value = val;\n        switch (val) {\n            case \"level1\":\n            let breadList1 = [\n                { type: \"text\", color: \"#333\", msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}` },\n            ];\n            $bus.emit(\"updateStructure\", breadList1);\n            break;\n            default:\n            break;\n        }\n    });\n});\n\nconst costType = ref('ALL')\nconst handleCostTypeChange = val =>{\n    costType.value = val\n    getDeptCostDetail()\n}\nconst exportLoading = ref(false)\nconst handleExport = ()=>{\n    exportLoading.value = true\n    let deptName = selectDept\n    let params = {\n        costCenterName : '',\n        deptName,\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    exportEmpExcel(params).then(res=>{\n        const blob = new Blob([res]);\n        const fileReader = new FileReader();\n            fileReader.readAsText(res, 'utf-8');\n            fileReader.onerror = function () {\n            Message.error('导出文件失败')\n            return;\n            };\n        const fileName = `${moment(monthVal.value).format('YYYYMM')}_${deptName}招管销人员明细.xlsx`;\n        const link = document.createElement(\"a\");\n        link.download = fileName;\n        link.style.display = \"none\";\n        link.href = URL.createObjectURL(blob);\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n    }).catch(() => {\n      Message.error(\"导出失败\");\n    })\n    .finally(() => {\n        exportLoading.value = false\n    });\n}\nconst level2TableInfo = reactive({\n    columns : [\n        {\n            title: '部门',\n            dataIndex: 'deptName',\n            key: 'deptName',\n            fixed : 'left',\n            width : 190,\n        },\n        {\n            title: '姓名',\n            dataIndex: 'empName',\n            key: 'empName',\n            width : 170,\n            slotName : 'empName'\n        },\n        {\n            title: '成本类型',\n            dataIndex: 'costCenterName',\n            key: 'costCenterName',\n            width : 100,\n        },\n        {\n            title: '上级领导',\n            dataIndex: 'deptManager',\n            key: 'deptManager',\n            width : 110,\n        },\n        {\n            title: '城市',\n            dataIndex: 'workPlace',\n            key: 'workPlace',\n            width : 100,\n        },\n        {\n            title: '入职日期',\n            dataIndex: 'hireDate',\n            key: 'hireDate',\n            width : 130,\n        },\n        {\n            title: '管理团队人数',\n            dataIndex: 'teamCount',\n            key: 'teamCount',\n            width : 120,\n            cellStyle: { \"text-align\": \"right\" },\n            render : ({ record, column })=>{\n                let val = record[column.dataIndex]\n                if(typeof(val) === 'number'){\n                    return <span innerHTML={toInteger(val, 0, false)}></span>\n                }\n                return val\n            }    \n        }\n    ],\n    data : [],\n    maxHeight : '600px',\n    loading :false\n})\n\nconst getDeptCostDetail = ()=>{\n    level2TableInfo.loading = true\n    let params = {\n        costCenterName : costType.value === 'ALL'?'':costType.value,\n        deptName : selectDept,\n        month : moment(monthVal.value).format('YYYYMM')\n    }\n    queryDeptCostDetail(params).then(res=>{\n        if(res.code === '200'){\n            level2TableInfo.data = res.data\n        }else {\n            level2TableInfo.data = []\n            Message.error(res.message || '请求失败')\n        }\n    }).catch(err=>{\n        level2TableInfo.data = []\n        Message.error(err.message || '请求失败')\n    }).finally(()=>{\n        level2TableInfo.loading = false\n    })\n}\nwatchEffect(() => {\n  $bus.emit(\"updateStructure\", [\n    { type: \"text\", color: \"#333\", msg: `${moment(monthVal.value).format(\"YYYY年MM月\")}` },\n  ]);\n});\nonUnmounted(() => {\n  $bus.off(\"goBack\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}