{"ast":null,"code":"import { Generic } from './basic.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { uniq, difference, assign, toArray, without, isObject } from '../util/index.mjs';\n\n/**\n * @deprecated use the port api instead\n */\nexport const Model = Generic.define('devs.Model', {\n  inPorts: [],\n  outPorts: [],\n  size: {\n    width: 80,\n    height: 80\n  },\n  attrs: {\n    '.': {\n      magnet: false\n    },\n    '.label': {\n      text: 'Model',\n      'ref-x': .5,\n      'ref-y': 10,\n      'font-size': 18,\n      'text-anchor': 'middle',\n      fill: '#000'\n    },\n    '.body': {\n      'ref-width': '100%',\n      'ref-height': '100%',\n      stroke: '#000'\n    }\n  },\n  ports: {\n    groups: {\n      'in': {\n        position: {\n          name: 'left'\n        },\n        attrs: {\n          '.port-label': {\n            fill: '#000'\n          },\n          '.port-body': {\n            fill: '#fff',\n            stroke: '#000',\n            r: 10,\n            magnet: true\n          }\n        },\n        label: {\n          position: {\n            name: 'left',\n            args: {\n              y: 10\n            }\n          }\n        }\n      },\n      'out': {\n        position: {\n          name: 'right'\n        },\n        attrs: {\n          '.port-label': {\n            fill: '#000'\n          },\n          '.port-body': {\n            fill: '#fff',\n            stroke: '#000',\n            r: 10,\n            magnet: true\n          }\n        },\n        label: {\n          position: {\n            name: 'right',\n            args: {\n              y: 10\n            }\n          }\n        }\n      }\n    }\n  }\n}, {\n  markup: '<g class=\"rotatable\"><rect class=\"body\"/><text class=\"label\"/></g>',\n  portMarkup: '<circle class=\"port-body\"/>',\n  portLabelMarkup: '<text class=\"port-label\"/>',\n  initialize: function () {\n    Generic.prototype.initialize.apply(this, arguments);\n    this.on('change:inPorts change:outPorts', this.updatePortItems, this);\n    this.updatePortItems();\n  },\n  updatePortItems: function (model, changed, opt) {\n    // Make sure all ports are unique.\n    var inPorts = uniq(this.get('inPorts'));\n    var outPorts = difference(uniq(this.get('outPorts')), inPorts);\n    var inPortItems = this.createPortItems('in', inPorts);\n    var outPortItems = this.createPortItems('out', outPorts);\n    this.prop('ports/items', inPortItems.concat(outPortItems), assign({\n      rewrite: true\n    }, opt));\n  },\n  createPortItem: function (group, port) {\n    return {\n      id: port,\n      group: group,\n      attrs: {\n        '.port-label': {\n          text: port\n        }\n      }\n    };\n  },\n  createPortItems: function (group, ports) {\n    return toArray(ports).map(this.createPortItem.bind(this, group));\n  },\n  _addGroupPort: function (port, group, opt) {\n    var ports = this.get(group);\n    return this.set(group, Array.isArray(ports) ? ports.concat(port) : [port], opt);\n  },\n  addOutPort: function (port, opt) {\n    return this._addGroupPort(port, 'outPorts', opt);\n  },\n  addInPort: function (port, opt) {\n    return this._addGroupPort(port, 'inPorts', opt);\n  },\n  _removeGroupPort: function (port, group, opt) {\n    return this.set(group, without(this.get(group), port), opt);\n  },\n  removeOutPort: function (port, opt) {\n    return this._removeGroupPort(port, 'outPorts', opt);\n  },\n  removeInPort: function (port, opt) {\n    return this._removeGroupPort(port, 'inPorts', opt);\n  },\n  _changeGroup: function (group, properties, opt) {\n    return this.prop('ports/groups/' + group, isObject(properties) ? properties : {}, opt);\n  },\n  changeInGroup: function (properties, opt) {\n    return this._changeGroup('in', properties, opt);\n  },\n  changeOutGroup: function (properties, opt) {\n    return this._changeGroup('out', properties, opt);\n  }\n});\nexport const Atomic = Model.define('devs.Atomic', {\n  size: {\n    width: 80,\n    height: 80\n  },\n  attrs: {\n    '.label': {\n      text: 'Atomic'\n    }\n  }\n});\nexport const Coupled = Model.define('devs.Coupled', {\n  size: {\n    width: 200,\n    height: 300\n  },\n  attrs: {\n    '.label': {\n      text: 'Coupled'\n    }\n  }\n});\nexport const Link = LinkBase.define('devs.Link', {\n  attrs: {\n    '.connection': {\n      'stroke-width': 2\n    }\n  }\n});","map":{"version":3,"names":["Generic","Link","LinkBase","uniq","difference","assign","toArray","without","isObject","Model","define","inPorts","outPorts","size","width","height","attrs","magnet","text","fill","stroke","ports","groups","position","name","r","label","args","y","markup","portMarkup","portLabelMarkup","initialize","prototype","apply","arguments","on","updatePortItems","model","changed","opt","get","inPortItems","createPortItems","outPortItems","prop","concat","rewrite","createPortItem","group","port","id","map","bind","_addGroupPort","set","Array","isArray","addOutPort","addInPort","_removeGroupPort","removeOutPort","removeInPort","_changeGroup","properties","changeInGroup","changeOutGroup","Atomic","Coupled"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/jointjs/src/shapes/devs.mjs"],"sourcesContent":["import { Generic } from './basic.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { uniq, difference, assign, toArray, without, isObject } from '../util/index.mjs';\n\n/**\n * @deprecated use the port api instead\n */\nexport const Model = Generic.define('devs.Model', {\n    inPorts: [],\n    outPorts: [],\n    size: {\n        width: 80,\n        height: 80\n    },\n    attrs: {\n        '.': {\n            magnet: false\n        },\n        '.label': {\n            text: 'Model',\n            'ref-x': .5,\n            'ref-y': 10,\n            'font-size': 18,\n            'text-anchor': 'middle',\n            fill: '#000'\n        },\n        '.body': {\n            'ref-width': '100%',\n            'ref-height': '100%',\n            stroke: '#000'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: {\n                    name: 'left'\n                },\n                attrs: {\n                    '.port-label': {\n                        fill: '#000'\n                    },\n                    '.port-body': {\n                        fill: '#fff',\n                        stroke: '#000',\n                        r: 10,\n                        magnet: true\n                    }\n                },\n                label: {\n                    position: {\n                        name: 'left',\n                        args: {\n                            y: 10\n                        }\n                    }\n                }\n            },\n            'out': {\n                position: {\n                    name: 'right'\n                },\n                attrs: {\n                    '.port-label': {\n                        fill: '#000'\n                    },\n                    '.port-body': {\n                        fill: '#fff',\n                        stroke: '#000',\n                        r: 10,\n                        magnet: true\n                    }\n                },\n                label: {\n                    position: {\n                        name: 'right',\n                        args: {\n                            y: 10\n                        }\n                    }\n                }\n            }\n        }\n    }\n}, {\n    markup: '<g class=\"rotatable\"><rect class=\"body\"/><text class=\"label\"/></g>',\n    portMarkup: '<circle class=\"port-body\"/>',\n    portLabelMarkup: '<text class=\"port-label\"/>',\n\n    initialize: function() {\n\n        Generic.prototype.initialize.apply(this, arguments);\n\n        this.on('change:inPorts change:outPorts', this.updatePortItems, this);\n        this.updatePortItems();\n    },\n\n    updatePortItems: function(model, changed, opt) {\n\n        // Make sure all ports are unique.\n        var inPorts = uniq(this.get('inPorts'));\n        var outPorts = difference(uniq(this.get('outPorts')), inPorts);\n\n        var inPortItems = this.createPortItems('in', inPorts);\n        var outPortItems = this.createPortItems('out', outPorts);\n\n        this.prop('ports/items', inPortItems.concat(outPortItems), assign({ rewrite: true }, opt));\n    },\n\n    createPortItem: function(group, port) {\n\n        return {\n            id: port,\n            group: group,\n            attrs: {\n                '.port-label': {\n                    text: port\n                }\n            }\n        };\n    },\n\n    createPortItems: function(group, ports) {\n\n        return toArray(ports).map(this.createPortItem.bind(this, group));\n    },\n\n    _addGroupPort: function(port, group, opt) {\n\n        var ports = this.get(group);\n        return this.set(group, Array.isArray(ports) ? ports.concat(port) : [port], opt);\n    },\n\n    addOutPort: function(port, opt) {\n\n        return this._addGroupPort(port, 'outPorts', opt);\n    },\n\n    addInPort: function(port, opt) {\n\n        return this._addGroupPort(port, 'inPorts', opt);\n    },\n\n    _removeGroupPort: function(port, group, opt) {\n\n        return this.set(group, without(this.get(group), port), opt);\n    },\n\n    removeOutPort: function(port, opt) {\n\n        return this._removeGroupPort(port, 'outPorts', opt);\n    },\n\n    removeInPort: function(port, opt) {\n\n        return this._removeGroupPort(port, 'inPorts', opt);\n    },\n\n    _changeGroup: function(group, properties, opt) {\n\n        return this.prop('ports/groups/' + group, isObject(properties) ? properties : {}, opt);\n    },\n\n    changeInGroup: function(properties, opt) {\n\n        return this._changeGroup('in', properties, opt);\n    },\n\n    changeOutGroup: function(properties, opt) {\n\n        return this._changeGroup('out', properties, opt);\n    }\n});\n\nexport const Atomic = Model.define('devs.Atomic', {\n    size: {\n        width: 80,\n        height: 80\n    },\n    attrs: {\n        '.label': {\n            text: 'Atomic'\n        }\n    }\n});\n\nexport const Coupled = Model.define('devs.Coupled', {\n    size: {\n        width: 200,\n        height: 300\n    },\n    attrs: {\n        '.label': {\n            text: 'Coupled'\n        }\n    }\n});\n\nexport const Link = LinkBase.define('devs.Link', {\n    attrs: {\n        '.connection': {\n            'stroke-width': 2\n        }\n    }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}