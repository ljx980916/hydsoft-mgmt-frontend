{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview line\n * @author dengfuping_develop@163.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Line = /** @class */function (_super) {\n  __extends(Line, _super);\n  function Line() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'line';\n    _this.canFill = false;\n    _this.canStroke = true;\n    return _this;\n  }\n  Line.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false\n    });\n  };\n  Line.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          var id = isObject(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Use math calculation to get length of line\n   * @return {number} length\n   */\n  Line.prototype.getTotalLength = function () {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.length(x1, y1, x2, y2);\n  };\n  /**\n   * Use math calculation to get point according to ratio as same sa Canvas version\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  };\n  return Line;\n}(ShapeBase);\nexport default Line;","map":{"version":3,"mappings":";AAAA;;;;AAIA,SAASA,IAAI,IAAIC,QAAQ,QAAQ,cAAc;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,YAAY;AAC3C,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,SAAS,MAAM,QAAQ;AAE9B;EAAmBC;EAAnB;IAAA;IACEC,UAAI,GAAW,MAAM;IACrBA,aAAO,GAAY,KAAK;IACxBA,eAAS,GAAY,IAAI;;EAoD3B;EAlDEP,8BAAe,GAAf;IACE,IAAMQ,KAAK,GAAGC,iBAAMC,eAAe,WAAE;IACrC,6BACKF,KAAK;MACRG,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,CAAC;MACLC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;IAAK;EAEnB,CAAC;EAEDhB,yBAAU,GAAV,UAAWiB,OAAO,EAAEC,WAAW;IAC7B,IAAMV,KAAK,GAAG,IAAI,CAACW,IAAI,EAAE;IACzB,IAAMC,EAAE,GAAG,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC;IACzBnB,IAAI,CAACgB,WAAW,IAAIV,KAAK,EAAE,UAACc,KAAK,EAAEH,IAAI;MACrC,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,UAAU,EAAE;QAChD,IAAIG,KAAK,EAAE;UACT,IAAMC,EAAE,GAAGpB,QAAQ,CAACmB,KAAK,CAAC,GACtBL,OAAO,CAACO,QAAQ,CAAChB,KAAK,EAAEJ,YAAY,CAACe,IAAI,CAAC,CAAC,GAC3CF,OAAO,CAACQ,eAAe,CAACjB,KAAK,EAAEJ,YAAY,CAACe,IAAI,CAAC,CAAC;UACtDC,EAAE,CAACM,YAAY,CAACtB,YAAY,CAACe,IAAI,CAAC,EAAE,UAAQI,EAAE,MAAG,CAAC;SACnD,MAAM;UACLH,EAAE,CAACO,eAAe,CAACvB,YAAY,CAACe,IAAI,CAAC,CAAC;;OAEzC,MAAM,IAAIf,YAAY,CAACe,IAAI,CAAC,EAAE;QAC7BC,EAAE,CAACM,YAAY,CAACtB,YAAY,CAACe,IAAI,CAAC,EAAEG,KAAK,CAAC;;IAE9C,CAAC,CAAC;EACJ,CAAC;EAED;;;;EAIAtB,6BAAc,GAAd;IACQ,SAAqB,IAAI,CAACmB,IAAI,EAAE;MAA9BR,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,EAAE,QAAgB;IACtC,OAAOb,QAAQ,CAAC2B,MAAM,CAACjB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACxC,CAAC;EAED;;;;;EAKAd,uBAAQ,GAAR,UAAS6B,KAAa;IACd,SAAqB,IAAI,CAACV,IAAI,EAAE;MAA9BR,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,EAAE,QAAgB;IACtC,OAAOb,QAAQ,CAAC6B,OAAO,CAACnB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEe,KAAK,CAAC;EAChD,CAAC;EACH,WAAC;AAAD,CAAC,CAvDkBxB,SAAS;AAyD5B,eAAeL,IAAI","names":["Line","LineUtil","each","isObject","SVG_ATTR_MAP","ShapeBase","__extends","_this","attrs","_super","getDefaultAttrs","x1","y1","x2","y2","startArrow","endArrow","context","targetAttrs","attr","el","get","value","id","addArrow","getDefaultArrow","setAttribute","removeAttribute","length","ratio","pointAt"],"sourceRoot":"","sources":["../../src/shape/line.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}