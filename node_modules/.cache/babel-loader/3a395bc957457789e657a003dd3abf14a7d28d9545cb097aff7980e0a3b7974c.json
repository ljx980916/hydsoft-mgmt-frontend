{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  key: 3\n};\nimport { ref, reactive } from \"vue\";\nimport { calendarColumns } from \"./constColumns\";\nimport { postCalendarEventList, postSelectRoleList, getSelectDeptList, postAddInsertEvent, postUpdateInsertEvent, deleteInsertEvent } from \"@/api/calendarEvents.js\";\nimport { workDayList, naturalDayList } from \"@/utils/enum.js\";\nimport { Message } from \"@arco-design/web-vue\";\n// 表格配置信息\n\nexport default {\n  __name: 'calendarEvents',\n  setup(__props) {\n    const dataContent = reactive({\n      columns: calendarColumns,\n      dataSource: [],\n      loading: false,\n      pagination: {\n        pageNum: 1,\n        pageSize: 10,\n        total: 0\n      }\n    });\n    // 新增/编辑API权限弹窗开关\n    const eventVisible = ref(false);\n    const form = reactive({\n      isWorkday: \"0\"\n    });\n    const formRef = ref();\n    const title = ref(\"\");\n    const visibleRoleList = ref([]);\n    const relationDeptList = ref([]);\n    const fieldNames = ref({\n      value: \"deptName\",\n      label: \"deptName\"\n    });\n    const id = ref(\"\");\n    // 获取列表数据\n    const getList = () => {\n      dataContent.loading = true;\n      postCalendarEventList().then(res => {\n        if (res.code === \"200\") {\n          res.data.forEach((item, index) => {\n            item.key = item.id;\n            item.NO = index + 1;\n          });\n          dataContent.dataSource = res.data;\n          dataContent.pagination.total = res.data.length;\n        } else {\n          Message.error(res.desc || \"请求数据失败\");\n        }\n      }).catch(err => {\n        Message.error(err || \"请求数据失败\");\n      }).finally(() => {\n        dataContent.loading = false;\n      });\n    };\n    getList();\n    // 更改页码\n    const paginationChange = current => {\n      dataContent.pagination.pageNum = current;\n      getList();\n    };\n    // 更改页容量\n    const paginationPageSizeChange = pageSize => {\n      dataContent.pagination.pageSize = pageSize;\n      dataContent.pagination.pageNum = 1;\n      getList();\n    };\n    //获取可见角色\n    const getSelectRoleOption = () => {\n      postSelectRoleList().then(res => {\n        if (res.code === \"200\") {\n          visibleRoleList.value = res.data;\n        }\n      });\n    };\n    // 构造部门数据结构\n    const constructOptions = arr => {\n      Array.isArray(arr) && arr.forEach(item => {\n        if (item.children && item.children.length === 0) {\n          delete item.children;\n        }\n        if (item.children && item.children.length) {\n          constructOptions(item.children);\n        }\n      });\n      return arr;\n    };\n    // 获取关联部门\n    const getSelectDeptOption = () => {\n      getSelectDeptList().then(res => {\n        if (res.code === \"200\") {\n          relationDeptList.value = constructOptions(res.data);\n        }\n      });\n    };\n    // 新建设置事件\n    const handleAdd = () => {\n      id.value = \"\";\n      title.value = \"新建日历事件\";\n      eventVisible.value = true;\n      getSelectRoleOption();\n      getSelectDeptOption();\n      formRef.value.resetFields();\n    };\n    // 取消\n    const handleCancel = () => {\n      eventVisible.value = false;\n    };\n    // 确定\n    const handleModalOk = () => {\n      formRef.value.validate(err => {\n        if (!err) {\n          if (!id.value) {\n            const calendarEventEntity = {\n              period: form.period,\n              isWorkday: form.isWorkday,\n              visibleRole: String(form.visibleRole),\n              relationDept: form.relationDept,\n              eventDescription: form.eventDescription\n            };\n            postAddInsertEvent(calendarEventEntity).then(res => {\n              if (res.code === \"200\") {\n                Message.success(\"保存成功\");\n                eventVisible.value = false;\n                getList();\n              } else {\n                Message.error(res.desc || \"保存失败\");\n              }\n            }).catch(err => {\n              Message.err(err || \"保存失败\");\n            });\n          } else {\n            const calendarEventEntity = {\n              period: form.period,\n              isWorkday: form.isWorkday,\n              visibleRole: String(form.visibleRole),\n              relationDept: form.relationDept,\n              eventDescription: form.eventDescription,\n              id: id.value\n            };\n            postUpdateInsertEvent(calendarEventEntity).then(res => {\n              if (res.code === \"200\") {\n                Message.success(\"保存成功\");\n                eventVisible.value = false;\n                getList();\n              } else {\n                Message.error(res.desc || \"保存失败\");\n              }\n            }).catch(err => {\n              Message.err(err || \"保存失败\");\n            });\n          }\n        }\n      });\n    };\n    // 处理工作日、自然日天数\n    const construcPeriod = (arr, value) => {\n      return arr[arr.findIndex(item => item.label === Number(value))].label;\n    };\n    // 编辑\n    const handleUpdate = record => {\n      title.value = \"编辑日历事件\";\n      eventVisible.value = true;\n      getSelectRoleOption();\n      getSelectDeptOption();\n      form.isWorkday = String(record.isWorkday);\n      record.isWorkday === 0 ? form.period = construcPeriod(workDayList, record.period) : form.period = construcPeriod(naturalDayList, record.period);\n      form.visibleRole = record.visibleRole.split(\",\");\n      form.relationDept = record.relationDept;\n      form.eventDescription = record.eventDescription;\n      id.value = record.id;\n    };\n    // 删除\n    const handleDelete = record => {\n      deleteInsertEvent({\n        id: record.id\n      }).then(res => {\n        if (res.code == \"200\") {\n          Message.success(\"删除成功\");\n          getList();\n        } else {\n          Message.error(res.desc || \"删除失败\");\n        }\n      }).catch(err => {\n        Message.error(err || \"删除失败\");\n      });\n    };\n    return (_ctx, _cache) => {\n      const _component_a_button = _resolveComponent(\"a-button\");\n      const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n      const _component_a_table = _resolveComponent(\"a-table\");\n      const _component_a_option = _resolveComponent(\"a-option\");\n      const _component_a_select = _resolveComponent(\"a-select\");\n      const _component_a_radio = _resolveComponent(\"a-radio\");\n      const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n      const _component_a_form_item = _resolveComponent(\"a-form-item\");\n      const _component_a_cascader = _resolveComponent(\"a-cascader\");\n      const _component_a_input = _resolveComponent(\"a-input\");\n      const _component_a_form = _resolveComponent(\"a-form\");\n      const _component_a_modal = _resolveComponent(\"a-modal\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: handleAdd\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"新建设置事件\")]),\n        _: 1\n      }), _createVNode(_component_a_table, {\n        class: \"m-t-20\",\n        columns: dataContent.columns,\n        data: dataContent.dataSource,\n        loading: dataContent.loading,\n        scroll: {\n          x: true\n        },\n        pagination: {\n          total: dataContent.pagination.total,\n          current: dataContent.pagination.pageNum,\n          pageSize: dataContent.pagination.pageSize,\n          showTotal: true,\n          showPageSize: true,\n          showJumper: true,\n          onChange: paginationChange,\n          onPageSizeChange: paginationPageSizeChange\n        }\n      }, {\n        period: _withCtx(({\n          record\n        }) => [record.isWorkday === 0 && record.period > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"每月第\" + _toDisplayString(record.period) + \"个工作日\", 1)) : _createCommentVNode(\"\", true), record.isWorkday === 0 && record.period < 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"每月倒数第\" + _toDisplayString(record.period.slice(1)) + \"个工作日\", 1)) : _createCommentVNode(\"\", true), record.isWorkday === 1 && record.period > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"每月\" + _toDisplayString(record.period) + \"号\", 1)) : _createCommentVNode(\"\", true), record.isWorkday === 1 && record.period < 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"每月倒数第\" + _toDisplayString(record.period.slice(1)) + \"天\", 1)) : _createCommentVNode(\"\", true)]),\n        action: _withCtx(({\n          record\n        }) => [_createVNode(_component_a_button, {\n          type: \"text\",\n          onClick: $event => handleUpdate(record)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"编辑\")]),\n          _: 2\n        }, 1032, [\"onClick\"]), _createVNode(_component_a_popconfirm, {\n          content: \"确定要删除此行数据吗?\",\n          type: \"warning\",\n          onOk: $event => handleDelete(record)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_button, {\n            type: \"text\",\n            class: \"m-l-8\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"删除\")]),\n            _: 1\n          })]),\n          _: 2\n        }, 1032, [\"onOk\"])]),\n        _: 1\n      }, 8, [\"columns\", \"data\", \"loading\", \"pagination\"]), _createVNode(_component_a_modal, {\n        visible: eventVisible.value,\n        \"onUpdate:visible\": _cache[6] || (_cache[6] = $event => eventVisible.value = $event),\n        title: title.value,\n        \"title-align\": \"start\"\n      }, {\n        footer: _withCtx(() => [_createVNode(_component_a_button, {\n          onClick: handleCancel\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"取消\")]),\n          _: 1\n        }), _createVNode(_component_a_button, {\n          type: \"primary\",\n          onClick: handleModalOk\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"确定\")]),\n          _: 1\n        })]),\n        default: _withCtx(() => [_createVNode(_component_a_form, {\n          ref_key: \"formRef\",\n          ref: formRef,\n          mask: true,\n          model: form,\n          \"auto-label-width\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_form_item, {\n            field: \"period\",\n            label: \"周期规则\",\n            rules: [{\n              required: true,\n              message: '请选择周期规则'\n            }]\n          }, {\n            default: _withCtx(() => [form.isWorkday == '0' ? (_openBlock(), _createBlock(_component_a_select, {\n              key: 0,\n              modelValue: form.period,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => form.period = $event),\n              style: {\n                width: '180px'\n              },\n              placeholder: \"请选择周期规则\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(workDayList), (item, index) => {\n                return _openBlock(), _createBlock(_component_a_option, {\n                  value: item.label,\n                  key: index\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.value), 1)]),\n                  _: 2\n                }, 1032, [\"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])) : _createCommentVNode(\"\", true), form.isWorkday == '1' ? (_openBlock(), _createBlock(_component_a_select, {\n              key: 1,\n              modelValue: form.period,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => form.period = $event),\n              style: {\n                width: '180px'\n              },\n              placeholder: \"请选择周期规则\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(naturalDayList), (item, index) => {\n                return _openBlock(), _createBlock(_component_a_option, {\n                  value: item.label,\n                  key: index\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.value), 1)]),\n                  _: 2\n                }, 1032, [\"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])) : _createCommentVNode(\"\", true), _createVNode(_component_a_radio_group, {\n              type: \"button\",\n              modelValue: form.isWorkday,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => form.isWorkday = $event),\n              size: \"large\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_radio, {\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"工作日\")]),\n                _: 1\n              }), _createVNode(_component_a_radio, {\n                value: \"1\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"自然日\")]),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_a_form_item, {\n            field: \"visibleRole\",\n            label: \"可见角色\",\n            rules: [{\n              required: true,\n              message: '请选择可见角色'\n            }]\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_select, {\n              modelValue: form.visibleRole,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => form.visibleRole = $event),\n              style: {\n                width: '180px'\n              },\n              placeholder: \"请选择可见角色\",\n              multiple: \"\",\n              \"allow-clear\": \"\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(visibleRoleList.value, item => {\n                return _openBlock(), _createBlock(_component_a_option, {\n                  value: item.code,\n                  key: item.code\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1)]),\n                  _: 2\n                }, 1032, [\"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_a_form_item, {\n            field: \"relationDept\",\n            label: \"关联部门\",\n            rules: [{\n              required: true,\n              message: '请选择关联部门'\n            }]\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_cascader, {\n              modelValue: form.relationDept,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => form.relationDept = $event),\n              options: relationDeptList.value,\n              \"field-names\": fieldNames.value,\n              style: {\n                width: '320px'\n              },\n              placeholder: \"请选择关联部门\",\n              \"check-strictly\": \"\",\n              \"allow-clear\": \"\"\n            }, null, 8, [\"modelValue\", \"options\", \"field-names\"])]),\n            _: 1\n          }), _createVNode(_component_a_form_item, {\n            field: \"eventDescription\",\n            label: \"事件描述\",\n            rules: [{\n              required: true,\n              message: '请输入事件描述'\n            }]\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_input, {\n              modelValue: form.eventDescription,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => form.eventDescription = $event),\n              \"max-length\": 8,\n              placeholder: \"汉字不超过8个\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }, 8, [\"visible\", \"title\"])]);\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AA4EA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SACEC,qBAAqB,EACrBC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,QACZ,yBAAyB;AAChC,SAASC,WAAW,EAAEC,cAAc,QAAQ,iBAAiB;AAC7D,SAASC,OAAO,QAAQ,sBAAsB;AAC9C;;;;;IACA,MAAMC,WAAW,GAAGX,QAAQ,CAAC;MAC3BY,OAAO,EAAEX,eAAe;MACxBY,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE;QACVC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACF;IACA,MAAMC,YAAY,GAAGpB,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMqB,IAAI,GAAGpB,QAAQ,CAAC;MACpBqB,SAAS,EAAE;IACb,CAAC,CAAC;IACF,MAAMC,OAAO,GAAGvB,GAAG,EAAE;IACrB,MAAMwB,KAAK,GAAGxB,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMyB,eAAe,GAAGzB,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAM0B,gBAAgB,GAAG1B,GAAG,CAAC,EAAE,CAAC;IAChC,MAAM2B,UAAU,GAAG3B,GAAG,CAAC;MAAE4B,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAC;IAChE,MAAMC,EAAE,GAAG9B,GAAG,CAAC,EAAE,CAAC;IAClB;IACA,MAAM+B,OAAO,GAAG,MAAM;MACpBnB,WAAW,CAACG,OAAO,GAAG,IAAI;MAC1BZ,qBAAqB,EAAE,CACpB6B,IAAI,CAACC,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;UACtBD,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;YAChCD,IAAI,CAACE,GAAG,GAAGF,IAAI,CAACP,EAAE;YAClBO,IAAI,CAACG,EAAE,GAAGF,KAAK,GAAG,CAAC;UACrB,CAAC,CAAC;UACF1B,WAAW,CAACE,UAAU,GAAGmB,GAAG,CAACE,IAAI;UACjCvB,WAAW,CAACI,UAAU,CAACG,KAAK,GAAGc,GAAG,CAACE,IAAI,CAACM,MAAM;QAChD,CAAC,MAAM;UACL9B,OAAO,CAAC+B,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI,QAAQ,CAAC;QACrC;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZlC,OAAO,CAAC+B,KAAK,CAACG,GAAG,IAAI,QAAQ,CAAC;MAChC,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;QACblC,WAAW,CAACG,OAAO,GAAG,KAAK;MAC7B,CAAC,CAAC;IACN,CAAC;IACDgB,OAAO,EAAE;IACT;IACA,MAAMgB,gBAAgB,GAAGC,OAAO,IAAI;MAClCpC,WAAW,CAACI,UAAU,CAACC,OAAO,GAAG+B,OAAO;MACxCjB,OAAO,EAAE;IACX,CAAC;IACD;IACA,MAAMkB,wBAAwB,GAAG/B,QAAQ,IAAI;MAC3CN,WAAW,CAACI,UAAU,CAACE,QAAQ,GAAGA,QAAQ;MAC1CN,WAAW,CAACI,UAAU,CAACC,OAAO,GAAG,CAAC;MAClCc,OAAO,EAAE;IACX,CAAC;IACD;IACA,MAAMmB,mBAAmB,GAAG,MAAM;MAChC9C,kBAAkB,EAAE,CAAC4B,IAAI,CAACC,GAAG,IAAI;QAC/B,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;UACtBT,eAAe,CAACG,KAAK,GAAGK,GAAG,CAACE,IAAI;QAClC;MACF,CAAC,CAAC;IACJ,CAAC;IACD;IACA,MAAMgB,gBAAgB,GAAGC,GAAG,IAAI;MAC9BC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,IAChBA,GAAG,CAAChB,OAAO,CAACC,IAAI,IAAI;QAClB,IAAIA,IAAI,CAACkB,QAAQ,IAAIlB,IAAI,CAACkB,QAAQ,CAACd,MAAM,KAAK,CAAC,EAAE;UAC/C,OAAOJ,IAAI,CAACkB,QAAQ;QACtB;QACA,IAAIlB,IAAI,CAACkB,QAAQ,IAAIlB,IAAI,CAACkB,QAAQ,CAACd,MAAM,EAAE;UACzCU,gBAAgB,CAACd,IAAI,CAACkB,QAAQ,CAAC;QACjC;MACF,CAAC,CAAC;MACJ,OAAOH,GAAG;IACZ,CAAC;IACD;IACA,MAAMI,mBAAmB,GAAG,MAAM;MAChCnD,iBAAiB,EAAE,CAAC2B,IAAI,CAACC,GAAG,IAAI;QAC9B,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;UACtBR,gBAAgB,CAACE,KAAK,GAAGuB,gBAAgB,CAAClB,GAAG,CAACE,IAAI,CAAC;QACrD;MACF,CAAC,CAAC;IACJ,CAAC;IACD;IACA,MAAMsB,SAAS,GAAG,MAAM;MACtB3B,EAAE,CAACF,KAAK,GAAG,EAAE;MACbJ,KAAK,CAACI,KAAK,GAAG,QAAQ;MACtBR,YAAY,CAACQ,KAAK,GAAG,IAAI;MACzBsB,mBAAmB,EAAE;MACrBM,mBAAmB,EAAE;MACrBjC,OAAO,CAACK,KAAK,CAAC8B,WAAW,EAAE;IAC7B,CAAC;IACD;IACA,MAAMC,YAAY,GAAG,MAAM;MACzBvC,YAAY,CAACQ,KAAK,GAAG,KAAK;IAC5B,CAAC;IACD;IACA,MAAMgC,aAAa,GAAG,MAAM;MAC1BrC,OAAO,CAACK,KAAK,CAACiC,QAAQ,CAAChB,GAAG,IAAI;QAC5B,IAAI,CAACA,GAAG,EAAE;UACR,IAAI,CAACf,EAAE,CAACF,KAAK,EAAE;YACb,MAAMkC,mBAAmB,GAAG;cAC1BC,MAAM,EAAE1C,IAAI,CAAC0C,MAAM;cACnBzC,SAAS,EAAED,IAAI,CAACC,SAAS;cACzB0C,WAAW,EAAEC,MAAM,CAAC5C,IAAI,CAAC2C,WAAW,CAAC;cACrCE,YAAY,EAAE7C,IAAI,CAAC6C,YAAY;cAC/BC,gBAAgB,EAAE9C,IAAI,CAAC8C;YACzB,CAAC;YACD7D,kBAAkB,CAACwD,mBAAmB,CAAC,CACpC9B,IAAI,CAACC,GAAG,IAAI;cACX,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;gBACtBvB,OAAO,CAACyD,OAAO,CAAC,MAAM,CAAC;gBACvBhD,YAAY,CAACQ,KAAK,GAAG,KAAK;gBAC1BG,OAAO,EAAE;cACX,CAAC,MAAM;gBACLpB,OAAO,CAAC+B,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI,MAAM,CAAC;cACnC;YACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;cACZlC,OAAO,CAACkC,GAAG,CAACA,GAAG,IAAI,MAAM,CAAC;YAC5B,CAAC,CAAC;UACN,CAAC,MAAM;YACL,MAAMiB,mBAAmB,GAAG;cAC1BC,MAAM,EAAE1C,IAAI,CAAC0C,MAAM;cACnBzC,SAAS,EAAED,IAAI,CAACC,SAAS;cACzB0C,WAAW,EAAEC,MAAM,CAAC5C,IAAI,CAAC2C,WAAW,CAAC;cACrCE,YAAY,EAAE7C,IAAI,CAAC6C,YAAY;cAC/BC,gBAAgB,EAAE9C,IAAI,CAAC8C,gBAAgB;cACvCrC,EAAE,EAAEA,EAAE,CAACF;YACT,CAAC;YACDrB,qBAAqB,CAACuD,mBAAmB,CAAC,CACvC9B,IAAI,CAACC,GAAG,IAAI;cACX,IAAIA,GAAG,CAACC,IAAI,KAAK,KAAK,EAAE;gBACtBvB,OAAO,CAACyD,OAAO,CAAC,MAAM,CAAC;gBACvBhD,YAAY,CAACQ,KAAK,GAAG,KAAK;gBAC1BG,OAAO,EAAE;cACX,CAAC,MAAM;gBACLpB,OAAO,CAAC+B,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI,MAAM,CAAC;cACnC;YACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;cACZlC,OAAO,CAACkC,GAAG,CAACA,GAAG,IAAI,MAAM,CAAC;YAC5B,CAAC,CAAC;UACN;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IACD;IACA,MAAMwB,cAAc,GAAG,CAACjB,GAAG,EAAExB,KAAK,KAAK;MACrC,OAAOwB,GAAG,CAACA,GAAG,CAACkB,SAAS,CAACjC,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAK0C,MAAM,CAAC3C,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK;IACvE,CAAC;IACD;IACA,MAAM2C,YAAY,GAAGC,MAAM,IAAI;MAC7BjD,KAAK,CAACI,KAAK,GAAG,QAAQ;MACtBR,YAAY,CAACQ,KAAK,GAAG,IAAI;MACzBsB,mBAAmB,EAAE;MACrBM,mBAAmB,EAAE;MACrBnC,IAAI,CAACC,SAAS,GAAG2C,MAAM,CAACQ,MAAM,CAACnD,SAAS,CAAC;MACzCmD,MAAM,CAACnD,SAAS,KAAK,CAAC,GACjBD,IAAI,CAAC0C,MAAM,GAAGM,cAAc,CAAC5D,WAAW,EAAEgE,MAAM,CAACV,MAAM,CAAC,GACxD1C,IAAI,CAAC0C,MAAM,GAAGM,cAAc,CAAC3D,cAAc,EAAE+D,MAAM,CAACV,MAAM,CAAE;MACjE1C,IAAI,CAAC2C,WAAW,GAAGS,MAAM,CAACT,WAAW,CAACU,KAAK,CAAC,GAAG,CAAC;MAChDrD,IAAI,CAAC6C,YAAY,GAAGO,MAAM,CAACP,YAAY;MACvC7C,IAAI,CAAC8C,gBAAgB,GAAGM,MAAM,CAACN,gBAAgB;MAC/CrC,EAAE,CAACF,KAAK,GAAG6C,MAAM,CAAC3C,EAAE;IACtB,CAAC;IACD;IACA,MAAM6C,YAAY,GAAGF,MAAM,IAAI;MAC7BjE,iBAAiB,CAAC;QAAEsB,EAAE,EAAE2C,MAAM,CAAC3C;MAAG,CAAC,CAAC,CACjCE,IAAI,CAACC,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,IAAI,IAAI,KAAK,EAAE;UACrBvB,OAAO,CAACyD,OAAO,CAAC,MAAM,CAAC;UACvBrC,OAAO,EAAE;QACX,CAAC,MAAM;UACLpB,OAAO,CAAC+B,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI,MAAM,CAAC;QACnC;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZlC,OAAO,CAAC+B,KAAK,CAACG,GAAG,IAAI,MAAM,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC","names":["ref","reactive","calendarColumns","postCalendarEventList","postSelectRoleList","getSelectDeptList","postAddInsertEvent","postUpdateInsertEvent","deleteInsertEvent","workDayList","naturalDayList","Message","dataContent","columns","dataSource","loading","pagination","pageNum","pageSize","total","eventVisible","form","isWorkday","formRef","title","visibleRoleList","relationDeptList","fieldNames","value","label","id","getList","then","res","code","data","forEach","item","index","key","NO","length","error","desc","catch","err","finally","paginationChange","current","paginationPageSizeChange","getSelectRoleOption","constructOptions","arr","Array","isArray","children","getSelectDeptOption","handleAdd","resetFields","handleCancel","handleModalOk","validate","calendarEventEntity","period","visibleRole","String","relationDept","eventDescription","success","construcPeriod","findIndex","Number","handleUpdate","record","split","handleDelete"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/dataManagement/calendarEvents.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <a-button type=\"primary\" @click=\"handleAdd\">新建设置事件</a-button>\n    <a-table\n      class=\"m-t-20\"\n      :columns=\"dataContent.columns\"\n      :data=\"dataContent.dataSource\"\n      :loading=\"dataContent.loading\"\n      :scroll=\"{ x: true }\"\n      :pagination=\"{\n        total: dataContent.pagination.total,\n        current: dataContent.pagination.pageNum,\n        pageSize: dataContent.pagination.pageSize,\n        showTotal: true,\n        showPageSize: true,\n        showJumper: true,\n        onChange: paginationChange,\n        onPageSizeChange: paginationPageSizeChange,\n      }\"\n    >\n      <template #period=\"{ record }\">\n        <span v-if=\"record.isWorkday === 0 && record.period > 0\">每月第{{ record.period }}个工作日</span>\n        <span v-if=\"record.isWorkday === 0 && record.period < 0\">每月倒数第{{ record.period.slice(1) }}个工作日</span>\n        <span v-if=\"record.isWorkday === 1 && record.period > 0\">每月{{ record.period }}号</span>\n        <span v-if=\"record.isWorkday === 1 && record.period < 0\">每月倒数第{{ record.period.slice(1) }}天</span>\n      </template>\n      <template #action=\"{ record }\">\n        <a-button type=\"text\" @click=\"handleUpdate(record)\">编辑</a-button>\n        <a-popconfirm content=\"确定要删除此行数据吗?\" type=\"warning\" @ok=\"handleDelete(record)\">\n          <a-button type=\"text\" class=\"m-l-8\">删除</a-button>\n        </a-popconfirm>\n      </template>\n    </a-table>\n    <a-modal v-model:visible=\"eventVisible\" :title=\"title\" title-align=\"start\">\n      <a-form ref=\"formRef\" :mask=\"true\" :model=\"form\" auto-label-width>\n        <a-form-item field=\"period\" label=\"周期规则\" :rules=\"[{ required: true, message: '请选择周期规则' }]\">\n          <a-select v-if=\"form.isWorkday == '0'\" v-model=\"form.period\" :style=\"{ width: '180px' }\" placeholder=\"请选择周期规则\">\n            <a-option v-for=\"(item, index) of workDayList\" :value=\"item.label\" :key=\"index\">{{ item.value }}</a-option>\n          </a-select>\n          <a-select v-if=\"form.isWorkday == '1'\" v-model=\"form.period\" :style=\"{ width: '180px' }\" placeholder=\"请选择周期规则\">\n            <a-option v-for=\"(item, index) of naturalDayList\" :value=\"item.label\" :key=\"index\">{{ item.value }}</a-option>\n          </a-select>\n          <a-radio-group type=\"button\" v-model=\"form.isWorkday\" size=\"large\">\n            <a-radio value=\"0\">工作日</a-radio>\n            <a-radio value=\"1\">自然日</a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item field=\"visibleRole\" label=\"可见角色\" :rules=\"[{ required: true, message: '请选择可见角色' }]\">\n          <a-select v-model=\"form.visibleRole\" :style=\"{ width: '180px' }\" placeholder=\"请选择可见角色\" multiple allow-clear>\n            <a-option v-for=\"item of visibleRoleList\" :value=\"item.code\" :key=\"item.code\">{{ item.name }}</a-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item field=\"relationDept\" label=\"关联部门\" :rules=\"[{ required: true, message: '请选择关联部门' }]\">\n          <a-cascader\n            v-model=\"form.relationDept\"\n            :options=\"relationDeptList\"\n            :field-names=\"fieldNames\"\n            :style=\"{ width: '320px' }\"\n            placeholder=\"请选择关联部门\"\n            check-strictly\n            allow-clear\n          />\n        </a-form-item>\n        <a-form-item field=\"eventDescription\" label=\"事件描述\" :rules=\"[{ required: true, message: '请输入事件描述' }]\">\n          <a-input v-model=\"form.eventDescription\" :max-length=\"8\" placeholder=\"汉字不超过8个\" />\n        </a-form-item>\n      </a-form>\n      <template #footer>\n        <a-button @click=\"handleCancel\">取消</a-button>\n        <a-button type=\"primary\" @click=\"handleModalOk\">确定</a-button>\n      </template>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from \"vue\";\nimport { calendarColumns } from \"./constColumns\";\nimport {\n  postCalendarEventList,\n  postSelectRoleList,\n  getSelectDeptList,\n  postAddInsertEvent,\n  postUpdateInsertEvent,\n  deleteInsertEvent,\n} from \"@/api/calendarEvents.js\";\nimport { workDayList, naturalDayList } from \"@/utils/enum.js\";\nimport { Message } from \"@arco-design/web-vue\";\n// 表格配置信息\nconst dataContent = reactive({\n  columns: calendarColumns,\n  dataSource: [],\n  loading: false,\n  pagination: {\n    pageNum: 1,\n    pageSize: 10,\n    total: 0,\n  },\n});\n// 新增/编辑API权限弹窗开关\nconst eventVisible = ref(false);\nconst form = reactive({\n  isWorkday: \"0\",\n});\nconst formRef = ref();\nconst title = ref(\"\");\nconst visibleRoleList = ref([]);\nconst relationDeptList = ref([]);\nconst fieldNames = ref({ value: \"deptName\", label: \"deptName\" });\nconst id = ref(\"\");\n// 获取列表数据\nconst getList = () => {\n  dataContent.loading = true;\n  postCalendarEventList()\n    .then(res => {\n      if (res.code === \"200\") {\n        res.data.forEach((item, index) => {\n          item.key = item.id;\n          item.NO = index + 1;\n        });\n        dataContent.dataSource = res.data;\n        dataContent.pagination.total = res.data.length;\n      } else {\n        Message.error(res.desc || \"请求数据失败\");\n      }\n    })\n    .catch(err => {\n      Message.error(err || \"请求数据失败\");\n    })\n    .finally(() => {\n      dataContent.loading = false;\n    });\n};\ngetList();\n// 更改页码\nconst paginationChange = current => {\n  dataContent.pagination.pageNum = current;\n  getList();\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  dataContent.pagination.pageSize = pageSize;\n  dataContent.pagination.pageNum = 1;\n  getList();\n};\n//获取可见角色\nconst getSelectRoleOption = () => {\n  postSelectRoleList().then(res => {\n    if (res.code === \"200\") {\n      visibleRoleList.value = res.data;\n    }\n  });\n};\n// 构造部门数据结构\nconst constructOptions = arr => {\n  Array.isArray(arr) &&\n    arr.forEach(item => {\n      if (item.children && item.children.length === 0) {\n        delete item.children;\n      }\n      if (item.children && item.children.length) {\n        constructOptions(item.children);\n      }\n    });\n  return arr;\n};\n// 获取关联部门\nconst getSelectDeptOption = () => {\n  getSelectDeptList().then(res => {\n    if (res.code === \"200\") {\n      relationDeptList.value = constructOptions(res.data);\n    }\n  });\n};\n// 新建设置事件\nconst handleAdd = () => {\n  id.value = \"\";\n  title.value = \"新建日历事件\";\n  eventVisible.value = true;\n  getSelectRoleOption();\n  getSelectDeptOption();\n  formRef.value.resetFields();\n};\n// 取消\nconst handleCancel = () => {\n  eventVisible.value = false;\n};\n// 确定\nconst handleModalOk = () => {\n  formRef.value.validate(err => {\n    if (!err) {\n      if (!id.value) {\n        const calendarEventEntity = {\n          period: form.period,\n          isWorkday: form.isWorkday,\n          visibleRole: String(form.visibleRole),\n          relationDept: form.relationDept,\n          eventDescription: form.eventDescription,\n        };\n        postAddInsertEvent(calendarEventEntity)\n          .then(res => {\n            if (res.code === \"200\") {\n              Message.success(\"保存成功\");\n              eventVisible.value = false;\n              getList();\n            } else {\n              Message.error(res.desc || \"保存失败\");\n            }\n          })\n          .catch(err => {\n            Message.err(err || \"保存失败\");\n          });\n      } else {\n        const calendarEventEntity = {\n          period: form.period,\n          isWorkday: form.isWorkday,\n          visibleRole: String(form.visibleRole),\n          relationDept: form.relationDept,\n          eventDescription: form.eventDescription,\n          id: id.value,\n        };\n        postUpdateInsertEvent(calendarEventEntity)\n          .then(res => {\n            if (res.code === \"200\") {\n              Message.success(\"保存成功\");\n              eventVisible.value = false;\n              getList();\n            } else {\n              Message.error(res.desc || \"保存失败\");\n            }\n          })\n          .catch(err => {\n            Message.err(err || \"保存失败\");\n          });\n      }\n    }\n  });\n};\n// 处理工作日、自然日天数\nconst construcPeriod = (arr, value) => {\n  return arr[arr.findIndex(item => item.label === Number(value))].label;\n};\n// 编辑\nconst handleUpdate = record => {\n  title.value = \"编辑日历事件\";\n  eventVisible.value = true;\n  getSelectRoleOption();\n  getSelectDeptOption();\n  form.isWorkday = String(record.isWorkday);\n  record.isWorkday === 0\n    ? (form.period = construcPeriod(workDayList, record.period))\n    : (form.period = construcPeriod(naturalDayList, record.period));\n  form.visibleRole = record.visibleRole.split(\",\");\n  form.relationDept = record.relationDept;\n  form.eventDescription = record.eventDescription;\n  id.value = record.id;\n};\n// 删除\nconst handleDelete = record => {\n  deleteInsertEvent({ id: record.id })\n    .then(res => {\n      if (res.code == \"200\") {\n        Message.success(\"删除成功\");\n        getList();\n      } else {\n        Message.error(res.desc || \"删除失败\");\n      }\n    })\n    .catch(err => {\n      Message.error(err || \"删除失败\");\n    });\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}