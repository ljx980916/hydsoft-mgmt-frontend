{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\n//     Backbone.js 1.4.1\n\n//     (c) 2010-2022 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function (factory) {\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self || typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function (_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n    // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'),\n      $;\n    try {\n      $ = require('jquery');\n    } catch (e) {}\n    factory(root, exports, _, $);\n\n    // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n})(function (root, Backbone, _, $) {\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.1';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function () {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function (iteratee, events, name, callback, opts) {\n    var i = 0,\n      names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function (name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function (obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function (events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context,\n        ctx = options.ctx,\n        listening = options.listening;\n      if (listening) listening.count++;\n      handlers.push({\n        callback: callback,\n        context: context,\n        ctx: context || ctx,\n        listening: listening\n      });\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function (obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function (name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function (obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function (events, name, callback, options) {\n    if (!events) return;\n    var context = options.context,\n      listeners = options.listeners;\n    var i = 0,\n      names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function (name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function (obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function (map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function () {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function (name) {\n    if (!this._events) return this;\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function (objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function (events, args) {\n    var ev,\n      i = -1,\n      l = events.length,\n      a1 = args[0],\n      a2 = args[1],\n      a3 = args[2];\n    switch (args.length) {\n      case 0:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n        return;\n      case 1:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n        return;\n      case 2:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n        return;\n      case 3:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n        return;\n      default:\n        while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n        return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function (listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function (name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function () {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function (attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n    // The value returned during the last failed validation.\n    validationError: null,\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Return a copy of the model's `attributes` object.\n    toJSON: function (options) {\n      return _.clone(this.attributes);\n    },\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Get the value of an attribute.\n    get: function (attr) {\n      return this.attributes[attr];\n    },\n    // Get the HTML-escaped value of an attribute.\n    escape: function (attr) {\n      return _.escape(this.get(attr));\n    },\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function (attr) {\n      return this.get(attr) != null;\n    },\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function (attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function (key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset = options.unset;\n      var silent = options.silent;\n      var changes = [];\n      var changing = this._changing;\n      this._changing = true;\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) {\n        var prevId = this.id;\n        this.id = this.get(this.idAttribute);\n        this.trigger('changeId', this, prevId, options);\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function (attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function (options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function (attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function (diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function (attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function () {\n      return _.clone(this._previousAttributes);\n    },\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var model = this;\n      var success = options.success;\n      options.success = function (resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function (key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n      options = _.extend({\n        validate: true,\n        parse: true\n      }, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function (resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n      return xhr;\n    },\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function (options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n      var destroy = function () {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n      options.success = function (resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function () {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new model with identical attributes to this one.\n    clone: function () {\n      return new this.constructor(this.attributes);\n    },\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function () {\n      return !this.has(this.idAttribute);\n    },\n    // Check if the model is currently in a valid state.\n    isValid: function (options) {\n      return this._validate({}, _.extend({}, options, {\n        validate: true\n      }));\n    },\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function (attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {\n        validationError: error\n      }));\n      return false;\n    }\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function (models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({\n      silent: true\n    }, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {\n    add: true,\n    remove: true,\n    merge: true\n  };\n  var addOptions = {\n    add: true,\n    remove: false\n  };\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function (array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function (options) {\n      return this.map(function (model) {\n        return model.toJSON(options);\n      });\n    },\n    // Proxy `Backbone.sync` by default.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function (models, options) {\n      return this.set(models, _.extend({\n        merge: false\n      }, options, addOptions));\n    },\n    // Remove a model, or a list of models from the set.\n    remove: function (models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {\n          added: [],\n          merged: [],\n          removed: removed\n        };\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function (models, options) {\n      if (models == null) return;\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n          // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function (m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({\n        silent: true\n      });\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function (models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({\n        silent: true\n      }, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n    // Add a model to the end of the collection.\n    push: function (model, options) {\n      return this.add(model, _.extend({\n        at: this.length\n      }, options));\n    },\n    // Remove a model from the end of the collection.\n    pop: function (options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n    // Add a model to the beginning of the collection.\n    unshift: function (model, options) {\n      return this.add(model, _.extend({\n        at: 0\n      }, options));\n    },\n    // Remove a model from the beginning of the collection.\n    shift: function (options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n    // Slice out a sub-array of models from the collection.\n    slice: function () {\n      return slice.apply(this.models, arguments);\n    },\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function (obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj, obj.idAttribute)] || obj.cid && this._byId[obj.cid];\n    },\n    // Returns `true` if the model is in the collection.\n    has: function (obj) {\n      return this.get(obj) != null;\n    },\n    // Get the model at the given index.\n    at: function (index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function (attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function (attrs) {\n      return this.where(attrs, true);\n    },\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function (options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n    // Pluck an attribute from each model in the collection.\n    pluck: function (attr) {\n      return this.map(attr + '');\n    },\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function (resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function (model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function (m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new collection with an identical list of models as this one.\n    clone: function () {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs, idAttribute) {\n      return attrs[idAttribute || this.model.prototype.idAttribute || 'id'];\n    },\n    // Get an iterator of all models in this collection.\n    values: function () {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n    // Get an iterator of all model IDs in this collection.\n    keys: function () {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function () {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function () {\n      this.length = 0;\n      this.models = [];\n      this._byId = {};\n    },\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function (attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model;\n      if (this.model.prototype) {\n        model = new this.model(attrs, options);\n      } else {\n        // ES class methods didn't have prototype\n        model = this.model(attrs, options);\n      }\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n    // Internal method called by both remove and set.\n    _removeModels: function (models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes, model.idAttribute);\n        if (id != null) delete this._byId[id];\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n    // Internal method to create a model's ties to a collection.\n    _addReference: function (model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function (model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function (event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'changeId') {\n          var prevId = this.modelId(model.previousAttributes(), model.idAttribute);\n          var id = this.modelId(model.attributes, model.idAttribute);\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function (collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function () {\n      return this;\n    };\n  }\n  CollectionIterator.prototype.next = function () {\n    if (this._collection) {\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes, model.idAttribute);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else {\n            // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {\n          value: value,\n          done: false\n        };\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n    return {\n      value: void 0,\n      done: true\n    };\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function (selector) {\n      return this.$el.find(selector);\n    },\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function () {\n      return this;\n    },\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function () {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function () {\n      this.$el.remove();\n    },\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function (element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function (el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function (events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function (eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function () {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function (eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function (tagName) {\n      return document.createElement(tagName);\n    },\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function () {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function (attributes) {\n      this.$el.attr(attributes);\n    }\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function (base, length, method, attribute) {\n    switch (length) {\n      case 1:\n        return function () {\n          return base[method](this[attribute]);\n        };\n      case 2:\n        return function (value) {\n          return base[method](this[attribute], value);\n        };\n      case 3:\n        return function (iteratee, context) {\n          return base[method](this[attribute], cb(iteratee, this), context);\n        };\n      case 4:\n        return function (iteratee, defaultVal, context) {\n          return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n        };\n      default:\n        return function () {\n          var args = slice.call(arguments);\n          args.unshift(this[attribute]);\n          return base[method].apply(base, args);\n        };\n    }\n  };\n  var addUnderscoreMethods = function (Class, base, methods, attribute) {\n    _.each(methods, function (length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function (iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function (model) {\n      return model.get(iteratee);\n    };\n    return iteratee;\n  };\n  var modelMatcher = function (attrs) {\n    var matcher = _.matches(attrs);\n    return function (model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {\n    forEach: 3,\n    each: 3,\n    map: 3,\n    collect: 3,\n    reduce: 0,\n    foldl: 0,\n    inject: 0,\n    reduceRight: 0,\n    foldr: 0,\n    find: 3,\n    detect: 3,\n    filter: 3,\n    select: 3,\n    reject: 3,\n    every: 3,\n    all: 3,\n    some: 3,\n    any: 3,\n    include: 3,\n    includes: 3,\n    contains: 3,\n    invoke: 0,\n    max: 3,\n    min: 3,\n    toArray: 1,\n    size: 1,\n    first: 3,\n    head: 3,\n    take: 3,\n    initial: 3,\n    rest: 3,\n    tail: 3,\n    drop: 3,\n    last: 3,\n    without: 0,\n    difference: 0,\n    indexOf: 3,\n    shuffle: 1,\n    lastIndexOf: 3,\n    isEmpty: 1,\n    chain: 1,\n    sample: 3,\n    partition: 3,\n    groupBy: 3,\n    countBy: 3,\n    sortBy: 3,\n    indexBy: 3,\n    findIndex: 3,\n    findLastIndex: 3\n  };\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {\n    keys: 1,\n    values: 1,\n    pairs: 1,\n    invert: 1,\n    pick: 0,\n    omit: 0,\n    chain: 1,\n    isEmpty: 1\n  };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([[Collection, collectionMethods, 'models'], [Model, modelMethods, 'attributes']], function (config) {\n    var Base = config[0],\n      methods = config[1],\n      attribute = config[2];\n    Base.mixin = function (obj) {\n      var mappings = _.reduce(_.functions(obj), function (memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function (method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {\n      type: type,\n      dataType: 'json'\n    };\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {\n        model: params.data\n      } : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function (xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function (xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function () {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function (options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam = /(\\(\\?)?:\\w+/g;\n  var splatParam = /\\*\\w+/g;\n  var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function (route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function (fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function (callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function (fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function () {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route,\n        routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function (route) {\n      route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      }).replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function (route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function (param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function () {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n    // Are we at the app root?\n    atRoot: function () {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n    // Does the pathname match the root?\n    matchRoot: function () {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function (fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function () {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function (window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n    // Get the pathname and search params, without the root.\n    getPath: function () {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function (fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function (options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options = _.extend({\n        root: '/'\n      }, this.options, options);\n      this.root = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState = !!this.options.pushState;\n      this._hasPushState = !!(this.history && this.history.pushState);\n      this._usePushState = this._wantsPushState && this._hasPushState;\n      this.fragment = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n          // Or if we've started out with a hash-based route, but we're currently\n          // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {\n            replace: true\n          });\n        }\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n      if (!this.options.silent) return this.loadUrl();\n    },\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function () {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function (route, callback) {\n      this.handlers.unshift({\n        route: route,\n        callback: callback\n      });\n    },\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function (e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function (fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function (handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function (fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {\n        trigger: !!options\n      };\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n        // If hash changes haven't been explicitly disabled, update the hash\n        // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n        // If you've told us that you explicitly don't want fallback hashchange-\n        // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function (location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History();\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function (protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function () {\n        return parent.apply(this, arguments);\n      };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function () {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function (model, options) {\n    var error = options.error;\n    options.error = function (resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n  return Backbone;\n});","map":{"version":3,"names":["factory","root","self","global","define","amd","_","$","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","Events","eventSplitter","_listening","eventsApi","iteratee","events","name","callback","opts","i","names","context","keys","length","test","split","on","_events","onApi","ctx","listening","listeners","_listeners","id","interop","listenTo","obj","_listenId","uniqueId","listeningTo","_listeningTo","Listening","error","tryCatchOn","options","handlers","count","push","off","offApi","stopListening","ids","isEmpty","cleanup","remaining","j","handler","_callback","once","onceMap","bind","listenToOnce","map","offer","apply","arguments","trigger","Math","max","args","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","call","listener","unbind","extend","Model","attributes","attrs","preinitialize","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","prevId","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","method","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","_isModel","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","isString","existing","_prepareModel","_addReference","orderChanged","some","m","index","_removeReference","previousModels","pop","unshift","shift","_byId","modelId","where","first","findWhere","Error","isFunction","sortBy","pluck","create","callbackOpts","values","CollectionIterator","ITERATOR_VALUES","ITERATOR_KEYS","entries","ITERATOR_KEYSVALUES","indexOf","_onModelEvent","event","$$iterator","Symbol","iterator","kind","_collection","_kind","_index","next","value","done","View","pick","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","find","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","undelegate","_createElement","document","createElement","className","_setAttributes","addMethod","attribute","cb","defaultVal","addUnderscoreMethods","Class","methods","each","instance","isObject","modelMatcher","matcher","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","chain","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","modelMethods","pairs","invert","omit","config","Base","mixin","mappings","functions","memo","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","rootPath","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","decodedFragment","title","_updateHash","assign","protoProps","staticProps","parent","child","__super__"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/backbone/backbone.js"],"sourcesContent":["//     Backbone.js 1.4.1\n\n//     (c) 2010-2022 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.1';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) {\n        var prevId = this.id;\n        this.id = this.get(this.idAttribute);\n        this.trigger('changeId', this, prevId, options);\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj, obj.idAttribute)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs, idAttribute) {\n      return attrs[idAttribute || this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n\n      var model;\n      if (this.model.prototype) {\n        model = new this.model(attrs, options);\n      } else {\n        // ES class methods didn't have prototype\n        model = this.model(attrs, options);\n      }\n\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes, model.idAttribute);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'changeId') {\n          var prevId = this.modelId(model.previousAttributes(), model.idAttribute);\n          var id = this.modelId(model.attributes, model.idAttribute);\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes, model.idAttribute);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n      .replace(optionalParam, '(?:$1)?')\n      .replace(namedParam, function(match, optional) {\n        return optional ? match : '([^/?]+)';\n      })\n      .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}