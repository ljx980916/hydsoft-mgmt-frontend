{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6a191e54\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"m-l-8\"\n};\nconst _hoisted_2 = {\n  class: \"date\"\n};\nconst _hoisted_3 = {\n  class: \"days\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_month_picker = _resolveComponent(\"a-month-picker\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_month_picker, {\n      modelValue: $setup.dateNow,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.dateNow = $event),\n      onChange: $setup.changeMonth,\n      style: {\n        \"width\": \"140px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_a_space, {\n    class: \"tagTip\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tipList, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.name,\n        class: \"flex-center m-l-40\"\n      }, [_createElementVNode(\"span\", {\n        style: _normalizeStyle({\n          borderRadius: '50%',\n          width: '14px',\n          height: '14px',\n          borderColor: item.borderColor,\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          backgroundColor: item.bgColor\n        })\n      }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_1, _toDisplayString(item.name), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.weeks, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"week\",\n      key: item\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dates, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: _normalizeClass([\"day\", {\n        isPrep: item.isPrep,\n        isNext: item.isNext,\n        isSelected: item.dateNowVal == $setup.selectedDate,\n        isDisabled: item.caleType == 5 || item.caleType == 6 || item.isPrep || item.isNext\n      }]),\n      key: item.dateNowVal\n    }, [_createCommentVNode(\" <span >{{ item.dateNowVal }}--{{selectedDate}}</span> \"), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.dayVal), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.eventList, jtem => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: jtem.dept,\n        class: \"m-t-8 m-l-4\"\n      }, [_createElementVNode(\"span\", {\n        style: _normalizeStyle({\n          width: '120px',\n          height: '25px',\n          backgroundColor: jtem.bgColor,\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: jtem.borderColor,\n          color: jtem.color,\n          fontSize: '14px',\n          lineHeight: '25px',\n          display: 'inline-block',\n          textAlign: 'center'\n        })\n      }, _toDisplayString(jtem.eventDescription), 5 /* TEXT, STYLE */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAiBYA,KAAK,EAAC;AAAO;;EAKlBA,KAAK,EAAC;AAAM;;EAiBLA,KAAK,EAAC;AAAM;;;;6DAtCxBC,aAEUC;sBADR,MAA+E,CAA/ED,aAA+EE;kBAAtDC,cAAO;iEAAPA,cAAO;MAAGC,QAAM,EAAED,kBAAW;MAAEE,KAAoB,EAApB;QAAA;MAAA;;;MAE1DL,aAiBUC;IAjBDF,KAAK,EAAC;EAAQ;sBAChB,MAAuB,oBAA5BO,oBAeMC,6BAfcJ,cAAO,EAAfK,IAAI;2BAAhBF,oBAeM;QAfwBG,GAAG,EAAED,IAAI,CAACE,IAAI;QAAEX,KAAK,EAAC;UAClDY,oBAUQ;QATLN,KAAK;;;;uBAA6GG,IAAI,CAACI,WAAW;;;2BAA2FJ,IAAI,CAACK;;+BAUrOF,oBAEO,QAFPG,UAEO,mBADFN,IAAI,CAACE,IAAI;;;;MAIlBC,oBAuCM,OAvCNI,UAuCM,GAtCJJ,oBAqCK,gCApCHL,oBAEKC,6BAF2BJ,YAAK,EAAbK,IAAI;yBAA5BF,oBAEK;MAFDP,KAAK,EAAC,MAAM;MAAwBU,GAAG,EAAED;wBACxCA,IAAI;qDAETF,oBAgCKC,6BA9BYJ,YAAK,EAAbK,IAAI;yBAFbF,oBAgCK;MA/BHP,KAAK,mBAAC,KAAK;gBAGiBS,IAAI,CAACQ,MAAM;gBAAoBR,IAAI,CAACS,MAAM;oBAAwBT,IAAI,CAACU,UAAU,IAAIf,mBAAY;oBAAwBK,IAAI,CAACW,QAAQ,SAASX,IAAI,CAACW,QAAQ,SAASX,IAAI,CAACQ,MAAM,IAAIR,IAAI,CAACS;;MADpNR,GAAG,EAAED,IAAI,CAACU;QAQbE,8EAA8D,EAC5DT,oBAA2C,QAA3CU,UAA2C,mBAArBb,IAAI,CAACc,MAAM,qCACjChB,oBAkBMC,6BAlBcC,IAAI,CAACe,SAAS,EAAtBC,IAAI;2BAAhBlB,oBAkBM;QAlB+BG,GAAG,EAAEe,IAAI,CAACC,IAAI;QAAE1B,KAAK,EAAC;UACzDY,oBAgBO;QAfJN,KAAK;;;2BAA+FmB,IAAI,CAACX,OAAO;;;uBAAmGW,IAAI,CAACZ,WAAW;iBAAuBY,IAAI,CAACE,KAAK;;;;;;0BAclQF,IAAI,CAACG,gBAAgB","names":["class","_createVNode","_component_a_space","_component_a_month_picker","$setup","onChange","style","_createElementBlock","_Fragment","item","key","name","_createElementVNode","borderColor","bgColor","_hoisted_1","_hoisted_2","isPrep","isNext","dateNowVal","caleType","_createCommentVNode","_hoisted_3","dayVal","eventList","jtem","dept","color","eventDescription"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/components/calenderTable.vue"],"sourcesContent":["<template>\n  <a-space>\n    <a-month-picker v-model=\"dateNow\" @change=\"changeMonth\" style=\"width: 140px\" />\n  </a-space>\n  <a-space class=\"tagTip\">\n    <div v-for=\"item in tipList\" :key=\"item.name\" class=\"flex-center m-l-40\">\n      <span\n        :style=\"{\n          borderRadius: '50%',\n          width: '14px',\n          height: '14px',\n          borderColor: item.borderColor,\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          backgroundColor: item.bgColor,\n        }\"\n      ></span>\n      <span class=\"m-l-8\">\n        {{ item.name }}\n      </span>\n    </div>\n  </a-space>\n  <div class=\"date\">\n    <ul>\n      <li class=\"week\" v-for=\"item in weeks\" :key=\"item\">\n        {{ item }}\n      </li>\n      <li\n        class=\"day\"\n        v-for=\"item in dates\"\n        :key=\"item.dateNowVal\"\n        :class=\"{\n          isPrep: item.isPrep,\n          isNext: item.isNext,\n          isSelected: item.dateNowVal == selectedDate,\n          isDisabled: item.caleType == 5 || item.caleType == 6 || item.isPrep || item.isNext,\n        }\"\n      >\n      <!-- <span >{{ item.dateNowVal }}--{{selectedDate}}</span> -->\n        <span class=\"days\">{{ item.dayVal }}</span>\n        <div v-for=\"jtem in item.eventList\" :key=\"jtem.dept\" class=\"m-t-8 m-l-4\">\n          <span\n            :style=\"{\n              width: '120px',\n              height: '25px',\n              backgroundColor: jtem.bgColor,\n              borderStyle: 'solid',\n              borderWidth: '1px',\n              borderColor: jtem.borderColor,\n              color: jtem.color,\n              fontSize: '14px',\n              lineHeight: '25px',\n              display: 'inline-block',\n              textAlign: 'center',\n            }\"\n          >\n            {{ jtem.eventDescription }}\n          </span>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { getCurrentTime } from \"@/utils/util.js\";\nimport { workingCalendar } from \"@/api/login.js\";\nlet { year, month, day } = getCurrentTime();\nlet currentDate = `${year}-${month}`;\nlet selectedVal = `${year}/${month}/${day}`;\nconst dateNow = ref(currentDate);\nconst weeks = ref([\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"]);\nconst dates = ref([]);\nconst selectedDate = ref(\"\");\nconst yearNow = ref(year);\nconst monthNow = ref(month);\nconst calenderEvents = ref([]);\nconst tipList = ref([\n  {\n    borderColor: \"#C3E7FE\",\n    bgColor: \"#E8F3FF\", // 蓝\n    name: \"FIN\",\n  },\n  {\n    borderColor: \"#FDCDC5\",\n    bgColor: \"#FFECE8\", // 红\n    name: \"BMD\",\n  },\n  {\n    borderColor: \"#FFE4BA\",\n    bgColor: \"#FFF7E8\", // 橘\n    name: \"HR\",\n  },\n]);\n// 更改month\nconst changeMonth = value => {\n  yearNow.value = value.slice(0, 4);\n  monthNow.value = value.slice(5);\n  dates.value = [];\n  getList();\n  initCalendar();\n};\n// 初始化日历\nconst initCalendar = () => {\n  if (Number(selectedVal.split(\"/\")[2]) < 10) {\n    selectedDate.value = `${selectedVal.split(\"/\")[0]}/${selectedVal.split(\"/\")[1]}/0${selectedVal.split(\"/\")[2]}`;\n  } else {\n    selectedDate.value = `${selectedVal.split(\"/\")[0]}/${selectedVal.split(\"/\")[1]}/${selectedVal.split(\"/\")[2]}`;\n  }\n  // ⚠️注意：new Date中的month要减1才是真正的本月月数，即本月：month - 1，下个月：month\n  // ⚠️注意：下个月的第0天即为本月的最后一天\n  // 上个月总天数（本月第0天日期）\n  const prepMonthDays = new Date(yearNow.value, monthNow.value - 1, 0).getDate();\n  // 上个月最后一天星期几（本月第0天星期数）\n  const prepMonthEndDayWeek = new Date(yearNow.value, monthNow.value - 1, 0).getDay();\n  // 当前月总天数（下个月第0天日期）\n  const thisMonthDays = new Date(yearNow.value, monthNow.value, 0).getDate();\n  // 当前月第一天是星期几\n  const firstDayWeek = new Date(yearNow.value, monthNow.value - 1, 1).getDay();\n  // 当前月最后一天是星期几（下个月第0天星期数）\n  const thisEndDayWeek = new Date(yearNow.value, monthNow.value, 0).getDay();\n  // 需要计算的总天数\n  var totalDays = firstDayWeek + thisMonthDays;\n  if (thisEndDayWeek < 6) {\n    // 星期天开始且本月最后一天是星期天之前，需补满最后一行\n    totalDays += 6 - thisEndDayWeek;\n  }\n  var index = 0;\n  for (index; index < totalDays; index++) {\n    // 上个月月底\n    if (index < firstDayWeek) {\n      // 上个月天数 - 上个月最后一天星期数 + 下标 (如：31 - 5 + 0)\n      const day = prepMonthDays - prepMonthEndDayWeek + index;\n      const date = new Date(yearNow.value, monthNow.value - 2, day).toLocaleDateString();\n      if (Number(date.split(\"/\")[2]) < 10) {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/0${date.split(\"/\")[2]}`;\n      } else {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/${date.split(\"/\")[2]}`;\n      }\n      if (day < 10) {\n        var dayVal = 0 + `${day}`;\n      } else {\n        var dayVal = day;\n      }\n      dates.value.push({ isPrep: true, dayVal, dateNowVal });\n    } else if (index >= firstDayWeek + thisMonthDays) {\n      // 下个月月初\n      // 下标 - 当前月总天数 - 当前月第一天星期数 + 1 (如：30 - 31 + 1 + 1)\n      const day = index - thisMonthDays - firstDayWeek + 1;\n      const date = new Date(yearNow.value, monthNow.value, day).toLocaleDateString();\n      if (Number(date.split(\"/\")[2]) < 10) {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/0${date.split(\"/\")[2]}`;\n      } else {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/${date.split(\"/\")[2]}`;\n      }\n      if (day < 10) {\n        var dayVal = 0 + `${day}`;\n      } else {\n        var dayVal = day;\n      }\n      dates.value.push({ isNext: true, dayVal, dateNowVal });\n    } else {\n      // 本月\n      // 下标 - 当前月第一天星期数 + 1 (如：5 - 5 + 1)\n      const day = index - firstDayWeek + 1;\n      const date = new Date(yearNow.value, monthNow.value - 1, day).toLocaleDateString();\n      if (Number(date.split(\"/\")[2]) < 10) {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/0${date.split(\"/\")[2]}`;\n      } else {\n        var dateNowVal = `${date.split(\"/\")[0]}/${date.split(\"/\")[1]}/${date.split(\"/\")[2]}`;\n      }\n      if (day < 10) {\n        var dayVal = 0 + `${day}`;\n      } else {\n        var dayVal = day;\n      }\n      dates.value.push({ dayVal, dateNowVal });\n    }\n  }\n};\ninitCalendar();\n// 获取日历事件\n// const getList = () => {\n//   workingCalendar({ month: dateNow.value }).then(res => {\n//     if (res.code == \"200\") {\n//       calenderEvents.value = res.data;\n//       calenderEvents.value.forEach(item => {\n//         if (item.caleDate.split(\"-\")[1][0] == 0) {\n//           let date = `${item.caleDate.split(\"-\")[0]}/${item.caleDate.split(\"-\")[1][1]}/${item.caleDate.split(\"-\")[2]}`;\n//           item.caleDate = date;\n//         } else {\n//           let date = `${item.caleDate.split(\"-\")[0]}/${item.caleDate.split(\"-\")[1]}/${item.caleDate.split(\"-\")[2]}`;\n//           item.caleDate = date;\n//         }\n//         dates.value.forEach(ele => {\n//           if (item.caleDate === ele.dateNowVal) {\n//             ele.eventList = item.item;\n//             ele.caleType = item.caleType;\n//             ele.eventList.forEach(jtem => {\n//               if (jtem.dept === \"FG4-HR\") {\n//                 jtem.borderColor = \"#FFE4BA\"; // 橘\n//                 jtem.bgColor = \"#FFF7E8\";\n//                 jtem.color = \"#FF7D00\";\n//               }\n//               if (jtem.dept === \"FG4-BMD\") {\n//                 jtem.bgColor = \"#FFECE8\"; // 红\n//                 jtem.borderColor = \"#FDCDC5\";\n//                 jtem.color = \"#F53F3F\";\n//               }\n//               if (jtem.dept === \"FG4-FIN\") {\n//                 jtem.bgColor = \"#E8F3FF\"; // 蓝\n//                 jtem.borderColor = \"#C3E7FE\";\n//                 jtem.color = \"#4080FF\";\n//               }\n//             });\n//           }\n//         });\n//       });\n//     }\n//   });\n// };\n// getList();\n</script>\n\n<style lang=\"scss\" scoped>\n.tagTip {\n  margin-left: 17%;\n}\n.date {\n  overflow: hidden;\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    padding-left: 0px;\n    width: 1080px;\n    li {\n      width: 140px;\n      border-width: 1px 1px 0 0;\n      border-color: #e0e6f1;\n      border-style: solid;\n      padding-left: 8px;\n      &.week {\n        height: 32px;\n        z-index: 999;\n        font-size: 14px;\n        color: #86909c;\n        font-family: \"PingFangSC-Regular\", \"PingFang SC\";\n        background-color: #f4f5ff;\n        display: flex;\n        align-items: center;\n      }\n      &.day {\n        height: 110px;\n        cursor: pointer;\n        font-size: 16px;\n        color: #86909c;\n        // 上个月、下个月\n        &.isNext,\n        &.isPrep {\n          cursor: default;\n          color: #a9aeb8;\n        }\n        .days {\n          display: inline-block;\n          text-align: center;\n          line-height: 28px;\n          width: 28px;\n          height: 28px;\n          margin-top: 8px;\n          font-size: 16px;\n        }\n        // 选中、hover\n        // &:hover,\n        &.isSelected {\n          .days {\n            background: #5370ff;\n            border-radius: 50%;\n            color: #fff;\n          }\n        }\n        &.isDisabled {\n          background-color: #f7f8fa;\n          color: #a9aeb8;\n        }\n      }\n    }\n    li:first-child,\n    :nth-child(7n + 1) {\n      border-left-width: 1px;\n    }\n    li:nth-last-child(7),\n    :nth-last-child(6),\n    :nth-last-child(5),\n    :nth-last-child(4),\n    :nth-last-child(3),\n    :nth-last-child(2),\n    :nth-last-child(1) {\n      border-bottom-width: 1px;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}