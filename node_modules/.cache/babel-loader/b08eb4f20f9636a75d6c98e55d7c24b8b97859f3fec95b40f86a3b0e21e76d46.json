{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nexport default {\n  __name: 'columnChartDemo',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const xData = ref([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Y\"]);\n    const res = ref({\n      blue: [100, 200, 300, 30, 90, 40, 320, 270, 50, 370, 278, 1000],\n      green: [10, 30, 40, 90, 78, 270, 340, 37, 98, 270, 45, 340],\n      purple: 500,\n      yellowLine: [30, 50, 90, 10, 80, 60, 70, 39, 79, 50, 20, 38],\n      orangeLine: [10, 80, 60, 70, 39, 79, 50, 20, 38, 90, 49, 90]\n    });\n    // 处理横坐标轴\n    const constructxAxis = data => {\n      const transformedData = data.map((month, index) => ({\n        data: Array.from({\n          length: data.length\n        }, (_, i) => i === index ? month : \"\")\n      }));\n      return transformedData;\n    };\n    // 处理柱形数据\n    const constructData = data => {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        const obj = {};\n        obj.data = Array(i).fill(\"\").concat(data[i]);\n        result.push(obj);\n      }\n      return result;\n    };\n    onMounted(() => {\n      var chartDom = document.getElementById(\"columnChart\");\n      var myChart = echarts.init(chartDom);\n      let xAxisData = constructxAxis(xData.value);\n      xAxisData.forEach(item => {\n        item.type = \"category\";\n        item.position = \"bottom\";\n      });\n      // 蓝色数据 销售毛利（累计预）\n      let blueData = constructData(res.value.blue);\n      blueData.forEach((item, index) => {\n        item.name = \"销售毛利（累计预）\";\n        item.type = \"bar\";\n        item.barGap = \"5%\";\n        item.xAxisIndex = index;\n        item.barWidth = 30;\n      });\n      // 绿色数据 销售毛利（累计实）\n      let greenData = constructData(res.value.green);\n      greenData.forEach((item, index) => {\n        item.name = \"销售毛利（累计实）\";\n        item.type = \"bar\";\n        item.barGap = \"5%\";\n        item.xAxisIndex = index;\n        item.barWidth = 30;\n      });\n      //年度毛利（年度目标）\n      let purpleData = {\n        name: \"年度毛利（年度目标）\",\n        type: \"bar\",\n        xAxisIndex: 12,\n        barWidth: 30,\n        itemStyle: {\n          color: \"purple\"\n        },\n        data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", res.value.purple]\n      };\n      //销售毛利率（年度预算）\n      const orangeLineData = {\n        name: \"销售毛利率（年度预算）\",\n        type: \"line\",\n        yAxisIndex: 1,\n        itemStyle: {\n          color: \"orange\"\n        },\n        data: res.value.orangeLine\n      };\n      //销售毛利率（实际累计）\n      const yellowLineData = {\n        name: \"销售毛利率（实际累计）\",\n        type: \"line\",\n        yAxisIndex: 1,\n        itemStyle: {\n          color: \"yellow\"\n        },\n        data: res.value.yellowLine\n      };\n      // 所有数据\n      let seriesData = [];\n      blueData.forEach(item => {\n        seriesData.push(item);\n      });\n      greenData.forEach(item => {\n        seriesData.push(item);\n      });\n      seriesData.push(purpleData);\n      seriesData.push(orangeLineData);\n      seriesData.push(yellowLineData);\n      var option;\n      option = {\n        // 整体图形样式\n        // grid: {\n        //   show: true,\n        //   left: \"15%\",\n        //   top: \"25%\",\n        //   right: \"15%\",\n        //   // bottom: \"5%\",\n        //   backgroundColor: \"rgba(224, 17, 17, 1)\",\n        //   borderColor: \"rgba(96, 67, 67, 1)\",\n        // },\n        legend: {\n          data: [\"销售毛利（累计预）\", \"销售毛利（累计实）\", \"销售毛利率（年度预算）\", \"销售毛利率（实际累计）\", \"年度毛利（年度目标）\"],\n          x: \"center\",\n          //可设定图例在左、右、居中\n          y: \"bottom\" //可设定图例在上、下、居中\n        },\n\n        // 提示\n        tooltip: {\n          trigger: \"axis\",\n          formatter(params) {\n            if (params.length > 4) {\n              let arr = params.slice(0, 4);\n              let str = `<div style=\"margin: 0 8px\">\n                  <span> ${arr[2].axisValue}</span>:\n                </div>`;\n              arr.forEach(item => {\n                str += `<div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${item.color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${item.seriesName}</span>:\n                  <span>${item.value}</span>\n                </div>`;\n              });\n              return str;\n            } else {\n              return `<div style=\"margin: 0 8px\">\n                    <span> ${params[0].axisValue}</span>:\n                  </div>\n                  <div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${params[0].color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${params[0].seriesName}</span>: <span>${params[0].value}</span>\n                  </div>`;\n            }\n          }\n        },\n        // X坐标系\n        xAxis: xAxisData,\n        // Y坐标系\n        yAxis: [{\n          type: \"value\",\n          name: \"毛利\",\n          splitLine: {\n            //网格线\n            show: false\n          },\n          axisLine: {\n            show: true\n          } // 坐标轴\n        }, {\n          type: \"value\",\n          name: \"毛利率\",\n          min: 0,\n          max: 100,\n          axisLabel: {\n            formatter: \"{value} %\"\n          },\n          interval: 10,\n          splitLine: {\n            //网格线\n            show: false\n          },\n          axisLine: {\n            show: true\n          } // 坐标轴\n        }],\n\n        // 柱形和折线数据\n        series: seriesData\n      };\n      option && myChart.setOption(option);\n    });\n    const __returned__ = {\n      xData,\n      res,\n      constructxAxis,\n      constructData,\n      get echarts() {\n        return echarts;\n      },\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["echarts","onMounted","ref","xData","res","blue","green","purple","yellowLine","orangeLine","constructxAxis","data","transformedData","map","month","index","Array","from","length","_","i","constructData","result","obj","fill","concat","push","chartDom","document","getElementById","myChart","init","xAxisData","value","forEach","item","type","position","blueData","name","barGap","xAxisIndex","barWidth","greenData","purpleData","itemStyle","color","orangeLineData","yAxisIndex","yellowLineData","seriesData","option","legend","x","y","tooltip","trigger","formatter","params","arr","slice","str","axisValue","seriesName","xAxis","yAxis","splitLine","show","axisLine","min","max","axisLabel","interval","series","setOption"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/demo/columnChartDemo.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <div id=\"columnChart\"></div>\n  </div>\n</template>\n\n<script setup>\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nconst xData = ref([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Y\"]);\nconst res = ref({\n  blue: [100, 200, 300, 30, 90, 40, 320, 270, 50, 370, 278, 1000],\n  green: [10, 30, 40, 90, 78, 270, 340, 37, 98, 270, 45, 340],\n  purple: 500,\n  yellowLine: [30, 50, 90, 10, 80, 60, 70, 39, 79, 50, 20, 38],\n  orangeLine: [10, 80, 60, 70, 39, 79, 50, 20, 38, 90, 49, 90],\n});\n// 处理横坐标轴\nconst constructxAxis = data => {\n  const transformedData = data.map((month, index) => ({\n    data: Array.from({ length: data.length }, (_, i) => (i === index ? month : \"\")),\n  }));\n  return transformedData;\n};\n// 处理柱形数据\nconst constructData = data => {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const obj = {};\n    obj.data = Array(i).fill(\"\").concat(data[i]);\n    result.push(obj);\n  }\n  return result;\n};\nonMounted(() => {\n  var chartDom = document.getElementById(\"columnChart\");\n  var myChart = echarts.init(chartDom);\n  let xAxisData = constructxAxis(xData.value);\n  xAxisData.forEach(item => {\n    item.type = \"category\";\n    item.position = \"bottom\";\n  });\n  // 蓝色数据 销售毛利（累计预）\n  let blueData = constructData(res.value.blue);\n  blueData.forEach((item, index) => {\n    item.name = \"销售毛利（累计预）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  // 绿色数据 销售毛利（累计实）\n  let greenData = constructData(res.value.green);\n  greenData.forEach((item, index) => {\n    item.name = \"销售毛利（累计实）\";\n    item.type = \"bar\";\n    item.barGap = \"5%\";\n    item.xAxisIndex = index;\n    item.barWidth = 30;\n  });\n  //年度毛利（年度目标）\n  let purpleData = {\n    name: \"年度毛利（年度目标）\",\n    type: \"bar\",\n    xAxisIndex: 12,\n    barWidth: 30,\n    itemStyle: {\n      color: \"purple\",\n    },\n    data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", res.value.purple],\n  };\n  //销售毛利率（年度预算）\n  const orangeLineData = {\n    name: \"销售毛利率（年度预算）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"orange\",\n    },\n    data: res.value.orangeLine,\n  };\n  //销售毛利率（实际累计）\n  const yellowLineData = {\n    name: \"销售毛利率（实际累计）\",\n    type: \"line\",\n    yAxisIndex: 1,\n    itemStyle: {\n      color: \"yellow\",\n    },\n    data: res.value.yellowLine,\n  };\n  // 所有数据\n  let seriesData = [];\n  blueData.forEach(item => {\n    seriesData.push(item);\n  });\n  greenData.forEach(item => {\n    seriesData.push(item);\n  });\n  seriesData.push(purpleData);\n  seriesData.push(orangeLineData);\n  seriesData.push(yellowLineData);\n  var option;\n  option = {\n    // 整体图形样式\n    // grid: {\n    //   show: true,\n    //   left: \"15%\",\n    //   top: \"25%\",\n    //   right: \"15%\",\n    //   // bottom: \"5%\",\n    //   backgroundColor: \"rgba(224, 17, 17, 1)\",\n    //   borderColor: \"rgba(96, 67, 67, 1)\",\n    // },\n    legend: {\n      data: [\n        \"销售毛利（累计预）\",\n        \"销售毛利（累计实）\",\n        \"销售毛利率（年度预算）\",\n        \"销售毛利率（实际累计）\",\n        \"年度毛利（年度目标）\",\n      ],\n      x: \"center\", //可设定图例在左、右、居中\n      y: \"bottom\", //可设定图例在上、下、居中\n    },\n    // 提示\n    tooltip: {\n      trigger: \"axis\",\n      formatter(params) {\n        if (params.length > 4) {\n          let arr = params.slice(0, 4);\n          let str = `<div style=\"margin: 0 8px\">\n                  <span> ${arr[2].axisValue}</span>:\n                </div>`;\n          arr.forEach(item => {\n            str += `<div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${item.color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${item.seriesName}</span>:\n                  <span>${item.value}</span>\n                </div>`;\n          });\n          return str;\n        } else {\n          return `<div style=\"margin: 0 8px\">\n                    <span> ${params[0].axisValue}</span>:\n                  </div>\n                  <div style=\"margin: 0 8px\">\n                  <span\n                    style=\"display: inline-block; width: 10px; height: 10px; background-color: ${params[0].color}; border-radius: 50%; margin-right: 8px\"\n                  ></span>\n                  <span> ${params[0].seriesName}</span>: <span>${params[0].value}</span>\n                  </div>`;\n        }\n      },\n    },\n    // X坐标系\n    xAxis: xAxisData,\n    // Y坐标系\n    yAxis: [\n      {\n        type: \"value\",\n        name: \"毛利\",\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n      {\n        type: \"value\",\n        name: \"毛利率\",\n        min: 0,\n        max: 100,\n        axisLabel: {\n          formatter: \"{value} %\",\n        },\n        interval: 10,\n        splitLine: {\n          //网格线\n          show: false,\n        },\n        axisLine: {\n          show: true,\n        }, // 坐标轴\n      },\n    ],\n    // 柱形和折线数据\n    series: seriesData,\n  };\n  option && myChart.setOption(option);\n});\n</script>\n\n<style lang=\"scss\">\n#columnChart {\n  width: 1600px;\n  height: 600px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}