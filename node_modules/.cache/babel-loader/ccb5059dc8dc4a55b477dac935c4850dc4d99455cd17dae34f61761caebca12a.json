{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = depthFirstSearch;\nvar _util = require(\"./util\");\nfunction initCallbacks(callbacks) {\n  if (callbacks === void 0) {\n    callbacks = {};\n  }\n  var initiatedCallback = callbacks;\n  var stubCallback = function stubCallback() {};\n  var allowTraversalCallback = function () {\n    var seen = {};\n    return function (_a) {\n      var next = _a.next;\n      if (!seen[next]) {\n        seen[next] = true;\n        return true;\n      }\n      return false;\n    };\n  }();\n  initiatedCallback.allowTraversal = callbacks.allowTraversal || allowTraversalCallback;\n  initiatedCallback.enter = callbacks.enter || stubCallback;\n  initiatedCallback.leave = callbacks.leave || stubCallback;\n  return initiatedCallback;\n}\n/**\n * @param {Graph} graph\n * @param {GraphNode} currentNode\n * @param {GraphNode} previousNode\n * @param {Callbacks} callbacks\n */\n\nfunction depthFirstSearchRecursive(graphData, currentNode, previousNode, callbacks) {\n  callbacks.enter({\n    current: currentNode,\n    previous: previousNode\n  });\n  var _a = graphData.edges,\n    edges = _a === void 0 ? [] : _a;\n  (0, _util.getNeighbors)(currentNode, edges, 'target').forEach(function (nextNode) {\n    if (callbacks.allowTraversal({\n      previous: previousNode,\n      current: currentNode,\n      next: nextNode\n    })) {\n      depthFirstSearchRecursive(graphData, nextNode, currentNode, callbacks);\n    }\n  });\n  callbacks.leave({\n    current: currentNode,\n    previous: previousNode\n  });\n}\n/**\n * 深度优先遍历图\n * @param data GraphData 图数据\n * @param startNodeId 开始遍历的节点的 ID\n * @param originalCallbacks 回调\n */\n\nfunction depthFirstSearch(graphData, startNodeId, callbacks) {\n  depthFirstSearchRecursive(graphData, startNodeId, '', initCallbacks(callbacks));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","depthFirstSearch","_util","require","initCallbacks","callbacks","initiatedCallback","stubCallback","allowTraversalCallback","seen","_a","next","allowTraversal","enter","leave","depthFirstSearchRecursive","graphData","currentNode","previousNode","current","previous","edges","getNeighbors","forEach","nextNode","startNodeId"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@antv/algorithm/lib/dfs.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = depthFirstSearch;\n\nvar _util = require(\"./util\");\n\nfunction initCallbacks(callbacks) {\n  if (callbacks === void 0) {\n    callbacks = {};\n  }\n\n  var initiatedCallback = callbacks;\n\n  var stubCallback = function stubCallback() {};\n\n  var allowTraversalCallback = function () {\n    var seen = {};\n    return function (_a) {\n      var next = _a.next;\n\n      if (!seen[next]) {\n        seen[next] = true;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  initiatedCallback.allowTraversal = callbacks.allowTraversal || allowTraversalCallback;\n  initiatedCallback.enter = callbacks.enter || stubCallback;\n  initiatedCallback.leave = callbacks.leave || stubCallback;\n  return initiatedCallback;\n}\n/**\n * @param {Graph} graph\n * @param {GraphNode} currentNode\n * @param {GraphNode} previousNode\n * @param {Callbacks} callbacks\n */\n\n\nfunction depthFirstSearchRecursive(graphData, currentNode, previousNode, callbacks) {\n  callbacks.enter({\n    current: currentNode,\n    previous: previousNode\n  });\n  var _a = graphData.edges,\n      edges = _a === void 0 ? [] : _a;\n  (0, _util.getNeighbors)(currentNode, edges, 'target').forEach(function (nextNode) {\n    if (callbacks.allowTraversal({\n      previous: previousNode,\n      current: currentNode,\n      next: nextNode\n    })) {\n      depthFirstSearchRecursive(graphData, nextNode, currentNode, callbacks);\n    }\n  });\n  callbacks.leave({\n    current: currentNode,\n    previous: previousNode\n  });\n}\n/**\n * 深度优先遍历图\n * @param data GraphData 图数据\n * @param startNodeId 开始遍历的节点的 ID\n * @param originalCallbacks 回调\n */\n\n\nfunction depthFirstSearch(graphData, startNodeId, callbacks) {\n  depthFirstSearchRecursive(graphData, startNodeId, '', initCallbacks(callbacks));\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,gBAAgB;AAElC,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE7B,SAASC,aAAa,CAACC,SAAS,EAAE;EAChC,IAAIA,SAAS,KAAK,KAAK,CAAC,EAAE;IACxBA,SAAS,GAAG,CAAC,CAAC;EAChB;EAEA,IAAIC,iBAAiB,GAAGD,SAAS;EAEjC,IAAIE,YAAY,GAAG,SAASA,YAAY,GAAG,CAAC,CAAC;EAE7C,IAAIC,sBAAsB,GAAG,YAAY;IACvC,IAAIC,IAAI,GAAG,CAAC,CAAC;IACb,OAAO,UAAUC,EAAE,EAAE;MACnB,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;MAElB,IAAI,CAACF,IAAI,CAACE,IAAI,CAAC,EAAE;QACfF,IAAI,CAACE,IAAI,CAAC,GAAG,IAAI;QACjB,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC;EACH,CAAC,EAAE;EAEHL,iBAAiB,CAACM,cAAc,GAAGP,SAAS,CAACO,cAAc,IAAIJ,sBAAsB;EACrFF,iBAAiB,CAACO,KAAK,GAAGR,SAAS,CAACQ,KAAK,IAAIN,YAAY;EACzDD,iBAAiB,CAACQ,KAAK,GAAGT,SAAS,CAACS,KAAK,IAAIP,YAAY;EACzD,OAAOD,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASS,yBAAyB,CAACC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEb,SAAS,EAAE;EAClFA,SAAS,CAACQ,KAAK,CAAC;IACdM,OAAO,EAAEF,WAAW;IACpBG,QAAQ,EAAEF;EACZ,CAAC,CAAC;EACF,IAAIR,EAAE,GAAGM,SAAS,CAACK,KAAK;IACpBA,KAAK,GAAGX,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;EACnC,CAAC,CAAC,EAAER,KAAK,CAACoB,YAAY,EAAEL,WAAW,EAAEI,KAAK,EAAE,QAAQ,CAAC,CAACE,OAAO,CAAC,UAAUC,QAAQ,EAAE;IAChF,IAAInB,SAAS,CAACO,cAAc,CAAC;MAC3BQ,QAAQ,EAAEF,YAAY;MACtBC,OAAO,EAAEF,WAAW;MACpBN,IAAI,EAAEa;IACR,CAAC,CAAC,EAAE;MACFT,yBAAyB,CAACC,SAAS,EAAEQ,QAAQ,EAAEP,WAAW,EAAEZ,SAAS,CAAC;IACxE;EACF,CAAC,CAAC;EACFA,SAAS,CAACS,KAAK,CAAC;IACdK,OAAO,EAAEF,WAAW;IACpBG,QAAQ,EAAEF;EACZ,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASjB,gBAAgB,CAACe,SAAS,EAAES,WAAW,EAAEpB,SAAS,EAAE;EAC3DU,yBAAyB,CAACC,SAAS,EAAES,WAAW,EAAE,EAAE,EAAErB,aAAa,CAACC,SAAS,CAAC,CAAC;AACjF"},"metadata":{},"sourceType":"script","externalDependencies":[]}