{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createSlots as _createSlots } from \"vue\";\nconst _hoisted_1 = {\n  class: \"defaultPadding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_option = _resolveComponent(\"a-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_table, {\n    columns: $setup.tableInfo.columns,\n    data: $setup.tableInfo.data,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, _createSlots({\n    name: _withCtx(({\n      record,\n      rowIndex\n    }) => [_createVNode(_component_a_input, {\n      modelValue: record.name,\n      \"onUpdate:modelValue\": $event => record.name = $event,\n      onFocus: $setup.cellInputFocus,\n      onBlur: $setup.cellInputBlur\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n    province: _withCtx(({\n      record,\n      rowIndex\n    }) => [_createVNode(_component_a_select, {\n      modelValue: record.province,\n      \"onUpdate:modelValue\": $event => record.province = $event,\n      onChange: () => {\n        record.city = '';\n      }\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.keys($setup.options), value => {\n        return _openBlock(), _createBlock(_component_a_option, null, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(value), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 256 /* UNKEYED_FRAGMENT */))]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n    city: _withCtx(({\n      record,\n      rowIndex\n    }) => [_createVNode(_component_a_select, {\n      options: $setup.options[record.province] || [],\n      modelValue: record.city,\n      \"onUpdate:modelValue\": $event => record.city = $event\n    }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"onUpdate:modelValue\"])]),\n    _: 2 /* DYNAMIC */\n  }, [_renderList($setup.toggleColumns, (item, index) => {\n    return {\n      name: item.slotName,\n      fn: _withCtx(({\n        record,\n        rowIndex\n      }) => [(_openBlock(), _createBlock(_component_a_input, {\n        modelValue: record.dataIndex,\n        \"onUpdate:modelValue\": $event => record.dataIndex = $event,\n        key: index\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]))])\n    };\n  })]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"columns\", \"data\"])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAgB;;;;;;uBAA3BC,oBAiBM,OAjBNC,UAiBM,GAhBFC,aAeUC;IAfAC,OAAO,EAAEC,gBAAS,CAACD,OAAO;IAAGE,IAAI,EAAED,gBAAS,CAACC,IAAI;IAAEC,KAAwB,EAAxB;MAAA;IAAA;;IAC9CC,IAAI,WACf,CAA8E;MAD3DC,MAAM;MAAEC;IAAQ,OACnCR,aAA8ES;kBAA5DF,MAAM,CAACD,IAAI;uCAAXC,MAAM,CAACD,IAAI;MAAGI,OAAK,EAAEP,qBAAc;MAAGQ,MAAI,EAAER;;IAEnDS,QAAQ,WACnB,CAEW;MAHYL,MAAM;MAACC;IAAQ,OACtCR,aAEWa;kBAFQN,MAAM,CAACK,QAAQ;uCAAfL,MAAM,CAACK,QAAQ;MAAGE,QAAM;QAAOP,MAAM,CAACQ,IAAI;MAAA;;wBAC/C,MAAqC,oBAA/CjB,oBAAoEkB,6BAA1CC,MAAM,CAACC,IAAI,CAACf,cAAO,GAA5BgB,KAAK;6BAAtBC,aAAoEC;4BAApB,MAAS,mCAAPF,KAAK;;;;;;;;IAMhDJ,IAAI,WACf,CAA4E;MADzDR,MAAM;MAACC;IAAQ,OAClCR,aAA4Ea;MAAjES,OAAO,EAAEnB,cAAO,CAACI,MAAM,CAACK,QAAQ;kBAAkBL,MAAM,CAACQ,IAAI;uCAAXR,MAAM,CAACQ,IAAI;;;kBAJFZ,oBAAa,GAA3BoB,IAAI,EAACC,KAAK;;YAAvDD,IAAI,CAACE,QAAQ;mBACtB,CAAkD;QADtBlB,MAAM;QAACC;MAAQ,sBAC3CY,aAAkDX;oBAAhCF,MAAM,CAACmB,SAAS;yCAAhBnB,MAAM,CAACmB,SAAS;QAAGC,GAAG,EAAEH","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_a_table","columns","$setup","data","style","name","record","rowIndex","_component_a_input","onFocus","onBlur","province","_component_a_select","onChange","city","_Fragment","Object","keys","value","_createBlock","_component_a_option","options","item","index","slotName","dataIndex","key"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/demo/dynamicCloumns.vue"],"sourcesContent":["<template>\n    <div class=\"defaultPadding\">\n        <a-table :columns=\"tableInfo.columns\" :data=\"tableInfo.data\" style=\"margin-top: 20px\">\n            <template #name=\"{ record, rowIndex }\">\n            <a-input v-model=\"record.name\" @focus=\"cellInputFocus\" @blur=\"cellInputBlur\"/>\n            </template>\n            <template #province=\"{ record,rowIndex }\">\n            <a-select v-model=\"record.province\" @change=\"()=>{record.city=''}\">\n                <a-option v-for=\"value of Object.keys(options)\">{{value}}</a-option>\n            </a-select>\n            </template>\n            <template #[item.slotName]=\"{ record,rowIndex }\" v-for=\"item,index of toggleColumns\">\n              <a-input v-model=\"record.dataIndex\" :key=\"index\"/>\n            </template>\n            <template #city=\"{ record,rowIndex }\">\n            <a-select :options=\"options[record.province] || []\" v-model=\"record.city\" />\n            </template>\n        </a-table>\n    </div>\n</template>\n\n<script setup>\nimport { onMounted, reactive,watch } from 'vue'\nconst options = {\n      Beijing: ['Haidian', 'Chaoyang', 'Changping'],\n      Sichuan: ['Chengdu', 'Mianyang', 'Aba'],\n      Guangdong: ['Guangzhou', 'Shenzhen', 'Shantou']\n    }\nconst toggleColumns = [\n  {\n    title: '动态列一',\n    dataIndex: 'columnsOne',\n    slotName: 'columnsOne'\n  },\n  {\n    title: '动态列二',\n    dataIndex: 'columnTwo',\n    slotName: 'columnTwo'\n  },\n  {\n    title: '动态列三',\n    dataIndex: 'columnThree',\n    slotName: 'columnThree'\n  },\n]\n\n    const tableInfo = reactive({\n      columns : [{\n        title: 'Name',\n        dataIndex: 'name',\n        slotName: 'name'\n      }, {\n        title: 'Salary',\n        dataIndex: 'salary',\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n      }, {\n        title: 'Province',\n        dataIndex: 'province',\n        slotName: 'province'\n      }, {\n        title: 'City',\n        dataIndex: 'city',\n        slotName: 'city'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n      }],\n      data : [{\n        key: '1',\n        name: 'Jane Doe',\n        salary: 23000,\n        address: '32 Park Road, London',\n        province: 'Beijing',\n        city: 'Haidian',\n        email: 'jane.doe@example.com'\n      }, {\n        key: '2',\n        name: 'Alisa Ross',\n        salary: 25000,\n        address: '35 Park Road, London',\n        email: 'alisa.ross@example.com'\n      }, {\n        key: '3',\n        name: 'Kevin Sandra',\n        salary: 22000,\n        address: '31 Park Road, London',\n        province: 'Sichuan',\n        city: 'Mianyang',\n        email: 'kevin.sandra@example.com'\n      }, {\n        key: '4',\n        name: 'Ed Hellen',\n        salary: 17000,\n        address: '42 Park Road, London',\n        email: 'ed.hellen@example.com'\n      }, {\n        key: '5',\n        name: 'William Smith',\n        salary: 27000,\n        address: '62 Park Road, London',\n        email: 'william.smith@example.com'\n      }]\n    })\nconst cellInputFocus = ()=>{\n  tableInfo.columns.splice(1,0,...toggleColumns)\n}\nconst cellInputBlur = ()=>{\n  tableInfo.columns.splice(1,toggleColumns.length)\n}\nonMounted(()=>{\n  \n})\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}