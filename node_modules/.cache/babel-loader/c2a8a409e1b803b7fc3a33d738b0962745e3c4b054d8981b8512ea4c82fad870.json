{"ast":null,"code":"import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\nexport default {\n  \"\": formatDefault,\n  \"%\": function (x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function (x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function (x) {\n    return x + \"\";\n  },\n  \"d\": function (x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function (x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function (x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function (x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function (x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function (x, p) {\n    return formatRounded(x * 100, p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function (x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function (x) {\n    return Math.round(x).toString(16);\n  }\n};","map":{"version":3,"names":["formatDefault","formatPrefixAuto","formatRounded","x","p","toFixed","Math","round","toString","toExponential","toPrecision","toUpperCase"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/d3-format/src/formatTypes.js"],"sourcesContent":["import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,eAAe;EACb,EAAE,EAAEF,aAAa;EACjB,GAAG,EAAE,UAASG,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAO,CAACD,CAAC,GAAG,GAAG,EAAEE,OAAO,CAACD,CAAC,CAAC;EAAE,CAAC;EACpD,GAAG,EAAE,UAASD,CAAC,EAAE;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EAAE,CAAC;EACtD,GAAG,EAAE,UAASL,CAAC,EAAE;IAAE,OAAOA,CAAC,GAAG,EAAE;EAAE,CAAC;EACnC,GAAG,EAAE,UAASA,CAAC,EAAE;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC;EAAE,CAAC;EACvD,GAAG,EAAE,UAASL,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOD,CAAC,CAACM,aAAa,CAACL,CAAC,CAAC;EAAE,CAAC;EAClD,GAAG,EAAE,UAASD,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOD,CAAC,CAACE,OAAO,CAACD,CAAC,CAAC;EAAE,CAAC;EAC5C,GAAG,EAAE,UAASD,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOD,CAAC,CAACO,WAAW,CAACN,CAAC,CAAC;EAAE,CAAC;EAChD,GAAG,EAAE,UAASD,CAAC,EAAE;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EAAE,CAAC;EACtD,GAAG,EAAE,UAASL,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOF,aAAa,CAACC,CAAC,GAAG,GAAG,EAAEC,CAAC,CAAC;EAAE,CAAC;EACzD,GAAG,EAAEF,aAAa;EAClB,GAAG,EAAED,gBAAgB;EACrB,GAAG,EAAE,UAASE,CAAC,EAAE;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC,CAACG,WAAW,EAAE;EAAE,CAAC;EACrE,GAAG,EAAE,UAASR,CAAC,EAAE;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC;EAAE;AACxD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}