{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nimport { gl } from '@antv/g-webgpu-core';\nimport { extractUniforms } from '../utils/uniform';\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, stencilFuncMap, stencilOpMap } from './constants';\n/**\n * adaptor for regl.DrawCommand\n */\nvar ReglModel = /*#__PURE__*/function () {\n  function ReglModel(reGl, options) {\n    _classCallCheck(this, ReglModel);\n    this.reGl = void 0;\n    this.drawCommand = void 0;\n    this.uniforms = {};\n    this.reGl = reGl;\n    var vs = options.vs,\n      fs = options.fs,\n      defines = options.defines,\n      attributes = options.attributes,\n      uniforms = options.uniforms,\n      primitive = options.primitive,\n      count = options.count,\n      elements = options.elements,\n      depth = options.depth,\n      blend = options.blend,\n      stencil = options.stencil,\n      cull = options.cull,\n      instances = options.instances,\n      scissor = options.scissor,\n      viewport = options.viewport;\n    var reglUniforms = {};\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach(function (uniformName) {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n    var reglAttributes = {};\n    Object.keys(attributes).forEach(function (name) {\n      reglAttributes[name] = attributes[name].get();\n    });\n    var defineStmts = defines && this.generateDefines(defines) || '';\n    var drawParams = {\n      attributes: reglAttributes,\n      frag: \"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n#else\\n  precision mediump float;\\n#endif\\n\".concat(defineStmts, \"\\n\").concat(fs),\n      uniforms: reglUniforms,\n      vert: \"\\n\".concat(defineStmts, \"\\n\").concat(vs),\n      primitive: primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive]\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    }\n\n    // elements 中可能包含 count，此时不应传入\n    if (count) {\n      drawParams.count = count;\n    }\n    if (elements) {\n      drawParams.elements = elements.get();\n    }\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n    this.initDepthDrawParams({\n      depth: depth\n    }, drawParams);\n    this.initBlendDrawParams({\n      blend: blend\n    }, drawParams);\n    this.initStencilDrawParams({\n      stencil: stencil\n    }, drawParams);\n    this.initCullDrawParams({\n      cull: cull\n    }, drawParams);\n    this.drawCommand = reGl(drawParams);\n  }\n  _createClass(ReglModel, [{\n    key: \"addUniforms\",\n    value: function addUniforms(uniforms) {\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(uniforms));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options) {\n      var uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(options.uniforms || {}));\n      var reglDrawProps = {};\n      Object.keys(uniforms).forEach(function (uniformName) {\n        var type = _typeof(uniforms[uniformName]);\n        if (type === 'boolean' || type === 'number' || Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT) {\n          reglDrawProps[uniformName] = uniforms[uniformName];\n        } else if (type === 'string') {\n          // TODO: image url\n        } else {\n          reglDrawProps[uniformName] = uniforms[uniformName].get();\n        }\n      });\n      this.drawCommand(reglDrawProps);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // don't need do anything since we will call `rendererService.cleanup()`\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n     */\n  }, {\n    key: \"initDepthDrawParams\",\n    value: function initDepthDrawParams(_ref, drawParams) {\n      var depth = _ref.depth;\n      if (depth) {\n        drawParams.depth = {\n          enable: depth.enable === undefined ? true : !!depth.enable,\n          mask: depth.mask === undefined ? true : !!depth.mask,\n          func: depthFuncMap[depth.func || gl.LESS],\n          range: depth.range || [0, 1]\n        };\n      }\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n     */\n  }, {\n    key: \"initBlendDrawParams\",\n    value: function initBlendDrawParams(_ref2, drawParams) {\n      var blend = _ref2.blend;\n      if (blend) {\n        var enable = blend.enable,\n          func = blend.func,\n          equation = blend.equation,\n          _blend$color = blend.color,\n          color = _blend$color === void 0 ? [0, 0, 0, 0] : _blend$color;\n        // @ts-ignore\n        drawParams.blend = {\n          enable: !!enable,\n          func: {\n            srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n            srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n            dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n            dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n          },\n          equation: {\n            rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n            alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n          },\n          color: color\n        };\n      }\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n     */\n  }, {\n    key: \"initStencilDrawParams\",\n    value: function initStencilDrawParams(_ref3, drawParams) {\n      var stencil = _ref3.stencil;\n      if (stencil) {\n        var enable = stencil.enable,\n          _stencil$mask = stencil.mask,\n          mask = _stencil$mask === void 0 ? -1 : _stencil$mask,\n          _stencil$func = stencil.func,\n          func = _stencil$func === void 0 ? {\n            cmp: gl.ALWAYS,\n            ref: 0,\n            mask: -1\n          } : _stencil$func,\n          _stencil$opFront = stencil.opFront,\n          opFront = _stencil$opFront === void 0 ? {\n            fail: gl.KEEP,\n            zfail: gl.KEEP,\n            zpass: gl.KEEP\n          } : _stencil$opFront,\n          _stencil$opBack = stencil.opBack,\n          opBack = _stencil$opBack === void 0 ? {\n            fail: gl.KEEP,\n            zfail: gl.KEEP,\n            zpass: gl.KEEP\n          } : _stencil$opBack;\n        drawParams.stencil = {\n          enable: !!enable,\n          mask: mask,\n          func: _objectSpread(_objectSpread({}, func), {}, {\n            cmp: stencilFuncMap[func.cmp]\n          }),\n          opFront: {\n            fail: stencilOpMap[opFront.fail],\n            zfail: stencilOpMap[opFront.zfail],\n            zpass: stencilOpMap[opFront.zpass]\n          },\n          opBack: {\n            fail: stencilOpMap[opBack.fail],\n            zfail: stencilOpMap[opBack.zfail],\n            zpass: stencilOpMap[opBack.zpass]\n          }\n        };\n      }\n    }\n\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n     */\n  }, {\n    key: \"initCullDrawParams\",\n    value: function initCullDrawParams(_ref4, drawParams) {\n      var cull = _ref4.cull;\n      if (cull) {\n        var enable = cull.enable,\n          _cull$face = cull.face,\n          face = _cull$face === void 0 ? gl.BACK : _cull$face;\n        drawParams.cull = {\n          enable: !!enable,\n          face: cullFaceMap[face]\n        };\n      }\n    }\n  }, {\n    key: \"generateDefines\",\n    value: function generateDefines(defines) {\n      return Object.keys(defines).map(function (name) {\n        return \"#define \".concat(name, \" \").concat(Number(defines[name]));\n      }).join('\\n');\n    }\n  }]);\n  return ReglModel;\n}();\nexport { ReglModel as default };","map":{"version":3,"mappings":"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","names":["gl","extractUniforms","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","stencilFuncMap","stencilOpMap","ReglModel","reGl","options","_classCallCheck","drawCommand","uniforms","vs","fs","defines","attributes","primitive","count","elements","depth","blend","stencil","cull","instances","scissor","viewport","reglUniforms","Object","keys","forEach","uniformName","prop","reglAttributes","name","get","defineStmts","generateDefines","drawParams","frag","vert","undefined","TRIANGLES","initDepthDrawParams","initBlendDrawParams","initStencilDrawParams","initCullDrawParams","_createClass","key","value","reglDrawProps","type","Array","isArray","BYTES_PER_ELEMENT","enable","mask","func","LESS","range","equation","_blend$color","color","srcRGB","SRC_ALPHA","srcAlpha","dstRGB","ONE_MINUS_SRC_ALPHA","dstAlpha","rgb","FUNC_ADD","alpha","_stencil$mask","_stencil$func","cmp","ALWAYS","ref","_stencil$opFront","opFront","fail","KEEP","zfail","zpass","_stencil$opBack","opBack","_cull$face","face","BACK","map","Number","join"],"sources":["../../src/webgl/ReglModel.ts"],"sourcesContent":["import {\n  gl,\n} from '@antv/g-webgpu-core';\nimport type {\n  IModel,\n  IModelDrawOptions,\n  IModelInitializationOptions,\n  IUniform,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport { extractUniforms } from '../utils/uniform';\nimport {\n  blendEquationMap,\n  blendFuncMap,\n  cullFaceMap,\n  depthFuncMap,\n  primitiveMap,\n  stencilFuncMap,\n  stencilOpMap,\n} from './constants';\nimport ReglAttribute from './ReglAttribute';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * adaptor for regl.DrawCommand\n */\nexport default class ReglModel implements IModel {\n  private reGl: regl.Regl;\n  private drawCommand: regl.DrawCommand;\n  private uniforms: {\n    [key: string]: IUniform;\n  } = {};\n\n  constructor(reGl: regl.Regl, options: IModelInitializationOptions) {\n    this.reGl = reGl;\n    const {\n      vs,\n      fs,\n      defines,\n      attributes,\n      uniforms,\n      primitive,\n      count,\n      elements,\n      depth,\n      blend,\n      stencil,\n      cull,\n      instances,\n      scissor,\n      // @ts-ignore\n      viewport,\n    } = options;\n    const reglUniforms: { [key: string]: IUniform } = {};\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach((uniformName) => {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n\n    const reglAttributes: { [key: string]: regl.Attribute } = {};\n    Object.keys(attributes).forEach((name: string) => {\n      reglAttributes[name] = (attributes[name] as ReglAttribute).get();\n    });\n\n    const defineStmts = (defines && this.generateDefines(defines)) || '';\n    const drawParams: regl.DrawConfig = {\n      attributes: reglAttributes,\n      frag: `#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n${defineStmts}\n${fs}`,\n      uniforms: reglUniforms,\n      vert: `\n${defineStmts}\n${vs}`,\n      primitive:\n        primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive],\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    }\n\n    // elements 中可能包含 count，此时不应传入\n    if (count) {\n      drawParams.count = count;\n    }\n\n    if (elements) {\n      drawParams.elements = (elements as ReglElements).get();\n    }\n\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n\n    this.initDepthDrawParams({ depth }, drawParams);\n    this.initBlendDrawParams({ blend }, drawParams);\n    this.initStencilDrawParams({ stencil }, drawParams);\n    this.initCullDrawParams({ cull }, drawParams);\n\n    this.drawCommand = reGl(drawParams);\n  }\n\n  public addUniforms(uniforms: { [key: string]: IUniform }) {\n    this.uniforms = {\n      ...this.uniforms,\n      ...extractUniforms(uniforms),\n    };\n  }\n\n  public draw(options: IModelDrawOptions) {\n    const uniforms: {\n      [key: string]: IUniform;\n    } = {\n      ...this.uniforms,\n      ...extractUniforms(options.uniforms || {}),\n    };\n\n    const reglDrawProps: {\n      [key: string]:\n        | regl.Framebuffer\n        | regl.Texture2D\n        | number\n        | number[]\n        | boolean;\n    } = {};\n\n    Object.keys(uniforms).forEach((uniformName: string) => {\n      const type = typeof uniforms[uniformName];\n      if (\n        type === 'boolean' ||\n        type === 'number' ||\n        Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT\n      ) {\n        reglDrawProps[uniformName] = uniforms[uniformName] as\n          | number\n          | number[]\n          | boolean;\n      } else if (type === 'string') {\n        // TODO: image url\n      } else {\n        reglDrawProps[uniformName] = (uniforms[uniformName] as\n          | ReglFramebuffer\n          | ReglTexture2D).get();\n      }\n    });\n    this.drawCommand(reglDrawProps);\n  }\n\n  public destroy() {\n    // don't need do anything since we will call `rendererService.cleanup()`\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n   */\n  private initDepthDrawParams(\n    { depth }: Pick<IModelInitializationOptions, 'depth'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (depth) {\n      drawParams.depth = {\n        enable: depth.enable === undefined ? true : !!depth.enable,\n        mask: depth.mask === undefined ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1],\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n   */\n  private initBlendDrawParams(\n    { blend }: Pick<IModelInitializationOptions, 'blend'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (blend) {\n      const { enable, func, equation, color = [0, 0, 0, 0] } = blend;\n      // @ts-ignore\n      drawParams.blend = {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[(func && func.srcRGB) || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[(func && func.srcAlpha) || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[(func && func.dstRGB) || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha:\n            blendFuncMap[(func && func.dstAlpha) || gl.ONE_MINUS_SRC_ALPHA],\n        },\n        equation: {\n          rgb: blendEquationMap[(equation && equation.rgb) || gl.FUNC_ADD],\n          alpha: blendEquationMap[(equation && equation.alpha) || gl.FUNC_ADD],\n        },\n        color,\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  private initStencilDrawParams(\n    { stencil }: Pick<IModelInitializationOptions, 'stencil'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (stencil) {\n      const {\n        enable,\n        mask = -1,\n        func = {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: -1,\n        },\n        opFront = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n        opBack = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n      } = stencil;\n      drawParams.stencil = {\n        enable: !!enable,\n        mask,\n        func: {\n          ...func,\n          cmp: stencilFuncMap[func.cmp],\n        },\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n        },\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  private initCullDrawParams(\n    { cull }: Pick<IModelInitializationOptions, 'cull'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (cull) {\n      const { enable, face = gl.BACK } = cull;\n      drawParams.cull = {\n        enable: !!enable,\n        face: cullFaceMap[face],\n      };\n    }\n  }\n\n  private generateDefines(defines: Record<string, number | boolean>) {\n    return Object.keys(defines)\n      .map((name) => `#define ${name} ${Number(defines[name])}`)\n      .join('\\n');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}