{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onBeforeMount, onMounted, reactive, ref, shallowRef, unref } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept, getDeptEcharts, getCustomerEcharts, getProjectEchartsUsingPOST, getCustomer, getProject } from '@/api/lookChart';\nimport { Message } from \"@arco-design/web-vue\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nexport default {\n  __name: 'ringContrastChart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const barChart = require('@/assets/images/barChart.svg');\n    const lineChart = require('@/assets/images/lineChart.svg');\n    const timeChart = require('@/assets/images/timeChart.svg');\n    let {\n      deptName,\n      interval,\n      deptId,\n      title,\n      sourceType,\n      customerName,\n      projectName,\n      projectId,\n      taxRate,\n      customerId\n    } = window.history.state;\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    const innerHeight = window.innerHeight;\n    const chartContainerRef = ref(null);\n    const chartContainerLoading = ref(false);\n    let sourceTypeMap = {\n      dept: '部门',\n      customer: '客户',\n      project: '项目'\n    };\n    let myChart;\n    const barChartSelect = ref('营业收入(总) 直接成本(总)');\n    const lineChartSelect = shallowRef(['发薪人数']);\n    const timeChartSelect = ref(interval);\n    const selectChange = () => {\n      setChartData();\n    };\n    const timeSelectChange = () => {\n      switch (sourceType) {\n        case 'dept':\n          getChartData();\n          break;\n        case 'customer':\n          getCustomerData();\n          break;\n        case 'project':\n          getProjectData();\n          break;\n        default:\n          break;\n      }\n    };\n    const switchDeptModal = reactive({\n      visible: false,\n      selectItem: '',\n      options: [],\n      loading: false\n    });\n    const handleSwitchDept = () => {\n      switchDeptModal.visible = true;\n      if (switchDeptModal.options.length === 0) {\n        switch (sourceType) {\n          case 'dept':\n            getDeptData();\n            break;\n          case 'customer':\n            getAllCustomerData();\n            break;\n          case 'project':\n            getAllProjecttData();\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    const getDeptData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          interval: unref(timeChartSelect)\n        };\n        queryYoyAnalysisDept(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.value = item.deptId;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    const getAllCustomerData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          deptId,\n          interval: unref(timeChartSelect)\n        };\n        getCustomer(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.value = item.title;\n                item.label = item.title;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    const getAllProjecttData = () => {\n      if (switchDeptModal.options.length === 0) {\n        switchDeptModal.loading = true;\n        let params = {\n          deptId,\n          interval: unref(timeChartSelect)\n        };\n        getProject(params).then(res => {\n          if (res.code === '200') {\n            function recursionDelChildren(arr) {\n              arr.forEach(item => {\n                item.label = item.title;\n                item.value = item.title;\n                if (item?.children?.length) {\n                  recursionDelChildren(item.children);\n                } else {\n                  item.label = item.projectName;\n                  item.value = item.projectName;\n                  delete item.children;\n                }\n              });\n            }\n            recursionDelChildren(res.data);\n            switchDeptModal.options = res.data;\n          } else {\n            Message.error(res.message || '数据请求失败');\n          }\n        }).catch(err => {\n          Message.error(err.message || '数据请求失败');\n        }).finally(() => {\n          switchDeptModal.loading = false;\n        });\n      }\n    };\n    let sourceData = [];\n    let chartOptionColosMap = {\n      '营业收入(总)': '#6BD4B3',\n      '人均营业收入': '#6BD4B3',\n      '直接成本(总)': '#3491FA',\n      '人均直接成本': '#3491FA',\n      '发薪人数': '#FB6D6C',\n      '项目销售毛利率': '#008026'\n    };\n    const setChartData = () => {\n      let barChartVal = barChartSelect.value.split(' ');\n      let lineChartVal = lineChartSelect.value;\n      let timeChartVal = timeChartSelect.value;\n      let includeName = [...barChartVal, ...lineChartVal, timeChartVal];\n      let legend = [];\n      let fliterData = [];\n      sourceData.forEach(item => {\n        if (includeName.includes(item.name)) {\n          let yAxisIndex = 0;\n          if (item.type === 'bar') {\n            yAxisIndex = 0;\n          }\n          if (item.type === 'line') {\n            yAxisIndex = 1;\n          }\n          if (item.type === 'line' && item.name === '项目销售毛利率') {\n            yAxisIndex = 2;\n          }\n          fliterData.push({\n            ...item,\n            barWidth: 20,\n            yAxisIndex,\n            itemStyle: {\n              color: chartOptionColosMap[item.name]\n            }\n          });\n          legend.push(item.name);\n        }\n      });\n      chartOptions.legend = {\n        data: legend,\n        bottom: 0,\n        itemGap: 100\n      };\n      chartOptions.series = fliterData;\n      if (myChart) {\n        myChart.setOption(chartOptions, true);\n      }\n    };\n    // 请求部门维度看图数据\n    const getChartData = id => {\n      let params = {\n        deptId: id || deptId || \"\",\n        tagKey: \"linkAnalysis\",\n        interval: unref(timeChartSelect)\n      };\n      chartContainerLoading.value = true;\n      getDeptEcharts(params).then(res => {\n        if (res.code === '200') {\n          let {\n            xAxis,\n            series\n          } = res.data;\n          chartOptions.xAxis[0].data = xAxis;\n          sourceData = series;\n          setChartData();\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    // 请求客户维度看图数\n    const getCustomerData = name => {\n      let params = {\n        tagKey: \"linkAnalysis2\",\n        interval: unref(timeChartSelect),\n        deptId: deptId || \"\",\n        title: name || title,\n        customerId: customerId || ''\n      };\n      chartContainerLoading.value = true;\n      getCustomerEcharts(params).then(res => {\n        if (res.code === '200') {\n          let {\n            xAxis,\n            series\n          } = res.data;\n          chartOptions.xAxis[0].data = xAxis;\n          sourceData = series;\n          setChartData();\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    // 请求项目维度看图数据\n    const getProjectData = obj => {\n      let params = {\n        interval: unref(timeChartSelect),\n        deptId: deptId || \"\",\n        tagKey: \"linkAnalysis3\",\n        projectId: obj?.projectId || projectId,\n        taxRate: obj?.taxRate || taxRate\n      };\n      chartContainerLoading.value = true;\n      getProjectEchartsUsingPOST(params).then(res => {\n        if (res.code === '200') {\n          let {\n            xAxis,\n            series\n          } = res.data;\n          chartOptions.xAxis[0].data = xAxis;\n          sourceData = series;\n          setChartData();\n        } else {\n          Message.error(res.message || '数据请求失败');\n        }\n      }).catch(err => {\n        Message.error(err.message || '数据请求失败');\n      }).finally(() => {\n        chartContainerLoading.value = false;\n      });\n    };\n    //遍历树结构按条件找对应的数据\n    function getOptionItem(arr, searchObj) {\n      let currentSelectItem = {};\n      function searchItem(arr) {\n        arr.forEach(item => {\n          Object.keys(searchObj).forEach(key => {\n            if (item[key] === searchObj[key]) {\n              currentSelectItem = item;\n            }\n          });\n          if (item?.children?.length) {\n            searchItem(item.children);\n          }\n        });\n      }\n      searchItem(arr);\n      return currentSelectItem;\n    }\n    const handleSwitchDeptModalOK = () => {\n      switchDeptModal.visible = false;\n      if (switchDeptModal.selectItem) {\n        let item;\n        switch (sourceType) {\n          case 'dept':\n            item = getOptionItem(switchDeptModal.options, {\n              deptId: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.deptName,\n              isBack: true\n            }]);\n            getChartData(item.deptId);\n            break;\n          case 'customer':\n            item = getOptionItem(switchDeptModal.options, {\n              title: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: deptName\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.title,\n              isBack: true\n            }]);\n            getCustomerData(item.title);\n            break;\n          case 'project':\n            item = getOptionItem(switchDeptModal.options, {\n              projectName: switchDeptModal.selectItem\n            });\n            $bus.emit(\"updateStructure\", [{\n              type: \"text\",\n              color: \"#333\",\n              msg: '环比分析列表'\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: deptName\n            }, {\n              type: \"text\",\n              color: \"#333\",\n              msg: `${item.groupCustomerName}-${customerName}`\n            }, {\n              type: \"button\",\n              color: \"#5370FD\",\n              msg: item.projectName,\n              isBack: true\n            }]);\n            let {\n              finPcode,\n              taxRate\n            } = item;\n            getProjectData({\n              projectId: finPcode,\n              taxRate\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    const chartOptions = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          crossStyle: {\n            color: '#999'\n          }\n        }\n        // formatter : (params)=>{\n        //     let div = params.map(item=>{\n        //         return `\n        //             <div>\n        //                 ${item.marker}  ${item.seriesName.endsWith('率')?item.seriesName+' '+item.value+'%': item.seriesName+' '+item.value}\n        //             </div>\n        //         `\n        //     })\n        //     return `<span>\n        //             ${div}\n        //         </span>`\n        // }\n      },\n      grid: {\n        left: '10%'\n      },\n      xAxis: [{\n        type: 'category',\n        axisTick: {\n          alignWithLabel: true,\n          inside: true\n        },\n        axisLabel: {\n          rotate: 45\n        },\n        data: []\n      }],\n      yAxis: [{\n        name: '柱状',\n        type: 'value',\n        position: 'left',\n        alignTicks: true,\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}'\n        },\n        splitLine: {\n          show: false\n        }\n      }, {\n        name: '折线',\n        type: 'value',\n        position: 'right',\n        alignTicks: true,\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}'\n        },\n        splitLine: {\n          show: false\n        }\n      }, {\n        name: '折线',\n        type: 'value',\n        position: 'right',\n        offset: 60,\n        boundaryGap: [0.01, 1],\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#797979'\n          }\n        },\n        axisLabel: {\n          color: '#666',\n          formatter: '{value}%'\n        },\n        splitLine: {\n          show: false\n        }\n      }],\n      series: []\n    };\n    onMounted(() => {\n      myChart = echarts.init(unref(chartContainerRef));\n      chartOptions && myChart.setOption(chartOptions);\n    });\n    onBeforeMount(() => {\n      let breadList;\n      switch (sourceType) {\n        case 'dept':\n          breadList = [{\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: '环比分析列表',\n            isBack: true\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: deptName\n          }];\n          switchDeptModal.selectItem = deptId;\n          getChartData();\n          break;\n        case 'customer':\n          breadList = [{\n            type: \"text\",\n            color: \"#333\",\n            msg: '环比分析列表'\n          }, {\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: deptName,\n            isBack: true\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: title\n          }];\n          switchDeptModal.selectItem = customerId;\n          getCustomerData();\n          break;\n        case 'project':\n          breadList = [{\n            type: \"text\",\n            color: \"#333\",\n            msg: '环比分析列表'\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: deptName\n          }, {\n            type: \"button\",\n            color: \"#5370FD\",\n            msg: `${title}-${customerName}`,\n            isBack: true\n          }, {\n            type: \"text\",\n            color: \"#333\",\n            msg: projectName\n          }];\n          switchDeptModal.selectItem = projectId;\n          getProjectData();\n          break;\n        default:\n          break;\n      }\n      $bus.emit(\"updateStructure\", breadList);\n    });\n    const __returned__ = {\n      barChart,\n      lineChart,\n      timeChart,\n      get deptName() {\n        return deptName;\n      },\n      set deptName(v) {\n        deptName = v;\n      },\n      get interval() {\n        return interval;\n      },\n      set interval(v) {\n        interval = v;\n      },\n      get deptId() {\n        return deptId;\n      },\n      set deptId(v) {\n        deptId = v;\n      },\n      get title() {\n        return title;\n      },\n      set title(v) {\n        title = v;\n      },\n      get sourceType() {\n        return sourceType;\n      },\n      set sourceType(v) {\n        sourceType = v;\n      },\n      get customerName() {\n        return customerName;\n      },\n      set customerName(v) {\n        customerName = v;\n      },\n      get projectName() {\n        return projectName;\n      },\n      set projectName(v) {\n        projectName = v;\n      },\n      get projectId() {\n        return projectId;\n      },\n      set projectId(v) {\n        projectId = v;\n      },\n      get taxRate() {\n        return taxRate;\n      },\n      set taxRate(v) {\n        taxRate = v;\n      },\n      get customerId() {\n        return customerId;\n      },\n      set customerId(v) {\n        customerId = v;\n      },\n      get $bus() {\n        return $bus;\n      },\n      set $bus(v) {\n        $bus = v;\n      },\n      innerHeight,\n      chartContainerRef,\n      chartContainerLoading,\n      get sourceTypeMap() {\n        return sourceTypeMap;\n      },\n      set sourceTypeMap(v) {\n        sourceTypeMap = v;\n      },\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      barChartSelect,\n      lineChartSelect,\n      timeChartSelect,\n      selectChange,\n      timeSelectChange,\n      switchDeptModal,\n      handleSwitchDept,\n      getDeptData,\n      getAllCustomerData,\n      getAllProjecttData,\n      get sourceData() {\n        return sourceData;\n      },\n      set sourceData(v) {\n        sourceData = v;\n      },\n      get chartOptionColosMap() {\n        return chartOptionColosMap;\n      },\n      set chartOptionColosMap(v) {\n        chartOptionColosMap = v;\n      },\n      setChartData,\n      getChartData,\n      getCustomerData,\n      getProjectData,\n      getOptionItem,\n      handleSwitchDeptModalOK,\n      chartOptions,\n      onBeforeMount,\n      onMounted,\n      reactive,\n      ref,\n      shallowRef,\n      unref,\n      get echarts() {\n        return echarts;\n      },\n      get queryYoyAnalysisDept() {\n        return queryYoyAnalysisDept;\n      },\n      get getDeptEcharts() {\n        return getDeptEcharts;\n      },\n      get getCustomerEcharts() {\n        return getCustomerEcharts;\n      },\n      get getProjectEchartsUsingPOST() {\n        return getProjectEchartsUsingPOST;\n      },\n      get getCustomer() {\n        return getCustomer;\n      },\n      get getProject() {\n        return getProject;\n      },\n      get Message() {\n        return Message;\n      },\n      get getCurrentInstance() {\n        return getCurrentInstance;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeMount","onMounted","reactive","ref","shallowRef","unref","echarts","queryYoyAnalysisDept","getDeptEcharts","getCustomerEcharts","getProjectEchartsUsingPOST","getCustomer","getProject","Message","getCurrentInstance","barChart","require","lineChart","timeChart","deptName","interval","deptId","title","sourceType","customerName","projectName","projectId","taxRate","customerId","window","history","state","$bus","appContext","config","globalProperties","innerHeight","chartContainerRef","chartContainerLoading","sourceTypeMap","dept","customer","project","myChart","barChartSelect","lineChartSelect","timeChartSelect","selectChange","setChartData","timeSelectChange","getChartData","getCustomerData","getProjectData","switchDeptModal","visible","selectItem","options","loading","handleSwitchDept","length","getDeptData","getAllCustomerData","getAllProjecttData","params","then","res","code","recursionDelChildren","arr","forEach","item","value","children","data","error","message","catch","err","finally","label","sourceData","chartOptionColosMap","barChartVal","split","lineChartVal","timeChartVal","includeName","legend","fliterData","includes","name","yAxisIndex","type","push","barWidth","itemStyle","color","chartOptions","bottom","itemGap","series","setOption","id","tagKey","xAxis","obj","getOptionItem","searchObj","currentSelectItem","searchItem","Object","keys","key","handleSwitchDeptModalOK","emit","msg","isBack","groupCustomerName","finPcode","tooltip","trigger","axisPointer","crossStyle","grid","left","axisTick","alignWithLabel","inside","axisLabel","rotate","yAxis","position","alignTicks","axisLine","show","lineStyle","formatter","splitLine","offset","boundaryGap","init","breadList"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/ringAnalyze/ringContrastChart.vue"],"sourcesContent":["<template>\n    <div :class=\"['defaultPadding',innerHeight>1000 && 'yCenter']\" :style=\"{'height':innerHeight>1000?innerHeight+'px':'auto'}\">\n        <header class=\"flex-center\">\n            <div class=\"flex\">\n                <div class=\"m-r-40\">\n                    <span>\n                        <img :src=\"barChart\" width=\"20\" class=\"img\">\n                    </span>\n                    <a-radio-group type=\"button\" size=\"medium\" v-model:model-value=\"barChartSelect\" @change=\"selectChange\">\n                        <a-radio value=\"营业收入(总) 直接成本(总)\">收入&成本(总)</a-radio>\n                        <a-radio value=\"人均营业收入 人均直接成本\">收入&成本(人均)</a-radio>\n                    </a-radio-group>\n                </div>\n                <div class=\"m-r-40\">\n                    <img :src=\"lineChart\" width=\"20\" class=\"img\">\n                    <a-checkbox-group v-model:model-value=\"lineChartSelect\" @change=\"selectChange\" class=\"checkbox-group\">\n                        <a-checkbox value=\"发薪人数\">\n                            <template #checkbox=\"{ checked }\">\n                                <a-tag :checked=\"checked\" :class=\"['checkbox-tag', 'checkbox-tag1',checked && 'checkbox-tag-active']\" checkable :style=\"{color : checked?'#3A64FF':'#666666'}\">发薪人数</a-tag>\n                            </template>\n                        </a-checkbox>\n                        <a-checkbox value=\"项目销售毛利率\">\n                            <template #checkbox=\"{ checked }\">\n                                <a-tag :checked=\"checked\" :class=\"['checkbox-tag', 'checkbox-tag2',checked && 'checkbox-tag-active']\" :style=\"{color : checked?'#3A64FF':'#666666'}\">项目销售毛利率</a-tag>\n                            </template>\n                        </a-checkbox>\n                    </a-checkbox-group>\n                </div>\n                <div class=\"m-r-170\">\n                    <img :src=\"timeChart\" width=\"20\" class=\"img\">\n                    <a-radio-group type=\"button\" size=\"medium\" v-model:model-value=\"timeChartSelect\" @change=\"timeSelectChange\">\n                        <a-radio value=\"3\">近3个月</a-radio>\n                        <a-radio value=\"6\">近6个月</a-radio>\n                        <a-radio value=\"12\">近12个月</a-radio>\n                    </a-radio-group>\n                </div>\n                <div>\n                    <a-button type=\"primary\" @click=\"handleSwitchDept\">切换{{ sourceTypeMap[sourceType] }}</a-button>\n                </div>\n            </div>\n        </header>\n        <main>\n            <a-spin :loading=\"chartContainerLoading\" tip=\"数据加载中...\" style=\"width: 100%;\">\n                <div ref=\"chartContainerRef\" class=\"chartContainer\">\n            </div>\n            </a-spin>\n        </main>\n    </div>\n    <a-modal v-model:visible=\"switchDeptModal.visible\" width=\"800px\" :body-style=\"{height:'200px'}\" title-align=\"start\">\n        <template #title>\n            <span class=\"modal-title\">切换{{ sourceTypeMap[sourceType] }}</span>\n        </template>\n        <a-spin :loading=\"switchDeptModal.loading\" style=\"width:100%\" tip=\"数据加载中...\">\n            <a-cascader-panel :options=\"switchDeptModal.options\" v-model=\"switchDeptModal.selectItem\" check-strictly expand-child/>\n        </a-spin>\n        <template #footer>\n            <div style=\"text-align: center;\">\n                <a-button type=\"outline\" class=\"m-r-10\" @click=\"switchDeptModal.visible=false\">取消</a-button>\n                <a-button type=\"primary\" @click=\"handleSwitchDeptModalOK\">确定</a-button>\n            </div>\n        </template>\n    </a-modal>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, reactive, ref, shallowRef, unref } from 'vue';\nimport * as echarts from 'echarts';\nimport { queryYoyAnalysisDept,getDeptEcharts,getCustomerEcharts,getProjectEchartsUsingPOST,getCustomer,getProject } from '@/api/lookChart'\nimport { Message } from \"@arco-design/web-vue\";\nconst barChart = require('@/assets/images/barChart.svg')\nconst lineChart = require('@/assets/images/lineChart.svg')\nconst timeChart = require('@/assets/images/timeChart.svg')\nlet { deptName,interval,deptId,title,sourceType,customerName,projectName,projectId,taxRate,customerId } = window.history.state\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nconst innerHeight = window.innerHeight\nconst chartContainerRef = ref(null)\nconst chartContainerLoading = ref(false)\nlet sourceTypeMap = {\n    dept : '部门',\n    customer : '客户',\n    project : '项目'\n}\nlet myChart\nconst barChartSelect = ref('营业收入(总) 直接成本(总)')\nconst lineChartSelect = shallowRef(['发薪人数'])\nconst timeChartSelect = ref(interval)\nconst selectChange =()=>{\n    setChartData()\n}\nconst timeSelectChange = ()=>{\n    switch (sourceType) {\n        case 'dept':\n            getChartData()\n            break;\n        case 'customer':\n            getCustomerData()\n            break;\n        case 'project':\n            getProjectData()\n            break;\n        default:\n            break;\n    }\n}\nconst switchDeptModal = reactive({\n    visible : false,\n    selectItem : '',\n    options : [],\n    loading : false\n})\nconst handleSwitchDept = ()=>{\n    switchDeptModal.visible = true\n    if(switchDeptModal.options.length === 0){\n        switch (sourceType) {\n            case 'dept':\n                getDeptData()\n                break;\n            case 'customer':\n                getAllCustomerData()\n                break;\n            case 'project':\n                getAllProjecttData()\n                break;\n            default:\n                break;\n        }\n    }\n}\nconst getDeptData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            interval : unref(timeChartSelect)\n        }\n        queryYoyAnalysisDept(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.deptId\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\n\nconst getAllCustomerData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : unref(timeChartSelect)\n        }\n        getCustomer(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.value = item.title\n                        item.label = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nconst getAllProjecttData = ()=>{\n    if(switchDeptModal.options.length === 0){\n        switchDeptModal.loading = true\n        let params = {\n            deptId,\n            interval : unref(timeChartSelect)\n        }\n        getProject(params).then(res=>{\n            if(res.code === '200'){\n                function recursionDelChildren(arr){\n                    arr.forEach(item=>{\n                        item.label = item.title\n                        item.value = item.title\n                        if(item?.children?.length){\n                            recursionDelChildren(item.children)\n                        }else {\n                            item.label = item.projectName\n                            item.value = item.projectName\n                            delete item.children\n                        }\n                    })\n                }\n                recursionDelChildren(res.data)\n                switchDeptModal.options = res.data\n            }else {\n                Message.error(res.message || '数据请求失败')\n            }\n        }).catch(err=>{\n            Message.error(err.message || '数据请求失败')\n        }).finally(()=>{\n            switchDeptModal.loading = false\n        })\n    }\n}\nlet sourceData = []\nlet chartOptionColosMap = {\n    '营业收入(总)'  : '#6BD4B3',\n    '人均营业收入' : '#6BD4B3',\n    '直接成本(总)' : '#3491FA',\n    '人均直接成本' : '#3491FA',\n    '发薪人数' : '#FB6D6C',\n    '项目销售毛利率' : '#008026'\n\n}\nconst setChartData = ()=>{\n    let barChartVal = barChartSelect.value.split(' ')\n    let lineChartVal = lineChartSelect.value\n    let timeChartVal = timeChartSelect.value\n    let includeName = [...barChartVal,...lineChartVal,timeChartVal]\n    let legend = []\n    let fliterData = []\n    sourceData.forEach(item=>{\n        if(includeName.includes(item.name)){\n            let yAxisIndex = 0\n            if(item.type === 'bar'){\n                yAxisIndex = 0\n            }\n            if(item.type === 'line'){\n                yAxisIndex = 1\n            }\n            if(item.type === 'line' && item.name === '项目销售毛利率'){\n                yAxisIndex = 2\n            }\n            fliterData.push({\n                ...item,\n                barWidth: 20,\n                yAxisIndex,\n                itemStyle: {\n                    color : chartOptionColosMap[item.name]\n                },\n            })\n            legend.push(item.name)\n        }\n    })\n   chartOptions.legend = {\n        data: legend,\n        bottom : 0,\n        itemGap : 100\n    }\n    chartOptions.series = fliterData\n    if(myChart){\n        myChart.setOption(chartOptions,true);\n    }\n}\n// 请求部门维度看图数据\nconst getChartData = (id)=>{\n    let params = {\n        deptId : id || deptId || \"\",\n        tagKey:\"linkAnalysis\",\n        interval :unref(timeChartSelect),\n    }\n    chartContainerLoading.value = true\n    getDeptEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n// 请求客户维度看图数\nconst getCustomerData = (name)=>{\n    let params = {\n        tagKey:\"linkAnalysis2\",\n        interval :unref(timeChartSelect),\n        deptId: deptId || \"\",\n        title : name || title,\n        customerId : customerId || ''\n    }\n    chartContainerLoading.value = true\n    getCustomerEcharts(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n// 请求项目维度看图数据\nconst getProjectData = (obj)=>{\n    let params = {\n        interval :unref(timeChartSelect),\n        deptId : deptId || \"\",\n        tagKey:\"linkAnalysis3\",\n        projectId: obj?.projectId || projectId,\n        taxRate : obj?.taxRate || taxRate,\n    }\n    chartContainerLoading.value = true\n    getProjectEchartsUsingPOST(params).then(res=>{\n        if(res.code === '200'){\n            let { xAxis,series } = res.data\n            chartOptions.xAxis[0].data = xAxis\n            sourceData = series\n            setChartData()\n        }else {\n            Message.error(res.message || '数据请求失败')\n        }\n    }).catch(err=>{\n        Message.error(err.message || '数据请求失败')\n    }).finally(()=>{\n        chartContainerLoading.value = false\n    })\n}\n//遍历树结构按条件找对应的数据\nfunction getOptionItem (arr,searchObj){\n    let currentSelectItem = {}\n    function searchItem(arr){\n        arr.forEach(item=>{\n            Object.keys(searchObj).forEach(key=>{\n                if(item[key] === searchObj[key]){\n                    currentSelectItem = item\n                }\n            })\n            if(item?.children?.length){\n                searchItem(item.children)\n            }\n        })\n    }\n    searchItem(arr)\n    return currentSelectItem\n}\nconst handleSwitchDeptModalOK = ()=>{\n    switchDeptModal.visible = false\n    if(switchDeptModal.selectItem){\n        let item\n        switch (sourceType) {\n            case 'dept':\n             item = getOptionItem(switchDeptModal.options,{ deptId : switchDeptModal.selectItem })\n            $bus.emit(\"updateStructure\", [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: item.deptName,\n                    isBack : true\n                },\n            ]);\n                getChartData(item.deptId)\n                break;\n            case 'customer':\n                 item = getOptionItem(switchDeptModal.options,{ title : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.title,\n                        isBack : true\n                    },\n                ]);\n                getCustomerData(item.title)\n                break;\n            case 'project':\n                 item = getOptionItem(switchDeptModal.options,{ projectName : switchDeptModal.selectItem })\n                $bus.emit(\"updateStructure\", [\n                    { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                    { type: \"text\", color: \"#333\", msg: deptName },\n                    { type: \"text\", color: \"#333\", msg:  `${item.groupCustomerName}-${customerName}`},\n                    {\n                        type: \"button\",\n                        color: \"#5370FD\",\n                        msg: item.projectName,\n                        isBack : true\n                    },\n                ]);\n                let { finPcode ,taxRate } = item\n                getProjectData({\n                    projectId :finPcode,\n                    taxRate\n                })\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nconst chartOptions = {\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                    color: '#999'\n                }\n            },\n            // formatter : (params)=>{\n            //     let div = params.map(item=>{\n            //         return `\n            //             <div>\n            //                 ${item.marker}  ${item.seriesName.endsWith('率')?item.seriesName+' '+item.value+'%': item.seriesName+' '+item.value}\n            //             </div>\n            //         `\n            //     })\n            //     return `<span>\n            //             ${div}\n            //         </span>`\n            // }\n        },\n        grid: {\n            left : '10%',\n        },\n        xAxis: [\n            {\n                type: 'category',\n                axisTick: {\n                    alignWithLabel: true,\n                    inside: true,\n                },\n                axisLabel:{ \n                    rotate : 45\n                },\n                data: [],\n            },\n        ],\n        yAxis: [\n            {\n                name : '柱状',\n                type: 'value',\n                position: 'left',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                name : '折线',\n                type: 'value',\n                position: 'right',\n                alignTicks: true,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}'\n                },\n                splitLine:{show: false}\n            },\n            {\n                name : '折线',\n                type: 'value',\n                position: 'right',\n                offset: 60,\n                boundaryGap: [0.01,1],\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#797979'\n                    }\n                },\n                axisLabel: {\n                    color: '#666',\n                    formatter: '{value}%'\n                },\n                splitLine:{show: false}\n            }\n            \n        ],\n        series: []\n    }\nonMounted(()=>{\n    myChart = echarts.init(unref(chartContainerRef));\n    chartOptions && myChart.setOption(chartOptions);\n})\n\nonBeforeMount(()=>{\n    let breadList \n    switch (sourceType) {\n        case 'dept':\n            breadList = [\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: '环比分析列表',\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: deptName },\n            ]\n            switchDeptModal.selectItem = deptId\n            getChartData()\n            break;\n        case 'customer':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: deptName,\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: title },\n            ]\n            switchDeptModal.selectItem = customerId\n            getCustomerData()\n            break;\n        case 'project':\n            breadList = [\n                { type: \"text\", color: \"#333\", msg: '环比分析列表' },\n                { type: \"text\", color: \"#333\", msg: deptName },\n                {\n                    type: \"button\",\n                    color: \"#5370FD\",\n                    msg: `${title}-${customerName}`,\n                    isBack : true\n                },\n                { type: \"text\", color: \"#333\", msg: projectName },\n            ]\n            switchDeptModal.selectItem = projectId\n            getProjectData()\n            break;\n        default:\n            break;\n    }\n    $bus.emit(\"updateStructure\", breadList);\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.img {\n    vertical-align: middle;\n    margin: 0 12px;\n}\n.m-r-40{\n    margin-right: 40px;\n}\n.m-r-170{\n    margin-right: 170px;\n}\n.chartContainer{\n    height: 600px;\n}\n.modal-title {\n  color: #5a5a5a;\n  font-size: 14px;\n  font-weight: bold;\n}\n:deep(.checkbox-group){\n    background: #F2F3F5;\n    padding:4px\n}\n:deep(.arco-checkbox-group .arco-checkbox){\n    margin-right : 0\n}\n:deep(.checkbox-group .checkbox-tag){\n    font-size:13px\n}\n:deep(.checkbox-group .checkbox-tag1){\n    margin-left:-4px\n}\n:deep(.checkbox-group .checkbox-tag2){\n    margin-left:-2px\n}\n:deep(.checkbox-group .checkbox-tag-active){\n    background : white\n}\n:deep(.checkbox-group .checkbox-tag:hover){\n    background : white\n}\n.yCenter{\n    display : flex;\n    flex-direction : column;\n    justify-content:center\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}