{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar min = Math.min,\n  max = Math.max,\n  abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      includeCombos: false,\n      selectedEdges: [],\n      selectedNodes: [],\n      selectedCombos: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n    if (this.trigger === 'drag') {\n      return {\n        'dragstart': 'onMouseDown',\n        'drag': 'onMouseMove',\n        'dragend': 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n    return {\n      'dragstart': 'onMouseDown',\n      'drag': 'onMouseMove',\n      'dragend': 'onMouseUp',\n      'canvas:click': 'clearStates',\n      'keyup': 'onKeyUp',\n      'keydown': 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n    if (item) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n    if (!brush) {\n      brush = this.createBrush();\n    }\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph;\n    // TODO: 触发了 canvas:click 导致 clearStates\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.brush.remove(true); // remove and destroy\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n      graph = _a.graph,\n      selectedState = _a.selectedState;\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    var combos = graph.findAllByState('combo', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    combos.forEach(function (combo) {\n      return graph.setItemState(combo, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n    this.selectedCombos = [];\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges, this.selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  isBBoxCenterInRect: function isBBoxCenterInRect(item, left, right, top, bottom) {\n    var bbox = item.getBBox();\n    return bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom;\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      originPoint = _a.originPoint,\n      shouldUpdate = _a.shouldUpdate,\n      isBBoxCenterInRect = _a.isBBoxCenterInRect;\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (node.isVisible() &&\n      // 隐藏节点不能被选中\n      isBBoxCenterInRect(node, left, right, top, bottom) && shouldUpdate(node, 'select', _this)) {\n        selectedNodes.push(node);\n        var model = node.getModel();\n        selectedIds.push(model.id);\n        graph.setItemState(node, state, true);\n      }\n    });\n    var selectedEdges = [];\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n          var model = edge.getModel();\n          var source = model.source,\n            target = model.target;\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select', _this)) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n    var selectedCombos = [];\n    if (this.includeCombos) {\n      graph.getCombos().forEach(function (combo) {\n        if (combo.isVisible() &&\n        // 隐藏节点不能被选中\n        isBBoxCenterInRect(combo, left, right, top, bottom) && shouldUpdate(combo, 'select', _this)) {\n          selectedCombos.push(combo);\n          var model = combo.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(combo, state, true);\n        }\n      });\n    }\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n    this.selectedCombos = selectedCombos;\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges, selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges,\n        combos: selectedCombos\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n    if (!code) {\n      return;\n    }\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase();\n    // 按住 control 键时，允许用户设置 trigger 为 ctrl\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n    this.keydown = false;\n  }\n};","map":{"version":3,"names":["min","Math","max","abs","DEFAULT_TRIGGER","ALLOW_EVENTS","getDefaultCfg","brushStyle","fill","fillOpacity","stroke","lineWidth","onSelect","onDeselect","selectedState","trigger","includeEdges","includeCombos","selectedEdges","selectedNodes","selectedCombos","getEvents","indexOf","toLowerCase","console","warn","onMouseDown","e","item","brush","keydown","length","clearStates","createBrush","originPoint","x","canvasX","y","canvasY","attr","width","height","show","dragging","onMouseMove","updateBrush","onMouseUp","graph","remove","getSelectedNodes","_a","nodes","findAllByState","edges","combos","forEach","node","setItemState","edge","combo","emit","selectedItems","select","isBBoxCenterInRect","left","right","top","bottom","bbox","getBBox","centerX","centerY","_this","shouldUpdate","state","p1","p2","getPointByCanvas","selectedIds","getNodes","isVisible","push","model","getModel","id","getOutEdges","source","target","includes","getCombos","self","get","addShape","attrs","capture","name","delegate","onKeyDown","code","key","triggerLowerCase","codeLowerCase","onKeyUp"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@antv/g6-pc/es/behavior/brush-select.js"],"sourcesContent":["var min = Math.min,\n  max = Math.max,\n  abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      includeCombos: false,\n      selectedEdges: [],\n      selectedNodes: [],\n      selectedCombos: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n    if (this.trigger === 'drag') {\n      return {\n        'dragstart': 'onMouseDown',\n        'drag': 'onMouseMove',\n        'dragend': 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n    return {\n      'dragstart': 'onMouseDown',\n      'drag': 'onMouseMove',\n      'dragend': 'onMouseUp',\n      'canvas:click': 'clearStates',\n      'keyup': 'onKeyUp',\n      'keydown': 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n    if (item) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n    if (!brush) {\n      brush = this.createBrush();\n    }\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph;\n    // TODO: 触发了 canvas:click 导致 clearStates\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n    this.brush.remove(true); // remove and destroy\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n      graph = _a.graph,\n      selectedState = _a.selectedState;\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    var combos = graph.findAllByState('combo', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    combos.forEach(function (combo) {\n      return graph.setItemState(combo, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n    this.selectedCombos = [];\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges, this.selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  isBBoxCenterInRect: function isBBoxCenterInRect(item, left, right, top, bottom) {\n    var bbox = item.getBBox();\n    return bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom;\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n    var _a = this,\n      graph = _a.graph,\n      originPoint = _a.originPoint,\n      shouldUpdate = _a.shouldUpdate,\n      isBBoxCenterInRect = _a.isBBoxCenterInRect;\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (node.isVisible() &&\n      // 隐藏节点不能被选中\n      isBBoxCenterInRect(node, left, right, top, bottom) && shouldUpdate(node, 'select', _this)) {\n        selectedNodes.push(node);\n        var model = node.getModel();\n        selectedIds.push(model.id);\n        graph.setItemState(node, state, true);\n      }\n    });\n    var selectedEdges = [];\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n          var model = edge.getModel();\n          var source = model.source,\n            target = model.target;\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select', _this)) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n    var selectedCombos = [];\n    if (this.includeCombos) {\n      graph.getCombos().forEach(function (combo) {\n        if (combo.isVisible() &&\n        // 隐藏节点不能被选中\n        isBBoxCenterInRect(combo, left, right, top, bottom) && shouldUpdate(combo, 'select', _this)) {\n          selectedCombos.push(combo);\n          var model = combo.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(combo, state, true);\n        }\n      });\n    }\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n    this.selectedCombos = selectedCombos;\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges, selectedCombos);\n    }\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges,\n        combos: selectedCombos\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n    if (!code) {\n      return;\n    }\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase();\n    // 按住 control 键时，允许用户设置 trigger 为 ctrl\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n    this.keydown = false;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}