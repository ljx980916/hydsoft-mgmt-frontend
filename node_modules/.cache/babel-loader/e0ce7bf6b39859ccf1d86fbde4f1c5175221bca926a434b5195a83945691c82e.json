{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, reactive, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nexport default {\n  __name: 'tableHeadTop',\n  props: {\n    tableProps: {\n      type: Object,\n      required: true\n    },\n    scrollEvtName: {\n      type: String,\n      required: true\n    },\n    rootDom: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    const theadRef = ref(null);\n    let headsWidth = [];\n    const contentRef = ref(null);\n    let isFirstCreate = true;\n    const tableContentRef = ref(null);\n    let rootEl = null;\n    onMounted(() => {\n      computedThWidth();\n      rootEl = document.querySelector(props.rootDom);\n      if (rootEl) rootEl.scrollTop = 0;\n      let scrollContainerElTop;\n      nextTick(() => {\n        let getELContainerDOMRect = rootEl.getBoundingClientRect();\n        scrollContainerElTop = parseFloat(getELContainerDOMRect.top);\n      });\n      $bus.on(props.scrollEvtName, obj => {\n        let domDOMRect = tableContentRef.value.getBoundingClientRect();\n        let domTop = parseFloat(domDOMRect.top);\n        let domBottom = parseFloat(domDOMRect.bottom);\n        scrollFn(obj.scrollTop, obj.direction, domTop, scrollContainerElTop, domBottom);\n      });\n    });\n    function computedThWidth() {\n      theadRef.value.querySelectorAll('tr th').forEach(el => {\n        let style = getComputedStyle(el);\n        headsWidth.push(el.offsetWidth);\n      });\n    }\n    let creatHeaderContainer;\n    let isFirstInsert = true;\n    let initialDomScrollTop = 0;\n    function scrollFn(scrollTop, direction, domTop, domContainerTop, domBottom) {\n      if (direction === 'down') {\n        if (isFirstCreate) {\n          let tableHeadEl = theadRef.value;\n          let cloneTableHeadEl = tableHeadEl.cloneNode(true);\n          cloneTableHeadEl.querySelectorAll('tr th').forEach((el, i) => {\n            el.style.width = headsWidth[i] + 'px';\n            el.style.display = 'inline-block';\n          });\n          creatHeaderContainer = document.createElement('div');\n          let div1 = document.createElement('div');\n          creatHeaderContainer.style.width = contentRef.value.offsetWidth + 'px';\n          creatHeaderContainer.className = '_tableHeadTopContainer ';\n          div1.className = '_tableHeadTopContent';\n          creatHeaderContainer.appendChild(div1);\n          div1.appendChild(cloneTableHeadEl);\n          isFirstCreate = false;\n        }\n        function scrollEvtFn(e) {\n          creatHeaderContainer.scrollLeft = e.target.scrollLeft;\n          creatHeaderContainer.parentNode.scrollLeft = e.target.scrollLeft;\n        }\n        if (domTop <= domContainerTop && isFirstInsert) {\n          let tableHeadEl = theadRef.value;\n          creatHeaderContainer.style.top = domTop - 11 + 'px';\n          initialDomScrollTop = scrollTop;\n          tableHeadEl.parentNode.parentNode.insertBefore(creatHeaderContainer, tableHeadEl.parentNode.parentNode.firstElementChild);\n          creatHeaderContainer.scrollLeft = creatHeaderContainer.parentNode.scrollLeft;\n          creatHeaderContainer.addEventListener('scroll', scrollEvtFn);\n          creatHeaderContainer.parentNode.addEventListener('scroll', scrollEvtFn);\n          isFirstInsert = false;\n        }\n        if (!isFirstCreate && domTop <= domContainerTop) {\n          let tableHeadEl = theadRef.value;\n          creatHeaderContainer.scrollLeft = tableHeadEl.parentNode.parentNode.scrollLeft;\n          creatHeaderContainer.style.display = 'block';\n          creatHeaderContainer.style.top = domContainerTop + 'px';\n        }\n        if (domBottom <= domContainerTop && creatHeaderContainer) {\n          creatHeaderContainer.style.display = 'none';\n        }\n      }\n      if (direction === 'up' && creatHeaderContainer) {\n        if (domBottom >= domContainerTop) {\n          creatHeaderContainer.style.display = 'block';\n        }\n        if (domTop >= domContainerTop) {\n          creatHeaderContainer.style.top = domTop + 'px';\n        }\n        if (scrollTop <= initialDomScrollTop) {\n          creatHeaderContainer.style.display = 'none';\n        }\n      }\n    }\n    expose({\n      computedThWidth\n    });\n    onBeforeUnmount(() => {\n      $bus.off(props.scrollEvtName);\n    });\n    return (_ctx, _cache) => {\n      const _component_a_table = _resolveComponent(\"a-table\");\n      return _openBlock(), _createElementBlock(\"main\", {\n        ref_key: \"contentRef\",\n        ref: contentRef\n      }, [_createElementVNode(\"div\", {\n        ref_key: \"tableContentRef\",\n        ref: tableContentRef\n      }, [_createVNode(_component_a_table, {\n        columns: props.tableProps.columns,\n        data: props.tableProps.dataSource,\n        loading: props.tableProps.loading,\n        pagination: props.tableProps.pagination\n      }, {\n        thead: _withCtx(() => [_createElementVNode(\"thead\", {\n          ref_key: \"theadRef\",\n          ref: theadRef\n        }, null, 512)]),\n        _: 1\n      }, 8, [\"columns\", \"data\", \"loading\", \"pagination\"])], 512)], 512);\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","reactive","onMounted","onBeforeUnmount","nextTick","getCurrentInstance","$bus","appContext","config","globalProperties","theadRef","headsWidth","contentRef","isFirstCreate","tableContentRef","rootEl","computedThWidth","document","querySelector","props","rootDom","scrollTop","scrollContainerElTop","getELContainerDOMRect","getBoundingClientRect","parseFloat","top","on","scrollEvtName","obj","domDOMRect","value","domTop","domBottom","bottom","scrollFn","direction","querySelectorAll","forEach","el","style","getComputedStyle","push","offsetWidth","creatHeaderContainer","isFirstInsert","initialDomScrollTop","domContainerTop","tableHeadEl","cloneTableHeadEl","cloneNode","i","width","display","createElement","div1","className","appendChild","scrollEvtFn","e","scrollLeft","target","parentNode","insertBefore","firstElementChild","addEventListener","expose","off"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/demo/tableHeadTop.vue"],"sourcesContent":["<template>\n    <main ref='contentRef'>\n          <div ref='tableContentRef'>\n            <a-table \n                :columns=\"props.tableProps.columns\"  \n                :data=\"props.tableProps.dataSource\"  \n                :loading=\"props.tableProps.loading\"\n                :pagination=\"props.tableProps.pagination\" \n            >\n                <template #thead>\n                    <thead ref=\"theadRef\"></thead>\n                </template>\n            </a-table>\n          </div>\n      </main>\n  </template>\n  \n  \n  <script setup>\n  import { ref,reactive,onMounted,onBeforeUnmount, nextTick,defineExpose } from 'vue';\n  import { getCurrentInstance } from \"@vue/runtime-core\";\n  let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n  const props = defineProps({\n    tableProps : {\n        type : Object,\n        required : true\n    },\n    scrollEvtName : {\n        type : String,\n        required : true\n    },\n    rootDom : {\n        type : String,\n        required : true\n    }\n  })\n  const theadRef = ref(null)\n  let headsWidth = []\n  const contentRef = ref(null)\n  let isFirstCreate = true\n  const tableContentRef = ref(null)\n  let rootEl = null\n  onMounted(()=>{\n    computedThWidth()\n    rootEl = document.querySelector(props.rootDom) \n    if(rootEl)rootEl.scrollTop = 0\n    let scrollContainerElTop\n    nextTick(()=>{\n        let getELContainerDOMRect = rootEl.getBoundingClientRect()\n        scrollContainerElTop = parseFloat(getELContainerDOMRect.top)\n    })\n    $bus.on(props.scrollEvtName,(obj)=>{\n        let domDOMRect = tableContentRef.value.getBoundingClientRect()\n        let domTop = parseFloat(domDOMRect.top)\n        let domBottom = parseFloat(domDOMRect.bottom)\n        scrollFn(obj.scrollTop,obj.direction,domTop,scrollContainerElTop ,domBottom)\n    })\n  })\n\n  function computedThWidth(){\n    theadRef.value.querySelectorAll('tr th').forEach(el=>{\n        let style = getComputedStyle(el)\n        headsWidth.push(el.offsetWidth)\n    })\n  }\n  let creatHeaderContainer\n  let isFirstInsert = true\n  let initialDomScrollTop = 0\n  function scrollFn( scrollTop,direction,domTop,domContainerTop,domBottom ){\n    if(direction === 'down'){\n        if(isFirstCreate){\n            let tableHeadEl =theadRef.value\n            let cloneTableHeadEl = tableHeadEl.cloneNode(true)\n                cloneTableHeadEl.querySelectorAll('tr th').forEach((el,i)=>{\n                el.style.width =  headsWidth[i] + 'px'\n                el.style.display = 'inline-block'\n            })\n            creatHeaderContainer= document.createElement('div')\n            let div1 = document.createElement('div')\n        \n            creatHeaderContainer.style.width = contentRef.value.offsetWidth + 'px'\n            creatHeaderContainer.className = '_tableHeadTopContainer '\n            div1.className = '_tableHeadTopContent'\n            creatHeaderContainer.appendChild(div1)\n            \n            div1.appendChild(cloneTableHeadEl)\n            isFirstCreate = false\n        }\n        function scrollEvtFn(e){\n            creatHeaderContainer.scrollLeft = e.target.scrollLeft\n            creatHeaderContainer.parentNode.scrollLeft = e.target.scrollLeft\n        }\n        \n        if( (domTop <= domContainerTop) && isFirstInsert){\n            let tableHeadEl =theadRef.value\n            creatHeaderContainer.style.top = domTop-11+'px'\n            initialDomScrollTop = scrollTop\n            tableHeadEl.parentNode.parentNode.insertBefore(creatHeaderContainer,tableHeadEl.parentNode.parentNode.firstElementChild)\n            creatHeaderContainer.scrollLeft = creatHeaderContainer.parentNode.scrollLeft\n            creatHeaderContainer.addEventListener('scroll',scrollEvtFn)\n            creatHeaderContainer.parentNode.addEventListener('scroll',scrollEvtFn)\n            isFirstInsert = false\n        }\n        if(!isFirstCreate && (domTop <= domContainerTop)){\n            let tableHeadEl =theadRef.value\n            creatHeaderContainer.scrollLeft = tableHeadEl.parentNode.parentNode.scrollLeft\n            creatHeaderContainer.style.display = 'block'\n            creatHeaderContainer.style.top = domContainerTop  + 'px'\n        }\n        if( (domBottom <= domContainerTop) && creatHeaderContainer ){\n            creatHeaderContainer.style.display = 'none'\n        }\n    }\n    if(direction === 'up' && creatHeaderContainer){\n        if(domBottom >= domContainerTop){\n            creatHeaderContainer.style.display = 'block'\n        }\n        if(domTop >= domContainerTop){\n            creatHeaderContainer.style.top = domTop + 'px'\n        }\n        if(scrollTop <= initialDomScrollTop){\n            creatHeaderContainer.style.display = 'none'\n        }\n    }\n  }\n  defineExpose({\n    computedThWidth\n  })\n  onBeforeUnmount(()=>{\n    $bus.off(props.scrollEvtName)\n  })\n  </script>\n  \n  <style lang=\"scss\">\n._tableHeadTopContainer  {\n    position : fixed;\n    z-index : 100 ;\n    overflow-x : auto;\n}\n._tableHeadTopContainer  {\n  &::-webkit-scrollbar {\n    height: 0;\n  }\n}\n._tableHeadTopContent {\n    width : max-content;\n}\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}