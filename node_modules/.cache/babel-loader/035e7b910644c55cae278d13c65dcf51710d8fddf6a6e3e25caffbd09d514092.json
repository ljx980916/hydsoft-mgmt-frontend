{"ast":null,"code":"/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging'\n};\n// for FireFox\nvar BASELINE_MAP_FOR_FIREFOX = {\n  top: 'text-before-edge',\n  middle: 'central',\n  bottom: 'text-after-edge',\n  alphabetic: 'alphabetic',\n  hanging: 'hanging'\n};\nvar ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end'\n};\nvar Text = /** @class */function (_super) {\n  __extends(Text, _super);\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'text';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  };\n  Text.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n    var attrs = this.attr();\n    var el = this.get('el');\n    this._setFont();\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'text') {\n        _this._setText(\"\" + value);\n      } else if (attr === 'matrix' && value) {\n        setTransform(_this);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    el.setAttribute('paint-order', 'stroke');\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n  };\n  Text.prototype._setFont = function () {\n    var el = this.get('el');\n    var _a = this.attr(),\n      textBaseline = _a.textBaseline,\n      textAlign = _a.textAlign;\n    var browser = detect();\n    if (browser && browser.name === 'firefox') {\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n    } else {\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n    }\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n  };\n  Text.prototype._setText = function (text) {\n    var el = this.get('el');\n    var _a = this.attr(),\n      x = _a.x,\n      _b = _a.textBaseline,\n      baseline = _b === void 0 ? 'bottom' : _b;\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      var textArr = text.split('\\n');\n      var textLen_1 = textArr.length - 1;\n      var arr_1 = '';\n      each(textArr, function (segment, i) {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'top') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'middle') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'bottom') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'hanging') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          }\n        } else {\n          arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n        }\n      });\n      el.innerHTML = arr_1;\n    } else {\n      el.innerHTML = text;\n    }\n  };\n  return Text;\n}(ShapeBase);\nexport default Text;","map":{"version":3,"mappings":"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","names":["each","detect","setTransform","SVG_ATTR_MAP","ShapeBase","LETTER_SPACING","BASELINE_MAP","top","middle","bottom","alphabetic","hanging","BASELINE_MAP_FOR_FIREFOX","ANCHOR_MAP","left","start","center","right","end","__extends","_this","Text","attrs","_super","getDefaultAttrs","x","y","text","fontSize","fontFamily","fontStyle","fontWeight","fontVariant","textAlign","textBaseline","context","targetAttrs","attr","el","get","_setFont","value","_setText","setAttribute","browser","name","_b","baseline","innerHTML","indexOf","textArr","split","textLen_1","length","arr_1","segment","i"],"sourceRoot":"","sources":["../../src/shape/text.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}