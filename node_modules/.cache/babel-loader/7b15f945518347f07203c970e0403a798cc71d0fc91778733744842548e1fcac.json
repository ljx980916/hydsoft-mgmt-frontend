{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, toRaw, onBeforeMount } from \"vue\";\nimport { roleListColumns } from \"./constColumns\";\nimport { roleList, addRole, editRole, delRole, roleInfo } from \"@/api/roleManage\";\nimport { list } from \"@/api/menu\";\nimport { Message } from \"@arco-design/web-vue\";\nimport TableContainer from \"@/components/tableContainer.vue\";\nimport { useMenuStore } from \"../../store/index\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nexport default {\n  __name: 'roleManage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const permissions = useMenuStore().getPermission;\n    let $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\n    onBeforeMount(() => {\n      $bus.emit(\"updateStructure\", [{\n        type: \"text\",\n        color: \"#333\",\n        msg: \"角色列表\"\n      }]);\n    });\n    const roleCode = ref(\"\");\n    const dataContent = reactive({\n      columns: roleListColumns,\n      dataSource: [],\n      loading: false,\n      pagination: {\n        pageNum: 1,\n        pageSize: 10,\n        total: 0\n      },\n      menuName: \"role\"\n    });\n    const addRoleModal = ref(false);\n    const form = reactive({\n      name: \"\",\n      code: \"\",\n      remarks: \"\"\n    });\n    const defaultCheckedList = ref([]);\n    const casList = ref([]);\n    const roleId = ref(\"\");\n    const selectedList = ref([]);\n    const formRef = ref();\n    const treeData = arr => {\n      const treeArr = [];\n      arr.forEach(item => {\n        let obj = {\n          title: item.name,\n          key: item.id\n        };\n        if (item.children && item.children.length) {\n          obj.children = treeData(item.children);\n          treeArr.push(obj);\n        } else {\n          treeArr.push(obj);\n        }\n      });\n      return treeArr;\n    };\n    // 获取角色管理列表\n    const getRoleList = () => {\n      dataContent.loading = true;\n      let obj = {\n        code: roleCode.value,\n        pageNum: dataContent.pagination.pageNum,\n        pageSize: dataContent.pagination.pageSize\n      };\n      roleList(obj).then(res => {\n        if (res.code === \"000000000000\") {\n          res.data.list.forEach((item, i) => {\n            item.key = i;\n          });\n          dataContent.dataSource = res.data.list;\n          dataContent.pagination.total = Number(res.data.total);\n        }\n        dataContent.loading = false;\n      });\n    };\n    getRoleList();\n    // 获取菜单列表\n    const getMenuList = () => {\n      list().then(res => {\n        if (res.code === \"000000000000\") {\n          let arr = [];\n          res.data.forEach(item => {\n            item.children = [];\n            item.key = item.id;\n            if (item.parentId === \"000000\") {\n              arr.push(item);\n            }\n            res.data.forEach(val => {\n              if (val.parentId === item.id) {\n                item.children.push(val);\n              }\n            });\n          });\n          casList.value = treeData(arr.slice());\n        }\n      });\n    };\n    getMenuList();\n    // 查询\n    const searchBase = () => {\n      getRoleList();\n    };\n    // 重置\n    const setBase = () => {\n      roleCode.value = \"\";\n      getRoleList();\n    };\n    // 编辑\n    const handleDetail = (obj, type) => {\n      formRef.value.resetFields();\n      addRoleModal.value = true;\n      roleId.value = type === \"new\" ? \"\" : obj.id;\n      if (type === \"edit\") {\n        roleInfo(obj).then(res => {\n          form.name = res.data.name;\n          form.code = res.data.code;\n          form.remarks = res.data.remarks;\n          form.isShowTab = res.data.isShowTab;\n          let newArr = [];\n          selectedList.value = res.data.menuIdList;\n          res.data.menuIdList.forEach(item => {\n            checkedSelect(item, casList.value, newArr);\n          });\n          defaultCheckedList.value = newArr;\n        });\n      }\n    };\n    // 多选\n    const checkedSelect = (id, data, newArr) => {\n      data = toRaw(data);\n      data.forEach(item => {\n        if (item.key === id) {\n          if (!item.children) {\n            newArr.push(item.key);\n          }\n        } else {\n          if (item.children && item.children.length > 0) {\n            checkedSelect(id, item.children, newArr);\n          }\n        }\n      });\n    };\n    // 删除\n    const delRoleItem = record => {\n      delRole(record).then(res => {\n        if (res.code === \"000000000000\") {\n          Message.success(\"删除成功!\");\n          getRoleList();\n        } else {\n          Message.error(res.message);\n        }\n      });\n    };\n    // 表单取消\n    const handleModalCancel = () => {\n      addRoleModal.value = false;\n    };\n    // 表单确定\n    const handleModalOk = () => {\n      if (selectedList.value.length === 0) {\n        Message.error(\"请选择菜单权限\");\n        return;\n      }\n      let values = toRaw(form);\n      values.id = roleId.value;\n      values.menuIdList = selectedList.value;\n      formRef.value.validate(err => {\n        if (!err) {\n          values.isShowTab = values.isShowTab ? 1 : 0;\n          if (values.id === \"\") {\n            addRole(values).then(res => {\n              if (res.code === \"000000000000\") {\n                Message.success(\"新建成功!\");\n                getRoleList();\n              } else {\n                Message.error(res.message);\n              }\n            });\n          } else {\n            editRole(values).then(res => {\n              if (res.code === \"000000000000\") {\n                Message.success(\"更新成功!\");\n                getRoleList();\n              } else {\n                Message.error(res.message);\n              }\n            });\n          }\n          addRoleModal.value = false;\n        }\n      });\n    };\n    const onCheckTree = (checkedKeys, info) => {\n      let list = [];\n      list = list.concat(checkedKeys).concat(info.halfCheckedKeys);\n      selectedList.value = list;\n    };\n    // 更改当前页码\n    const paginationCurrentChange = current => {\n      dataContent.pagination.pageNum = current;\n      getRoleList();\n    };\n    // 更改页容量\n    const paginationPageSizeChange = pageSize => {\n      dataContent.pagination.pageSize = pageSize;\n      getRoleList();\n    };\n    const __returned__ = {\n      permissions,\n      get $bus() {\n        return $bus;\n      },\n      set $bus(v) {\n        $bus = v;\n      },\n      roleCode,\n      dataContent,\n      addRoleModal,\n      form,\n      defaultCheckedList,\n      casList,\n      roleId,\n      selectedList,\n      formRef,\n      treeData,\n      getRoleList,\n      getMenuList,\n      searchBase,\n      setBase,\n      handleDetail,\n      checkedSelect,\n      delRoleItem,\n      handleModalCancel,\n      handleModalOk,\n      onCheckTree,\n      paginationCurrentChange,\n      paginationPageSizeChange,\n      reactive,\n      ref,\n      toRaw,\n      onBeforeMount,\n      get roleListColumns() {\n        return roleListColumns;\n      },\n      get roleList() {\n        return roleList;\n      },\n      get addRole() {\n        return addRole;\n      },\n      get editRole() {\n        return editRole;\n      },\n      get delRole() {\n        return delRole;\n      },\n      get roleInfo() {\n        return roleInfo;\n      },\n      get list() {\n        return list;\n      },\n      get Message() {\n        return Message;\n      },\n      TableContainer,\n      get useMenuStore() {\n        return useMenuStore;\n      },\n      get getCurrentInstance() {\n        return getCurrentInstance;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","toRaw","onBeforeMount","roleListColumns","roleList","addRole","editRole","delRole","roleInfo","list","Message","TableContainer","useMenuStore","getCurrentInstance","permissions","getPermission","$bus","appContext","config","globalProperties","emit","type","color","msg","roleCode","dataContent","columns","dataSource","loading","pagination","pageNum","pageSize","total","menuName","addRoleModal","form","name","code","remarks","defaultCheckedList","casList","roleId","selectedList","formRef","treeData","arr","treeArr","forEach","item","obj","title","key","id","children","length","push","getRoleList","value","then","res","data","i","Number","getMenuList","parentId","val","slice","searchBase","setBase","handleDetail","resetFields","isShowTab","newArr","menuIdList","checkedSelect","delRoleItem","record","success","error","message","handleModalCancel","handleModalOk","values","validate","err","onCheckTree","checkedKeys","info","concat","halfCheckedKeys","paginationCurrentChange","current","paginationPageSizeChange"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/views/system/roleManage.vue"],"sourcesContent":["<template>\n  <div class=\"defaultPadding\">\n    <!-- 搜索栏 -->\n    <a-space>\n      <span>角色编码：</span>\n      <a-input v-model=\"roleCode\" placeholder=\"请输入角色编码\" class=\"w-200\" />\n      <a-button class=\"m-l-16\" type=\"primary\" @click=\"searchBase\">\n        <template #icon>\n          <icon-search />\n        </template>\n        <template #default>搜索</template>\n      </a-button>\n      <a-button class=\"m-l-8\" @click=\"setBase\">\n        <template #icon>\n          <icon-refresh />\n        </template>\n        <template #default>重置</template>\n      </a-button>\n    </a-space>\n    <!-- 新建角色 -->\n    <div class=\"m-t-20\">\n      <a-button type=\"primary\" @click=\"handleDetail({}, 'new')\" v-if=\"permissions.includes('role:add')\">\n        <template #icon>\n          <icon-plus />\n        </template>\n        <template #default>新建角色</template>\n      </a-button>\n    </div>\n    <!-- 表格内容 -->\n    <TableContainer\n      class=\"m-t-20\"\n      column-resizable\n      :scroll=\"{ y: 600 }\"\n      :scrollbar=\"false\"\n      :loading=\"dataContent.loading\"\n      :paginationTotal=\"dataContent.pagination.total\"\n      :paginationPageSize=\"dataContent.pagination.pageSize\"\n      :paginationCurrent=\"dataContent.pagination.pageNum\"\n      :tableColumns=\"dataContent.columns\"\n      :table-data=\"dataContent.dataSource\"\n      :menu-name=\"dataContent.menuName\"\n      @handleEdit=\"handleDetail\"\n      @handleDeleteMenu=\"delRoleItem\"\n      @paginationCurrentChange=\"paginationCurrentChange\"\n      @paginationPageSizeChange=\"paginationPageSizeChange\"\n    ></TableContainer>\n    <!-- 添加角色表单 -->\n    <a-modal :mask=\"true\" v-model:visible=\"addRoleModal\" title=\"添加角色\">\n      <a-form :model=\"form\" ref=\"formRef\">\n        <a-form-item field=\"name\" label=\"角色名称\" :rules=\"[{ required: true, message: '请输入角色名称' }]\">\n          <a-input type=\"text\" placeholder=\"请输入角色名称\" v-model=\"form.name\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"code\" label=\"角色编码\" :rules=\"[{ required: true, message: '请输入角色编码' }]\">\n          <a-input type=\"text\" placeholder=\"请输入角色编码\" v-model=\"form.code\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"remarks\" label=\"备注\" :rules=\"[{ required: true, message: '请输入备注' }]\">\n          <a-input type=\"text\" placeholder=\"请输入备注\" v-model=\"form.remarks\"></a-input>\n        </a-form-item>\n        <a-form-item field=\"isShowTab\" label=\"显示页签\" :rules=\"[{ required: true, message: '请选择是否显示页签' }]\">\n          <a-radio-group v-model:model-value=\"form.isShowTab\" style=\"margin-top: 10px;\">\n            <a-radio :value=\"true\">是</a-radio>\n            <a-radio :value=\"false\">否</a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item field=\"defaultCheckedList\" label=\"授权菜单\">\n          <a-tree\n            :checkable=\"true\"\n            :checkStrictly=\"false\"\n            :data=\"casList\"\n            v-model:checked-keys=\"defaultCheckedList\"\n            @check=\"onCheckTree\"\n          />\n        </a-form-item>\n      </a-form>\n      <template #footer>\n        <a-button @click=\"handleModalCancel\">取消</a-button>\n        <a-button type=\"primary\" @click=\"handleModalOk\">确定</a-button>\n      </template>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref, toRaw, onBeforeMount } from \"vue\";\nimport { roleListColumns } from \"./constColumns\";\nimport { roleList, addRole, editRole, delRole, roleInfo, } from \"@/api/roleManage\";\nimport { list } from \"@/api/menu\";\nimport { Message } from \"@arco-design/web-vue\";\nimport TableContainer from \"@/components/tableContainer.vue\";\nimport { useMenuStore } from \"../../store/index\";\nimport { getCurrentInstance } from \"@vue/runtime-core\";\nconst permissions = useMenuStore().getPermission;\nlet $bus = getCurrentInstance().appContext.config.globalProperties.$bus;\nonBeforeMount(() => {\n  $bus.emit(\"updateStructure\", [{ type: \"text\", color: \"#333\", msg: \"角色列表\" }]);\n});\n\nconst roleCode = ref(\"\");\nconst dataContent = reactive({\n  columns: roleListColumns,\n  dataSource: [],\n  loading: false,\n  pagination: {\n    pageNum: 1,\n    pageSize: 10,\n    total: 0,\n  },\n  menuName: \"role\",\n});\nconst addRoleModal = ref(false);\nconst form = reactive({\n  name: \"\",\n  code: \"\",\n  remarks: \"\",\n});\nconst defaultCheckedList = ref([]);\nconst casList = ref([]);\n\nconst roleId = ref(\"\");\nconst selectedList = ref([]);\nconst formRef = ref();\n\nconst treeData = arr => {\n  const treeArr = [];\n  arr.forEach(item => {\n    let obj = { title: item.name, key: item.id };\n    if (item.children && item.children.length) {\n      obj.children = treeData(item.children);\n      treeArr.push(obj);\n    } else {\n      treeArr.push(obj);\n    }\n  });\n  return treeArr;\n};\n// 获取角色管理列表\nconst getRoleList = () => {\n  dataContent.loading = true;\n  let obj = {\n    code: roleCode.value,\n    pageNum: dataContent.pagination.pageNum,\n    pageSize: dataContent.pagination.pageSize,\n  };\n  roleList(obj).then(res => {\n    if (res.code === \"000000000000\") {\n      res.data.list.forEach((item, i) => {\n        item.key = i;\n      });\n      dataContent.dataSource = res.data.list;\n      dataContent.pagination.total = Number(res.data.total);\n    }\n    dataContent.loading = false;\n  });\n};\ngetRoleList();\n// 获取菜单列表\nconst getMenuList = () => {\n  list().then(res => {\n    if (res.code === \"000000000000\") {\n      let arr = [];\n      res.data.forEach(item => {\n        item.children = [];\n        item.key = item.id;\n        if (item.parentId === \"000000\") {\n          arr.push(item);\n        }\n        res.data.forEach(val => {\n          if (val.parentId === item.id) {\n            item.children.push(val);\n          }\n        });\n      });\n      casList.value = treeData(arr.slice());\n    }\n  });\n};\ngetMenuList();\n// 查询\nconst searchBase = () => {\n  getRoleList();\n};\n// 重置\nconst setBase = () => {\n  roleCode.value = \"\";\n  getRoleList();\n};\n// 编辑\nconst handleDetail = (obj, type) => {\n  formRef.value.resetFields();\n  addRoleModal.value = true;\n  roleId.value = type === \"new\" ? \"\" : obj.id;\n  if (type === \"edit\") {\n    roleInfo(obj).then(res => {\n      form.name = res.data.name;\n      form.code = res.data.code;\n      form.remarks = res.data.remarks;\n      form.isShowTab = res.data.isShowTab\n      let newArr = [];\n      selectedList.value = res.data.menuIdList;\n      res.data.menuIdList.forEach(item => {\n        checkedSelect(item, casList.value, newArr);\n      });\n      defaultCheckedList.value = newArr;\n    });\n  }\n};\n// 多选\nconst checkedSelect = (id, data, newArr) => {\n  data = toRaw(data);\n  data.forEach(item => {\n    if (item.key === id) {\n      if (!item.children) {\n        newArr.push(item.key);\n      }\n    } else {\n      if (item.children && item.children.length > 0) {\n        checkedSelect(id, item.children, newArr);\n      }\n    }\n  });\n};\n// 删除\nconst delRoleItem = record => {\n  delRole(record).then(res => {\n    if (res.code === \"000000000000\") {\n      Message.success(\"删除成功!\");\n      getRoleList();\n    } else {\n      Message.error(res.message);\n    }\n  });\n};\n// 表单取消\nconst handleModalCancel = () => {\n  addRoleModal.value = false;\n};\n// 表单确定\nconst handleModalOk = () => {\n  if (selectedList.value.length === 0) {\n    Message.error(\"请选择菜单权限\");\n    return;\n  }\n  let values = toRaw(form);\n  values.id = roleId.value;\n  values.menuIdList = selectedList.value;\n  formRef.value.validate(err => {\n    if (!err) {\n      values.isShowTab = values.isShowTab?1:0\n      if (values.id === \"\") {\n        addRole(values).then(res => {\n          if (res.code === \"000000000000\") {\n            Message.success(\"新建成功!\");\n            getRoleList();\n          } else {\n            Message.error(res.message);\n          }\n        });\n      } else {\n        editRole(values).then(res => {\n          if (res.code === \"000000000000\") {\n            Message.success(\"更新成功!\");\n            getRoleList();\n          } else {\n            Message.error(res.message);\n          }\n        });\n      }\n      addRoleModal.value = false;\n    }\n  });\n};\nconst onCheckTree = (checkedKeys, info) => {\n  let list = [];\n  list = list.concat(checkedKeys).concat(info.halfCheckedKeys);\n  selectedList.value = list;\n};\n// 更改当前页码\nconst paginationCurrentChange = current => {\n  dataContent.pagination.pageNum = current;\n  getRoleList();\n};\n// 更改页容量\nconst paginationPageSizeChange = pageSize => {\n  dataContent.pagination.pageSize = pageSize;\n  getRoleList();\n};\n</script>\n\n<style lang=\"scss\">\n.w-200 {\n  width: 200px;\n}\n\n.m-t-20 {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}