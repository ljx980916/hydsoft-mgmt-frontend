{"ast":null,"code":"import { onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'scatterPlot',\n  props: {\n    seriesData: Array,\n    color: Array\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    watch(() => [props.seriesData, props.color], ([preSeries, preColor]) => {\n      getCharts(preSeries, preColor);\n    });\n    var myChart;\n    const getCharts = (seriesData, color) => {\n      if (myChart != null && myChart != \"\" && myChart != undefined) {\n        myChart.dispose();\n      }\n      var chartDom = document.getElementById(\"conversion\");\n      myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        // 颜色\n        color: color,\n        // 标签\n        legend: {\n          itemHeight: 15,\n          //改变圆圈大小\n          top: \"center\",\n          right: \"right\",\n          //文字显示的颜色和字体大小\n          textStyle: {\n            color: \"black\",\n            fontSize: 12\n          }\n        },\n        // 图形整体宽高\n        grid: {\n          left: \"10%\",\n          right: \"15%\",\n          top: \"18%\"\n        },\n        // 提示\n        tooltip: {\n          //十字线\n          axisPointer: {\n            type: \"cross\"\n          },\n          padding: 10,\n          borderColor: \"rgb(233, 234, 235)\",\n          //设置tooltip的显示内容\n          formatter: function (obj) {\n            var value = obj.value;\n            var str = `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3);\">\n          <span>${value[2]}</span>\n          </div>`;\n            return str;\n          }\n        },\n        // x轴\n        xAxis: {\n          type: \"value\",\n          name: \"销售收入/元\",\n          nameGap: 16,\n          splitLine: {\n            show: false\n          }\n        },\n        // y轴\n        yAxis: {\n          type: \"value\",\n          name: \"销售毛利/元\",\n          nameLocation: \"end\",\n          nameGap: 20,\n          splitLine: {\n            show: false\n          }\n        },\n        // 展示数据\n        series: seriesData\n      };\n      option && myChart.setOption(option);\n    };\n    onMounted(() => {\n      getCharts(props.seriesData, props.color);\n    });\n    const __returned__ = {\n      props,\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      getCharts,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAMA,SAASA,SAAS,EAAEC,KAAK,QAAQ,KAAK;AACtC,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;IAKlCD,KAAK,CACH,MAAM,CAACE,KAAK,CAACC,UAAU,EAAED,KAAK,CAACE,KAAK,CAAC,EACrC,CAAC,CAACC,SAAS,EAAEC,QAAQ,CAAC,KAAK;MACzBC,SAAS,CAACF,SAAS,EAAEC,QAAQ,CAAC;IAChC,CAAC,CACF;IACD,IAAIE,OAAO;IACX,MAAMD,SAAS,GAAG,CAACJ,UAAU,EAAEC,KAAK,KAAK;MACvC,IAAII,OAAO,IAAI,IAAI,IAAIA,OAAO,IAAI,EAAE,IAAIA,OAAO,IAAIC,SAAS,EAAE;QAC5DD,OAAO,CAACE,OAAO,EAAE;MACnB;MACA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACpDL,OAAO,GAAGP,OAAO,CAACa,IAAI,CAACH,QAAQ,CAAC;MAChC,IAAII,MAAM;MACVA,MAAM,GAAG;QACP;QACAX,KAAK,EAAEA,KAAK;QACZ;QACAY,MAAM,EAAE;UACNC,UAAU,EAAE,EAAE;UAAE;UAChBC,GAAG,EAAE,QAAQ;UACbC,KAAK,EAAE,OAAO;UACd;UACAC,SAAS,EAAE;YACThB,KAAK,EAAE,OAAO;YACdiB,QAAQ,EAAE;UACZ;QACF,CAAC;QACD;QACAC,IAAI,EAAE;UACJC,IAAI,EAAE,KAAK;UACXJ,KAAK,EAAE,KAAK;UACZD,GAAG,EAAE;QACP,CAAC;QACD;QACAM,OAAO,EAAE;UACP;UACAC,WAAW,EAAE;YACXC,IAAI,EAAE;UACR,CAAC;UACDC,OAAO,EAAE,EAAE;UACXC,WAAW,EAAE,oBAAoB;UACjC;UACAC,SAAS,EAAE,UAAUC,GAAG,EAAE;YACxB,IAAIC,KAAK,GAAGD,GAAG,CAACC,KAAK;YACrB,IAAIC,GAAG,GAAI;AACnB,kBAAkBD,KAAK,CAAC,CAAC,CAAE;AAC3B,iBAAiB;YACT,OAAOC,GAAG;UACZ;QACF,CAAC;QACD;QACAC,KAAK,EAAE;UACLP,IAAI,EAAE,OAAO;UACbQ,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE,EAAE;UACXC,SAAS,EAAE;YACTC,IAAI,EAAE;UACR;QACF,CAAC;QACD;QACAC,KAAK,EAAE;UACLZ,IAAI,EAAE,OAAO;UACbQ,IAAI,EAAE,QAAQ;UACdK,YAAY,EAAE,KAAK;UACnBJ,OAAO,EAAE,EAAE;UACXC,SAAS,EAAE;YACTC,IAAI,EAAE;UACR;QACF,CAAC;QACD;QACAG,MAAM,EAAErC;MACV,CAAC;MACDY,MAAM,IAAIP,OAAO,CAACiC,SAAS,CAAC1B,MAAM,CAAC;IACrC,CAAC;IACDhB,SAAS,CAAC,MAAM;MACdQ,SAAS,CAACL,KAAK,CAACC,UAAU,EAAED,KAAK,CAACE,KAAK,CAAC;IAC1C,CAAC,CAAC","names":["onMounted","watch","echarts","props","seriesData","color","preSeries","preColor","getCharts","myChart","undefined","dispose","chartDom","document","getElementById","init","option","legend","itemHeight","top","right","textStyle","fontSize","grid","left","tooltip","axisPointer","type","padding","borderColor","formatter","obj","value","str","xAxis","name","nameGap","splitLine","show","yAxis","nameLocation","series","setOption"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/components/scatterPlot.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"conversion\"></div>\n  </div>\n</template>\n<script setup>\nimport { onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nconst props = defineProps({\n  seriesData: Array,\n  color: Array,\n});\nwatch(\n  () => [props.seriesData, props.color],\n  ([preSeries, preColor]) => {\n    getCharts(preSeries, preColor);\n  },\n);\nvar myChart;\nconst getCharts = (seriesData, color) => {\n  if (myChart != null && myChart != \"\" && myChart != undefined) {\n    myChart.dispose();\n  }\n  var chartDom = document.getElementById(\"conversion\");\n  myChart = echarts.init(chartDom);\n  var option;\n  option = {\n    // 颜色\n    color: color,\n    // 标签\n    legend: {\n      itemHeight: 15, //改变圆圈大小\n      top: \"center\",\n      right: \"right\",\n      //文字显示的颜色和字体大小\n      textStyle: {\n        color: \"black\",\n        fontSize: 12,\n      },\n    },\n    // 图形整体宽高\n    grid: {\n      left: \"10%\",\n      right: \"15%\",\n      top: \"18%\",\n    },\n    // 提示\n    tooltip: {\n      //十字线\n      axisPointer: {\n        type: \"cross\",\n      },\n      padding: 10,\n      borderColor: \"rgb(233, 234, 235)\",\n      //设置tooltip的显示内容\n      formatter: function (obj) {\n        var value = obj.value;\n        var str = `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3);\">\n          <span>${value[2]}</span>\n          </div>`;\n        return str;\n      },\n    },\n    // x轴\n    xAxis: {\n      type: \"value\",\n      name: \"销售收入/元\",\n      nameGap: 16,\n      splitLine: {\n        show: false,\n      },\n    },\n    // y轴\n    yAxis: {\n      type: \"value\",\n      name: \"销售毛利/元\",\n      nameLocation: \"end\",\n      nameGap: 20,\n      splitLine: {\n        show: false,\n      },\n    },\n    // 展示数据\n    series: seriesData,\n  };\n  option && myChart.setOption(option);\n};\nonMounted(() => {\n  getCharts(props.seriesData, props.color);\n});\n</script>\n<style scoped>\n#conversion {\n  max-width: 90%;\n  height: 680px;\n  top: -50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}