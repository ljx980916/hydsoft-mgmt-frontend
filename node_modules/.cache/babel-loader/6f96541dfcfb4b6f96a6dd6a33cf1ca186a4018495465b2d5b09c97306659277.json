{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2aae475f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"conversion\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;gEAEIA,oBAA2B;EAAtBC,EAAE,EAAC;AAAY;oBAApBC,UAA2B;;uBAD7BC,oBAEM","names":["_createElementVNode","id","_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/lijiaxin/Documents/workspace/hydsoft-mgmt-frontend/src/components/scatterPlot.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"conversion\"></div>\n  </div>\n</template>\n<script setup>\nimport { onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nconst props = defineProps({\n  seriesData: Array,\n  color: Array,\n});\nwatch(\n  () => [props.seriesData, props.color],\n  ([preSeries, preColor]) => {\n    getCharts(preSeries, preColor);\n  },\n);\nvar myChart;\nconst getCharts = (seriesData, color) => {\n  if (myChart != null && myChart != \"\" && myChart != undefined) {\n    myChart.dispose();\n  }\n  var chartDom = document.getElementById(\"conversion\");\n  myChart = echarts.init(chartDom);\n  var option;\n  option = {\n    // 颜色\n    color: color,\n    // 标签\n    legend: {\n      itemHeight: 15, //改变圆圈大小\n      top: \"center\",\n      right: \"right\",\n      //文字显示的颜色和字体大小\n      textStyle: {\n        color: \"black\",\n        fontSize: 12,\n      },\n    },\n    // 图形整体宽高\n    grid: {\n      left: \"10%\",\n      right: \"15%\",\n      top: \"18%\",\n    },\n    // 提示\n    tooltip: {\n      //十字线\n      axisPointer: {\n        type: \"cross\",\n      },\n      padding: 10,\n      borderColor: \"rgb(233, 234, 235)\",\n      //设置tooltip的显示内容\n      formatter: function (obj) {\n        var value = obj.value;\n        var str = `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3);\">\n          <span>${value[2]}</span>\n          </div>`;\n        return str;\n      },\n    },\n    // x轴\n    xAxis: {\n      type: \"value\",\n      name: \"销售收入/元\",\n      nameGap: 16,\n      splitLine: {\n        show: false,\n      },\n    },\n    // y轴\n    yAxis: {\n      type: \"value\",\n      name: \"销售毛利/元\",\n      nameLocation: \"end\",\n      nameGap: 20,\n      splitLine: {\n        show: false,\n      },\n    },\n    // 展示数据\n    series: seriesData,\n  };\n  option && myChart.setOption(option);\n};\nonMounted(() => {\n  getCharts(props.seriesData, props.color);\n});\n</script>\n<style scoped>\n#conversion {\n  max-width: 90%;\n  height: 680px;\n  top: -50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}