{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\nimport { gl } from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglComputeModel from './ReglComputeModel';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * regl renderer\n */\nexport var WebGLEngine = /*#__PURE__*/function () {\n  function WebGLEngine() {\n    var _this = this;\n    _classCallCheck(this, WebGLEngine);\n    this.supportWebGPU = false;\n    this.useWGSL = false;\n    this.$canvas = void 0;\n    this.gl = void 0;\n    this.inited = void 0;\n    this.createModel = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!options.uniforms) {\n                  _context2.next = 3;\n                  break;\n                }\n                _context2.next = 3;\n                return Promise.all(Object.keys(options.uniforms).map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n                    var texture;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(options.uniforms[name] &&\n                            // @ts-ignore\n                            options.uniforms[name].load !== undefined)) {\n                              _context.next = 5;\n                              break;\n                            }\n                            _context.next = 3;\n                            return options.uniforms[name].load();\n                          case 3:\n                            texture = _context.sent;\n                            // @ts-ignore\n                            options.uniforms[name] = texture;\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n              case 3:\n                return _context2.abrupt(\"return\", new ReglModel(_this.gl, options));\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.createAttribute = function (options) {\n      return new ReglAttribute(_this.gl, options);\n    };\n    this.createBuffer = function (options) {\n      return new ReglBuffer(_this.gl, options);\n    };\n    this.createElements = function (options) {\n      return new ReglElements(_this.gl, options);\n    };\n    this.createTexture2D = function (options) {\n      return new ReglTexture2D(_this.gl, options);\n    };\n    this.createFramebuffer = function (options) {\n      return new ReglFramebuffer(_this.gl, options);\n    };\n    this.useFramebuffer = function (framebuffer, drawCommands) {\n      _this.gl({\n        framebuffer: framebuffer ? framebuffer.get() : null\n      })(drawCommands);\n    };\n    this.createComputeModel = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new ReglComputeModel(_this.gl, context));\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    this.clear = function (options) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n      var color = options.color,\n        depth = options.depth,\n        stencil = options.stencil,\n        _options$framebuffer = options.framebuffer,\n        framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      var reglClearOptions = {\n        color: color,\n        depth: depth,\n        stencil: stencil\n      };\n      reglClearOptions.framebuffer = framebuffer === null ? framebuffer : framebuffer.get();\n      _this.gl.clear(reglClearOptions);\n    };\n    this.setScissor = function (scissor) {\n      if (_this.gl && _this.gl._gl) {\n        // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/scissor\n        if (scissor.enable && scissor.box) {\n          // console.log(scissor.box);\n          _this.gl._gl.enable(gl.SCISSOR_TEST);\n          _this.gl._gl.scissor(scissor.box.x, scissor.box.y, scissor.box.width, scissor.box.height);\n        } else {\n          _this.gl._gl.disable(gl.SCISSOR_TEST);\n        }\n        _this.gl._refresh();\n      }\n    };\n    this.viewport = function (_ref4) {\n      var x = _ref4.x,\n        y = _ref4.y,\n        width = _ref4.width,\n        height = _ref4.height;\n      if (_this.gl && _this.gl._gl) {\n        // use WebGL context directly\n        // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n        _this.gl._gl.viewport(x, y, width, height);\n        _this.gl._refresh();\n      }\n    };\n    this.readPixels = function (options) {\n      var framebuffer = options.framebuffer,\n        x = options.x,\n        y = options.y,\n        width = options.width,\n        height = options.height;\n      var readPixelsOptions = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n      if (framebuffer) {\n        readPixelsOptions.framebuffer = framebuffer.get();\n      }\n      return _this.gl.read(readPixelsOptions);\n    };\n    this.getCanvas = function () {\n      return _this.$canvas;\n    };\n    this.getGLContext = function () {\n      return _this.gl._gl;\n    };\n    this.destroy = function () {\n      if (_this.gl) {\n        // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n        _this.gl.destroy();\n        _this.inited = false;\n      }\n    };\n  }\n  _createClass(WebGLEngine, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cfg) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.inited) {\n                  _context4.next = 2;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 2:\n                this.$canvas = cfg.canvas;\n                // tslint:disable-next-line:typedef\n                _context4.next = 5;\n                return new Promise(function (resolve, reject) {\n                  regl({\n                    canvas: cfg.canvas,\n                    attributes: {\n                      alpha: true,\n                      // use TAA instead of MSAA\n                      // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n                      antialias: cfg.antialias,\n                      premultipliedAlpha: true\n                      // preserveDrawingBuffer: false,\n                    },\n\n                    pixelRatio: 1,\n                    // TODO: use extensions\n                    extensions: ['OES_element_index_uint', 'OES_texture_float', 'OES_standard_derivatives',\n                    // wireframe\n                    'angle_instanced_arrays' // VSM shadow map\n                    ],\n\n                    optionalExtensions: ['EXT_texture_filter_anisotropic', 'EXT_blend_minmax', 'WEBGL_depth_texture'],\n                    profile: true,\n                    onDone: function onDone(err, r) {\n                      if (err || !r) {\n                        reject(err);\n                      }\n                      // @ts-ignore\n                      resolve(r);\n                    }\n                  });\n                });\n              case 5:\n                this.gl = _context4.sent;\n                this.inited = true;\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function init(_x4) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"isFloatSupported\",\n    value: function isFloatSupported() {\n      // @see https://github.com/antvis/GWebGPUEngine/issues/26\n      // @ts-ignore\n      return this.gl.limits.readFloat;\n    }\n  }, {\n    key: \"beginFrame\",\n    value: function beginFrame() {\n      //\n    }\n  }, {\n    key: \"endFrame\",\n    value: function endFrame() {\n      //\n    }\n  }]);\n  return WebGLEngine;\n}();","map":{"version":3,"mappings":"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","names":["gl","regl","ReglAttribute","ReglBuffer","ReglComputeModel","ReglElements","ReglFramebuffer","ReglModel","ReglTexture2D","WebGLEngine","_classCallCheck","supportWebGPU","useWGSL","$canvas","inited","createModel","options","uniforms","_context2","Promise","all","Object","keys","map","name","load","undefined","_context","texture","_this","createAttribute","createBuffer","createElements","createTexture2D","createFramebuffer","useFramebuffer","framebuffer","drawCommands","get","createComputeModel","context","clear","color","depth","stencil","_options$framebuffer","reglClearOptions","setScissor","scissor","_gl","enable","box","SCISSOR_TEST","x","y","width","height","disable","_refresh","viewport","readPixels","readPixelsOptions","read","getCanvas","getGLContext","destroy","_createClass","key","value","cfg","_context4","canvas","resolve","reject","attributes","alpha","antialias","premultipliedAlpha","pixelRatio","extensions","optionalExtensions","profile","onDone","err","r","limits","readFloat"],"sources":["../../src/webgl/index.ts"],"sourcesContent":["/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\nimport {\n  gl,\n  GLSLContext,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n  IBufferInitializationOptions,\n  IClearOptions,\n  IComputeModel,\n  IElements,\n  IElementsInitializationOptions,\n  IFramebuffer,\n  IFramebufferInitializationOptions,\n  IModel,\n  IModelInitializationOptions,\n  IReadPixelsOptions,\n  IRendererConfig,\n  IRendererService,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglComputeModel from './ReglComputeModel';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * regl renderer\n */\nexport class WebGLEngine implements IRendererService {\n  public supportWebGPU = false;\n  public useWGSL = false;\n  private $canvas: HTMLCanvasElement;\n  private gl: regl.Regl;\n  private inited: boolean;\n\n  public async init(cfg: IRendererConfig): Promise<void> {\n    if (this.inited) {\n      return;\n    }\n    this.$canvas = cfg.canvas;\n    // tslint:disable-next-line:typedef\n    this.gl = await new Promise((resolve, reject) => {\n      regl({\n        canvas: cfg.canvas,\n        attributes: {\n          alpha: true,\n          // use TAA instead of MSAA\n          // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n          antialias: cfg.antialias,\n          premultipliedAlpha: true,\n          // preserveDrawingBuffer: false,\n        },\n        pixelRatio: 1,\n        // TODO: use extensions\n        extensions: [\n          'OES_element_index_uint',\n          'OES_texture_float',\n          'OES_standard_derivatives', // wireframe\n          'angle_instanced_arrays', // VSM shadow map\n        ],\n        optionalExtensions: [\n          'EXT_texture_filter_anisotropic',\n          'EXT_blend_minmax',\n          'WEBGL_depth_texture',\n        ],\n        profile: true,\n        onDone: (err: Error | null, r?: regl.Regl | undefined): void => {\n          if (err || !r) {\n            reject(err);\n          }\n          // @ts-ignore\n          resolve(r);\n        },\n      });\n    });\n    this.inited = true;\n  }\n\n  public isFloatSupported() {\n    // @see https://github.com/antvis/GWebGPUEngine/issues/26\n    // @ts-ignore\n    return this.gl.limits.readFloat;\n  }\n\n  public createModel = async (\n    options: IModelInitializationOptions,\n  ): Promise<IModel> => {\n    if (options.uniforms) {\n      await Promise.all(\n        Object.keys(options.uniforms).map(async (name) => {\n          if (\n            options.uniforms![name] &&\n            // @ts-ignore\n            options.uniforms![name].load !== undefined\n          ) {\n            // @ts-ignore\n            const texture = await options.uniforms![name].load();\n            // @ts-ignore\n            options.uniforms[name] = texture;\n          }\n        }),\n      );\n    }\n    return new ReglModel(this.gl, options);\n  };\n\n  public createAttribute = (\n    options: IAttributeInitializationOptions,\n  ): IAttribute => new ReglAttribute(this.gl, options);\n\n  public createBuffer = (options: IBufferInitializationOptions): IBuffer =>\n    new ReglBuffer(this.gl, options);\n\n  public createElements = (\n    options: IElementsInitializationOptions,\n  ): IElements => new ReglElements(this.gl, options);\n\n  public createTexture2D = (\n    options: ITexture2DInitializationOptions,\n  ): ITexture2D => new ReglTexture2D(this.gl, options);\n\n  public createFramebuffer = (options: IFramebufferInitializationOptions) =>\n    new ReglFramebuffer(this.gl, options);\n\n  public useFramebuffer = (\n    framebuffer: IFramebuffer | null,\n    drawCommands: () => void,\n  ) => {\n    this.gl({\n      framebuffer: framebuffer ? (framebuffer as ReglFramebuffer).get() : null,\n    })(drawCommands);\n  };\n\n  public createComputeModel = async (\n    context: GLSLContext,\n  ): Promise<IComputeModel> => {\n    return new ReglComputeModel(this.gl, context);\n  };\n\n  public clear = (options: IClearOptions) => {\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n    const { color, depth, stencil, framebuffer = null } = options;\n    const reglClearOptions: regl.ClearOptions = {\n      color,\n      depth,\n      stencil,\n    };\n\n    reglClearOptions.framebuffer =\n      framebuffer === null\n        ? framebuffer\n        : (framebuffer as ReglFramebuffer).get();\n\n    this.gl.clear(reglClearOptions);\n  };\n\n  public setScissor = (\n    scissor: Partial<{\n      enable: boolean;\n      box: { x: number; y: number; width: number; height: number };\n    }>,\n  ) => {\n    if (this.gl && this.gl._gl) {\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/scissor\n      if (scissor.enable && scissor.box) {\n        // console.log(scissor.box);\n        this.gl._gl.enable(gl.SCISSOR_TEST);\n        this.gl._gl.scissor(\n          scissor.box.x,\n          scissor.box.y,\n          scissor.box.width,\n          scissor.box.height,\n        );\n      } else {\n        this.gl._gl.disable(gl.SCISSOR_TEST);\n      }\n      this.gl._refresh();\n    }\n  };\n\n  public viewport = ({\n    x,\n    y,\n    width,\n    height,\n  }: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }) => {\n    if (this.gl && this.gl._gl) {\n      // use WebGL context directly\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n      this.gl._gl.viewport(x, y, width, height);\n      this.gl._refresh();\n    }\n  };\n\n  public readPixels = (options: IReadPixelsOptions) => {\n    const { framebuffer, x, y, width, height } = options;\n    const readPixelsOptions: regl.ReadOptions = {\n      x,\n      y,\n      width,\n      height,\n    };\n    if (framebuffer) {\n      readPixelsOptions.framebuffer = (framebuffer as ReglFramebuffer).get();\n    }\n    return this.gl.read(readPixelsOptions);\n  };\n\n  public getCanvas = () => {\n    return this.$canvas;\n  };\n\n  public getGLContext = () => {\n    return this.gl._gl;\n  };\n\n  public destroy = () => {\n    if (this.gl) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n      this.gl.destroy();\n      this.inited = false;\n    }\n  };\n\n  public beginFrame() {\n    //\n  }\n\n  public endFrame() {\n    //\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}