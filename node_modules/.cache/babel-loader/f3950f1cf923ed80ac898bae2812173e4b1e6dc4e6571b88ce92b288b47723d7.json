{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { distanceSquareRoot } from './distance-square-root';\n/**\n * Returns the {x,y} coordinates of a point at a\n * given length of a quadratic-bezier segment.\n *\n * @see https://github.com/substack/point-at-length\n */\nfunction getPointAtQuadSegmentLength(x1, y1, cx, cy, x2, y2, t) {\n  var t1 = 1 - t;\n  return {\n    x: Math.pow(t1, 2) * x1 + 2 * t1 * t * cx + Math.pow(t, 2) * x2,\n    y: Math.pow(t1, 2) * y1 + 2 * t1 * t * cy + Math.pow(t, 2) * y2\n  };\n}\n/**\n * Returns a {x,y} point at a given length, the total length and\n * the minimum and maximum {x,y} coordinates of a Q (quadratic-bezier) segment.\n */\nexport function segmentQuadFactory(x1, y1, qx, qy, x2, y2, distance, options) {\n  var _a;\n  var _b = options.bbox,\n    bbox = _b === void 0 ? true : _b,\n    _c = options.length,\n    length = _c === void 0 ? true : _c,\n    _d = options.sampleSize,\n    sampleSize = _d === void 0 ? 10 : _d;\n  var distanceIsNumber = typeof distance === 'number';\n  var x = x1;\n  var y = y1;\n  var LENGTH = 0;\n  var prev = [x, y, LENGTH];\n  var cur = [x, y];\n  var t = 0;\n  var POINT = {\n    x: 0,\n    y: 0\n  };\n  var POINTS = [{\n    x: x,\n    y: y\n  }];\n  if (distanceIsNumber && distance <= 0) {\n    POINT = {\n      x: x,\n      y: y\n    };\n  }\n  for (var j = 0; j <= sampleSize; j += 1) {\n    t = j / sampleSize;\n    _a = getPointAtQuadSegmentLength(x1, y1, qx, qy, x2, y2, t), x = _a.x, y = _a.y;\n    if (bbox) {\n      POINTS.push({\n        x: x,\n        y: y\n      });\n    }\n    if (length) {\n      LENGTH += distanceSquareRoot(cur, [x, y]);\n    }\n    cur = [x, y];\n    if (distanceIsNumber && LENGTH >= distance && distance > prev[2]) {\n      var dv = (LENGTH - distance) / (LENGTH - prev[2]);\n      POINT = {\n        x: cur[0] * (1 - dv) + prev[0] * dv,\n        y: cur[1] * (1 - dv) + prev[1] * dv\n      };\n    }\n    prev = [x, y, LENGTH];\n  }\n  /* istanbul ignore else */\n  if (distanceIsNumber && distance >= LENGTH) {\n    POINT = {\n      x: x2,\n      y: y2\n    };\n  }\n  return {\n    length: LENGTH,\n    point: POINT,\n    min: {\n      x: Math.min.apply(null, POINTS.map(function (n) {\n        return n.x;\n      })),\n      y: Math.min.apply(null, POINTS.map(function (n) {\n        return n.y;\n      }))\n    },\n    max: {\n      x: Math.max.apply(null, POINTS.map(function (n) {\n        return n.x;\n      })),\n      y: Math.max.apply(null, POINTS.map(function (n) {\n        return n.y;\n      }))\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["distanceSquareRoot","getPointAtQuadSegmentLength","x1","y1","cx","cy","x2","y2","t","t1","x","Math","y","segmentQuadFactory","qx","qy","distance","options","bbox","_c","length","_d","sampleSize","distanceIsNumber","LENGTH","prev","cur","POINT","POINTS","j","_a","push","dv","point","min","apply","map","n","max"],"sourceRoot":"src/","sources":["path/util/segment-quad-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}