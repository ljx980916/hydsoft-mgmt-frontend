{"ast":null,"code":"import { isSpace } from './is-space';\n/**\n * Points the parser to the next character in the\n * path string every time it encounters any kind of\n * space character.\n */\nexport function skipSpaces(path) {\n  var pathValue = path.pathValue,\n    max = path.max;\n  while (path.index < max && isSpace(pathValue.charCodeAt(path.index))) {\n    path.index += 1;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAGpC;;;;;AAKA,OAAM,SAAUC,UAAU,CAACC,IAAgB;EACjC,aAAS,GAAUA,IAAI,UAAd;IAAEC,GAAG,GAAKD,IAAI,IAAT;EACtB,OAAOA,IAAI,CAACE,KAAK,GAAGD,GAAG,IAAIH,OAAO,CAACK,SAAS,CAACC,UAAU,CAACJ,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE;IACpEF,IAAI,CAACE,KAAK,IAAI,CAAC;;AAEnB","names":["isSpace","skipSpaces","path","max","index","pathValue","charCodeAt"],"sourceRoot":"src/","sources":["path/parser/skip-spaces.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}