{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * 计算几分位 https://github.com/simple-statistics/simple-statistics/blob/master/src/quantile_sorted.js\n * @param x  数组\n * @param p  百分比\n */\nfunction quantileSorted(x, p) {\n  var idx = x.length * p;\n  /*if (x.length === 0) { // 当前场景这些条件不可能命中\n    throw new Error('quantile requires at least one value.');\n  } else if (p < 0 || p > 1) {\n    throw new Error('quantiles must be between 0 and 1');\n  } else */\n  if (p === 1) {\n    // If p is 1, directly return the last element\n    return x[x.length - 1];\n  } else if (p === 0) {\n    // If p is 0, directly return the first element\n    return x[0];\n  } else if (idx % 1 !== 0) {\n    // If p is not integer, return the next element in array\n    return x[Math.ceil(idx) - 1];\n  } else if (x.length % 2 === 0) {\n    // If the list has even-length, we'll take the average of this number\n    // and the next value, if there is one\n    return (x[idx - 1] + x[idx]) / 2;\n  } else {\n    // Finally, in the simple case of an integer value\n    // with an odd-length list, return the x value at the index.\n    return x[idx];\n  }\n}\nexport default function calculateTicks(cfg) {\n  var tickCount = cfg.tickCount,\n    values = cfg.values;\n  if (!values || !values.length) {\n    return [];\n  }\n  var sorted = values.slice().sort(function (a, b) {\n    return a - b;\n  });\n  var ticks = [];\n  for (var i = 0; i < tickCount; i++) {\n    var p = i / (tickCount - 1);\n    ticks.push(quantileSorted(sorted, p));\n  }\n  return ticks;\n}","map":{"version":3,"mappings":";AACA;;;;;AAKA,SAASA,cAAc,CAACC,CAAC,EAAEC,CAAC;EAC1B,IAAMC,GAAG,GAAGF,CAAC,CAACG,MAAM,GAAGF,CAAC;EACxB;;;;;EAMA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX;IACA,OAAOD,CAAC,CAACA,CAAC,CAACG,MAAM,GAAG,CAAC,CAAC;GACvB,MAAM,IAAIF,CAAC,KAAK,CAAC,EAAE;IAClB;IACA,OAAOD,CAAC,CAAC,CAAC,CAAC;GACZ,MAAM,IAAIE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;IACxB;IACA,OAAOF,CAAC,CAACI,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC,GAAG,CAAC,CAAC;GAC7B,MAAM,IAAIF,CAAC,CAACG,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC7B;IACA;IACA,OAAO,CAACH,CAAC,CAACE,GAAG,GAAG,CAAC,CAAC,GAAGF,CAAC,CAACE,GAAG,CAAC,IAAI,CAAC;GACjC,MAAM;IACL;IACA;IACA,OAAOF,CAAC,CAACE,GAAG,CAAC;;AAEjB;AAEA,eAAc,SAAUI,cAAc,CAACC,GAAgB;EAC7C,aAAS,GAAaA,GAAG,UAAhB;IAAEC,MAAM,GAAKD,GAAG,OAAR;EACzB,IAAI,CAACC,MAAM,IAAI,CAACA,MAAM,CAACL,MAAM,EAAE;IAC7B,OAAO,EAAE;;EAEX,IAAMM,MAAM,GAAGD,MAAM,CAACE,KAAK,EAAE,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IACtC,OAAOD,CAAC,GAAGC,CAAC;EACd,CAAC,CAAC;EACF,IAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,EAAED,CAAC,EAAE,EAAE;IAClC,IAAMd,CAAC,GAAGc,CAAC,IAAIC,SAAS,GAAG,CAAC,CAAC;IAC7BF,KAAK,CAACG,IAAI,CAAClB,cAAc,CAACU,MAAM,EAAER,CAAC,CAAC,CAAC;;EAEvC,OAAOa,KAAK;AACd","names":["quantileSorted","x","p","idx","length","Math","ceil","calculateTicks","cfg","values","sorted","slice","sort","a","b","ticks","i","tickCount","push"],"sourceRoot":"","sources":["../../src/tick-method/quantile.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}