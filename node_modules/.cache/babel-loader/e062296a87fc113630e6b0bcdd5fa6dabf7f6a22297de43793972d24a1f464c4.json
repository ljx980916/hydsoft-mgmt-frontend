{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _util = require(\"@antv/util\");\n\n/**\n * 向量运算\n */\nvar Vector = /** @class */\nfunction () {\n  function Vector(arr) {\n    this.arr = arr;\n  }\n  Vector.prototype.getArr = function () {\n    return this.arr || [];\n  };\n  Vector.prototype.add = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] + otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.subtract = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] - otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.avg = function (length) {\n    var res = [];\n    if (length !== 0) {\n      for (var index in this.arr) {\n        res[index] = this.arr[index] / length;\n      }\n    }\n    return new Vector(res);\n  };\n  Vector.prototype.negate = function () {\n    var res = [];\n    for (var index in this.arr) {\n      res[index] = -this.arr[index];\n    }\n    return new Vector(res);\n  }; // 平方欧式距离\n\n  Vector.prototype.squareEuclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return res;\n    }\n  }; // 欧式距离\n\n  Vector.prototype.euclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return Math.sqrt(res);\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  }; // 归一化处理\n\n  Vector.prototype.normalize = function () {\n    var res = [];\n    var cloneArr = (0, _util.clone)(this.arr);\n    cloneArr.sort(function (a, b) {\n      return a - b;\n    });\n    var max = cloneArr[cloneArr.length - 1];\n    var min = cloneArr[0];\n    for (var index in this.arr) {\n      res[index] = (this.arr[index] - min) / (max - min);\n    }\n    return new Vector(res);\n  }; // 2范数 or 模长\n\n  Vector.prototype.norm2 = function () {\n    var _a;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return 0;\n    }\n    var res = 0;\n    for (var index in this.arr) {\n      res += Math.pow(this.arr[index], 2);\n    }\n    return Math.sqrt(res);\n  }; // 两个向量的点积\n\n  Vector.prototype.dot = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += this.arr[index] * otherVector.arr[index];\n      }\n      return res;\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  }; // 两个向量比较\n\n  Vector.prototype.equal = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) !== (otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return false;\n    }\n    for (var index in this.arr) {\n      if (this.arr[index] !== otherArr[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return Vector;\n}();\nvar _default = Vector;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_util","require","Vector","arr","prototype","getArr","add","otherVector","_a","otherArr","length","res","index","subtract","avg","negate","squareEuclideanDistance","Math","pow","euclideanDistance","sqrt","console","error","normalize","cloneArr","clone","sort","a","b","max","min","norm2","dot","equal","_default"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/node_modules/@antv/algorithm/lib/utils/vector.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@antv/util\");\n\n/**\n * 向量运算\n */\nvar Vector =\n/** @class */\nfunction () {\n  function Vector(arr) {\n    this.arr = arr;\n  }\n\n  Vector.prototype.getArr = function () {\n    return this.arr || [];\n  };\n\n  Vector.prototype.add = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n\n      for (var index in this.arr) {\n        res[index] = this.arr[index] + otherArr[index];\n      }\n\n      return new Vector(res);\n    }\n  };\n\n  Vector.prototype.subtract = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n\n      for (var index in this.arr) {\n        res[index] = this.arr[index] - otherArr[index];\n      }\n\n      return new Vector(res);\n    }\n  };\n\n  Vector.prototype.avg = function (length) {\n    var res = [];\n\n    if (length !== 0) {\n      for (var index in this.arr) {\n        res[index] = this.arr[index] / length;\n      }\n    }\n\n    return new Vector(res);\n  };\n\n  Vector.prototype.negate = function () {\n    var res = [];\n\n    for (var index in this.arr) {\n      res[index] = -this.arr[index];\n    }\n\n    return new Vector(res);\n  }; // 平方欧式距离\n\n\n  Vector.prototype.squareEuclideanDistance = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n\n      return res;\n    }\n  }; // 欧式距离\n\n\n  Vector.prototype.euclideanDistance = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n\n      return Math.sqrt(res);\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  }; // 归一化处理\n\n\n  Vector.prototype.normalize = function () {\n    var res = [];\n    var cloneArr = (0, _util.clone)(this.arr);\n    cloneArr.sort(function (a, b) {\n      return a - b;\n    });\n    var max = cloneArr[cloneArr.length - 1];\n    var min = cloneArr[0];\n\n    for (var index in this.arr) {\n      res[index] = (this.arr[index] - min) / (max - min);\n    }\n\n    return new Vector(res);\n  }; // 2范数 or 模长\n\n\n  Vector.prototype.norm2 = function () {\n    var _a;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return 0;\n    }\n\n    var res = 0;\n\n    for (var index in this.arr) {\n      res += Math.pow(this.arr[index], 2);\n    }\n\n    return Math.sqrt(res);\n  }; // 两个向量的点积\n\n\n  Vector.prototype.dot = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n\n      for (var index in this.arr) {\n        res += this.arr[index] * otherVector.arr[index];\n      }\n\n      return res;\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  }; // 两个向量比较\n\n\n  Vector.prototype.equal = function (otherVector) {\n    var _a;\n\n    var otherArr = otherVector.arr;\n\n    if (((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) !== (otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return false;\n    }\n\n    for (var index in this.arr) {\n      if (this.arr[index] !== otherArr[index]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return Vector;\n}();\n\nvar _default = Vector;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}