{"ast":null,"code":"/**\n * @fileoverview 图片\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isString, isNil } from '../util/util';\nfunction isCanvas(dom) {\n  return dom instanceof HTMLElement && isString(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';\n}\nvar ImageShape = /** @class */function (_super) {\n  __extends(ImageShape, _super);\n  function ImageShape() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ImageShape.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n  };\n  ImageShape.prototype.initAttrs = function (attrs) {\n    this._setImage(attrs.img);\n  };\n  // image 不计算 stroke\n  ImageShape.prototype.isStroke = function () {\n    return false;\n  };\n  // 仅仅使用包围盒检测来进行拾取\n  // 所以不需要复写 isInStrokeOrPath 的方法\n  ImageShape.prototype.isOnlyHitBox = function () {\n    return true;\n  };\n  ImageShape.prototype._afterLoading = function () {\n    if (this.get('toDraw') === true) {\n      var canvas = this.get('canvas');\n      if (canvas) {\n        // 这段应该改成局部渲染\n        canvas.draw();\n      } else {\n        // 这种方式如果发生遮挡会出现问题\n        this.createPath(this.get('context'));\n      }\n    }\n  };\n  ImageShape.prototype._setImage = function (img) {\n    var _this = this;\n    var attrs = this.attrs;\n    if (isString(img)) {\n      var image_1 = new Image();\n      image_1.onload = function () {\n        // 图片未加载完，则已经被销毁\n        if (_this.destroyed) {\n          return false;\n        }\n        // 缓存原始地址，可以做对比，防止重复加载图片\n        // 如果考虑到在加载过程中可能替换 img 属性，则情况更加复杂\n        // this.set('imgSrc', img);\n        // 这里会循环调用 _setImage 方法，但不会再走这个分支\n        _this.attr('img', image_1);\n        _this.set('loading', false);\n        _this._afterLoading();\n        var callback = _this.get('callback');\n        if (callback) {\n          callback.call(_this);\n        }\n      };\n      // 设置跨域\n      image_1.crossOrigin = 'Anonymous';\n      image_1.src = img;\n      // loading 过程中不绘制\n      this.set('loading', true);\n    } else if (img instanceof Image) {\n      // 如果是一个 image 对象，则设置宽高\n      if (!attrs.width) {\n        attrs.width = img.width;\n      }\n      if (!attrs.height) {\n        attrs.height = img.height;\n      }\n    } else if (isCanvas(img)) {\n      // 如果设置了 canvas 对象\n      if (!attrs.width) {\n        attrs.width = Number(img.getAttribute('width'));\n      }\n      if (!attrs.height) {\n        attrs.height, Number(img.getAttribute('height'));\n      }\n    }\n  };\n  ImageShape.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    // 如果加载的已经是当前图片，则不再处理\n    if (name === 'img') {\n      // 可以加缓冲，&& this.get('imgSrc') !== value\n      this._setImage(value);\n    }\n  };\n  ImageShape.prototype.createPath = function (context) {\n    // 正在加载则不绘制\n    if (this.get('loading')) {\n      this.set('toDraw', true); // 加载完成后绘制\n      this.set('context', context);\n      return;\n    }\n    var attrs = this.attr();\n    var x = attrs.x,\n      y = attrs.y,\n      width = attrs.width,\n      height = attrs.height,\n      sx = attrs.sx,\n      sy = attrs.sy,\n      swidth = attrs.swidth,\n      sheight = attrs.sheight;\n    var img = attrs.img;\n    if (img instanceof Image || isCanvas(img)) {\n      if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {\n        context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\n      } else {\n        context.drawImage(img, x, y, width, height);\n      }\n    }\n  };\n  return ImageShape;\n}(ShapeBase);\nexport default ImageShape;","map":{"version":3,"mappings":"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","names":["ShapeBase","isString","isNil","isCanvas","dom","HTMLElement","nodeName","toUpperCase","__extends","ImageShape","attrs","_super","getDefaultAttrs","x","y","width","height","_setImage","img","get","canvas","draw","createPath","image_1","Image","onload","_this","destroyed","attr","set","_afterLoading","callback","call","crossOrigin","src","Number","getAttribute","name","value","originValue","onAttrChange","context","sx","sy","swidth","sheight","drawImage"],"sourceRoot":"","sources":["../../src/shape/image.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}