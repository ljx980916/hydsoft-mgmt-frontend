{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, watch, onBeforeMount } from 'vue';\nimport { differentColumns } from '@/views/demo/constColumns.js';\nimport Icon from '@/components/icon.vue';\nimport { countWorkdaysByMonth } from \"@/api/drillAnalyze.js\";\nexport default {\n  __name: 'different',\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    columns: {\n      type: Array,\n      default: () => []\n    },\n    modalVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"handleClose\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    let {\n      year\n    } = getCurrentDate();\n    const dataContent = reactive({\n      columns: JSON.parse(JSON.stringify(differentColumns)),\n      dataSourse: [],\n      loading: false\n    });\n    const visible = ref(props.modalVisible);\n    const expandedRowKeys = ref([]);\n    const monthBeforeIcon = ref('caret-right');\n    const monthBeforeValue = ref('');\n    const monthAfterIcon = ref('caret-right');\n    const monthAfterValue = ref('');\n    const QBeforeIcon = ref('caret-right');\n    const QBeforeValue = ref('');\n    const QAfterIcon = ref('caret-right');\n    const QAfterValue = ref('');\n    watch(() => props.modalVisible, (newVal, oldVal) => {\n      if (newVal) {\n        visible.value = newVal;\n        dataContent.columns = JSON.parse(JSON.stringify(differentColumns));\n        dataContent.dataSourse = dealDifferentData(props.data).arr;\n        expandedRowKeys.value = dealDifferentData(props.data).keyArr;\n      }\n    });\n    onBeforeMount(() => {\n      List.forEach(item => {\n        let month = 0;\n        if (item.dataIndex.substring(0, 5) == 'month') {\n          item.titleSlotName = item.dataIndex;\n          const params = {\n            month: `${year}-${month}`\n          };\n          countWorkdaysByMonth(params).then(res => {\n            if (res.code === \"200\") {\n              item.days = res.data;\n            }\n          }).catch(() => {\n            Message.error(\"请求失败\");\n          });\n        }\n      });\n    });\n    const expandedChange = rowkeys => {\n      expandedRowKeys.value = rowkeys;\n    };\n    // 环差比数据处理\n    let keyArr = [];\n    const dealDifferentData = arr => {\n      let dataIndex1 = '';\n      let dataIndex2 = '';\n      let dataIndex3 = '';\n      let dataIndex4 = '';\n      dataContent.columns.forEach(ele => {\n        if (ele.titleSlotName == \"monthBefore\") {\n          dataIndex1 = ele.dataIndex;\n        }\n        if (ele.titleSlotName == \"monthAfter\") {\n          dataIndex2 = ele.dataIndex;\n        }\n        if (ele.titleSlotName == \"QBefore\") {\n          dataIndex3 = ele.dataIndex;\n        }\n        if (ele.titleSlotName == \"QAfter\") {\n          dataIndex4 = ele.dataIndex;\n        }\n      });\n      Array.isArray(arr) && arr.forEach((item, index) => {\n        keyArr.push(item.key);\n        if (item[dataIndex2] !== '-' && item[dataIndex1] !== '-' && !item.isRate) {\n          item.monthDifferent = Number(item[dataIndex2] - item[dataIndex1]).toFixed(2);\n          item.MonthonMonth = Number((item[dataIndex2] - item[dataIndex1]) / item[dataIndex1]).toFixed(2);\n        } else {\n          item.monthDifferent = '-';\n          item.MonthonMonth = '-';\n        }\n        // 季度数据\n        item.Q1 = Number(item.month1 + item.month2 + item.month3).toFixed(2);\n        item.Q2 = Number(item.month4 + item.month5 + item.month6).toFixed(2);\n        item.Q3 = Number(item.month7 + item.month8 + item.month9).toFixed(2);\n        item.Q4 = Number(item.month10 + item.month11 + item.month12).toFixed(2);\n        if (isNaN(item.Q1)) {\n          item.Q1 = '-';\n        }\n        if (isNaN(item.Q2)) {\n          item.Q2 = '-';\n        }\n        if (isNaN(item.Q3)) {\n          item.Q3 = '-';\n        }\n        if (isNaN(item.Q4)) {\n          item.Q4 = '-';\n        }\n        if (item[dataIndex4] !== '-' && item[dataIndex3] !== '-' && !item.isRate) {\n          item.QDifferent = Number(item[dataIndex4] - item[dataIndex3]).toFixed(2);\n          item.QonQ = Number((item[dataIndex4] - item[dataIndex3]) / item[dataIndex3]).toFixed(2);\n        } else {\n          item.QDifferent = '-';\n          item.QonQ = '-';\n        }\n        if (item.children && item.children.length) {\n          dealDifferentData(item.children);\n        }\n      });\n      return {\n        arr,\n        keyArr\n      };\n    };\n    // 时间选择器开关\n    const changeVisible = (e, flag) => {\n      if (flag == 'MB') {\n        if (e) {\n          monthBeforeIcon.value = 'caret-down';\n        } else {\n          monthBeforeIcon.value = 'caret-right';\n        }\n      }\n      if (flag == 'MA') {\n        if (e) {\n          monthAfterIcon.value = 'caret-down';\n        } else {\n          monthAfterIcon.value = 'caret-right';\n        }\n      }\n      if (flag == 'QB') {\n        if (e) {\n          QBeforeIcon.value = 'caret-down';\n        } else {\n          QBeforeIcon.value = 'caret-right';\n        }\n      }\n      if (flag == 'QA') {\n        if (e) {\n          QAfterIcon.value = 'caret-down';\n        } else {\n          QAfterIcon.value = 'caret-right';\n        }\n      }\n    };\n    // 处理月份标题\n    const dealMonthTitle = (e, flag) => {\n      let str = e.substr(e.length - 2);\n      let num = '';\n      if (str.substr(0, 1) == 0) {\n        num = str.substr(1);\n      } else {\n        num = str;\n      }\n      props.columns.forEach(item => {\n        // 确定是month表头\n        if (item.dataIndex.substr(0, 5) == 'month') {\n          // 选择的月份 == 折叠表格的某个表头\n          if (num == item.dataIndex.substr(5)) {\n            // 对应的表头更换\n            dataContent.columns.forEach(ele => {\n              if (flag == 'MB') {\n                if (ele.titleSlotName == 'monthBefore') {\n                  ele.dataIndex = item.dataIndex;\n                  ele.title = num + '月';\n                  ele.days = item.days;\n                }\n                if (ele.dataIndex == 'monthDifferent') {\n                  const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                  parts[1] = num; // 替换'-'后的数字  \n                  ele.title = parts.join('-') + '月'; // 将两部分重新组合为字符串，并用'-'连接\n                }\n              }\n\n              if (flag == 'MA') {\n                if (ele.titleSlotName == 'monthAfter') {\n                  ele.dataIndex = item.dataIndex;\n                  ele.title = num + '月';\n                  ele.days = item.days;\n                }\n                if (ele.dataIndex == 'monthDifferent') {\n                  const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                  parts[0] = num; // 替换'-'前的数字  \n                  ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n                }\n              }\n            });\n          }\n        }\n      });\n\n      dataContent.dataSourse = dealDifferentData(props.data).arr;\n    };\n    // 处理季度标题\n    const dealQTitle = (e, flag) => {\n      let str = e.substr(e.length - 2);\n      let num = '';\n      if (str.substr(0, 1) == 0) {\n        num = str.substr(1);\n      } else {\n        num = str;\n      }\n      const QList = [{\n        label: '1',\n        value: 'Q1'\n      }, {\n        label: '4',\n        value: 'Q2'\n      }, {\n        label: '7',\n        value: 'Q3'\n      }, {\n        label: '10',\n        value: 'Q4'\n      }];\n      // 对应的表头更换\n      dataContent.columns.forEach(ele => {\n        if (flag == 'QB') {\n          if (ele.titleSlotName == 'QBefore') {\n            //num对应的Q\n            ele.title = ele.dataIndex = QList.filter(item => item.label == num)[0].value;\n          }\n          if (ele.dataIndex == 'QDifferent') {\n            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n            parts[1] = QList.filter(item => item.label == num)[0].value; // 替换'-'后的数字\n            ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n          }\n        }\n\n        if (flag == 'QA') {\n          if (ele.titleSlotName == 'QAfter') {\n            ele.title = ele.dataIndex = QList.filter(item => item.label == num)[0].value;\n          }\n          if (ele.dataIndex == 'QDifferent') {\n            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n            parts[0] = QList.filter(item => item.label == num)[0].value; // 替换'-'前的数字  \n            ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n          }\n        }\n      });\n\n      dataContent.dataSourse = dealDifferentData(props.data).arr;\n    };\n    // 更改时间\n    const changeTime = (e, flag) => {\n      if (flag == 'MB') {\n        monthBeforeValue.value = e;\n        dealMonthTitle(e, flag);\n      }\n      if (flag == 'MA') {\n        monthAfterValue.value = e;\n        dealMonthTitle(e, flag);\n      }\n      if (flag == 'QA') {\n        QAfterValue.value = e;\n        dealQTitle(e, flag);\n      }\n      if (flag == 'QB') {\n        QBeforeValue.value = e;\n        dealQTitle(e, flag);\n      }\n    };\n    const handleClose = () => {\n      emit(\"handleClose\", false);\n    };\n    //单行高亮处理\n    const activeRowClass = record => {\n      if (record.raw.isGreenLight) {\n        return 'activeRowGreen';\n      } else if (record.raw.isRate) {\n        return 'activeRowPurple';\n      } else {\n        return '';\n      }\n    };\n    const __returned__ = {\n      get year() {\n        return year;\n      },\n      set year(v) {\n        year = v;\n      },\n      props,\n      dataContent,\n      visible,\n      expandedRowKeys,\n      monthBeforeIcon,\n      monthBeforeValue,\n      monthAfterIcon,\n      monthAfterValue,\n      QBeforeIcon,\n      QBeforeValue,\n      QAfterIcon,\n      QAfterValue,\n      emit,\n      expandedChange,\n      get keyArr() {\n        return keyArr;\n      },\n      set keyArr(v) {\n        keyArr = v;\n      },\n      dealDifferentData,\n      changeVisible,\n      dealMonthTitle,\n      dealQTitle,\n      changeTime,\n      handleClose,\n      activeRowClass,\n      ref,\n      reactive,\n      watch,\n      onBeforeMount,\n      get differentColumns() {\n        return differentColumns;\n      },\n      Icon,\n      get countWorkdaysByMonth() {\n        return countWorkdaysByMonth;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","reactive","watch","onBeforeMount","differentColumns","Icon","countWorkdaysByMonth","year","getCurrentDate","dataContent","columns","JSON","parse","stringify","dataSourse","loading","visible","props","modalVisible","expandedRowKeys","monthBeforeIcon","monthBeforeValue","monthAfterIcon","monthAfterValue","QBeforeIcon","QBeforeValue","QAfterIcon","QAfterValue","newVal","oldVal","value","dealDifferentData","data","arr","keyArr","List","forEach","item","month","dataIndex","substring","titleSlotName","params","then","res","code","days","catch","Message","error","expandedChange","rowkeys","dataIndex1","dataIndex2","dataIndex3","dataIndex4","ele","Array","isArray","index","push","key","isRate","monthDifferent","Number","toFixed","MonthonMonth","Q1","month1","month2","month3","Q2","month4","month5","month6","Q3","month7","month8","month9","Q4","month10","month11","month12","isNaN","QDifferent","QonQ","children","length","changeVisible","e","flag","dealMonthTitle","str","substr","num","title","parts","split","join","dealQTitle","QList","label","filter","changeTime","handleClose","emit","activeRowClass","record","raw","isGreenLight"],"sources":["/Users/lijiaxin/Documents/workspace/hydsoft-oms-frontend/src/components/different.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 环比配置 -->\n    <a-modal  title=\"环比配置\" width=\"auto\" title-align=\"start\" v-model:visible=\"visible\" :footer=\"null\" :body-style=\"{padding:'25px'}\" @close=\"handleClose\">\n        <div>\n            <a-table \n                class=\"arcoTable_columnsWidthAuto\" \n                :columns=\"dataContent.columns ||[]\"  \n                :data=\"(dataContent.dataSourse.length && dataContent.dataSourse) || []\"  \n                :loading=\"dataContent.loading\"\n                :pagination=\"false\" \n                :expanded-keys=\"expandedRowKeys\"\n                @expanded-change=\"expandedChange\"\n                show-empty-tree \n                :row-class=\"activeRowClass\"\n                :bordered=\"{wrapper: true, cell: true}\" \n            >\n                <template  v-for=\"item in dataContent.columns\" :key = \"item.dataIndex\"  #[item.titleSlotName]>\n                    <!-- <p v-if=\"item.days\">{{ item.title }}<span style=\"color:#999;font-size:12px\">({{ item.days }}天)</span></p>\n                    <p v-else>{{ item.title }}</p> -->\n                    <!-- {{ item.days }}\n                    <div v-if=\"item.days\"> -->\n                        <span>{{ item.title }}<span style=\"color:#999;font-size:12px\">({{ item.days }}天)</span></span>\n                        <a-month-picker \n                        v-if=\"item.titleSlotName =='monthBefore'\"\n                        v-model:pickerValue=\"monthBeforeValue\" \n                        @popup-visible-change=\"changeVisible($event,'MB')\"\n                        @change=\"changeTime($event,'MB')\"\n                        size=\"mini\"\n                        position=\"bottom\"\n                        >\n                            <Icon :icon=\"monthBeforeIcon\"></Icon>\n                        </a-month-picker>\n                        <a-month-picker \n                        v-if=\"item.titleSlotName =='monthAfter'\"\n                        v-model:pickerValue=\"monthAfterValue\" \n                        @popup-visible-change=\"changeVisible($event,'MA')\"\n                        @change=\"changeTime($event,'MA')\"\n                        size=\"mini\"\n                        position=\"bottom\"\n                        >\n                            <Icon :icon=\"monthAfterIcon\"></Icon>\n                        </a-month-picker>\n                        <a-quarter-picker \n                        v-if=\"item.titleSlotName =='QBefore'\" \n                        v-model:pickerValue=\"QBeforeValue\" \n                        @popup-visible-change=\"changeVisible($event,'QB')\"\n                        @change=\"changeTime($event,'QB')\"\n                        size=\"mini\"\n                        position=\"bottom\">\n                            <Icon :icon=\"QBeforeIcon\"></Icon>\n                        </a-quarter-picker>\n                        <a-quarter-picker \n                        v-if=\"item.titleSlotName =='QAfter'\" \n                        v-model:pickerValue=\"QAfterValue\" \n                        @popup-visible-change=\"changeVisible($event,'QA')\"\n                        @change=\"changeTime($event,'QA')\"\n                        size=\"mini\"\n                        position=\"bottom\">\n                            <Icon :icon=\"QAfterIcon\"></Icon>\n                        </a-quarter-picker>\n                    <!-- </div> -->\n                </template>\n            </a-table>\n        </div>\n    </a-modal>\n  </div>\n</template>\n\n<script setup>\nimport { ref,reactive,watch,onBeforeMount} from 'vue';\nimport {differentColumns} from '@/views/demo/constColumns.js';\nimport Icon from '@/components/icon.vue';\nimport {countWorkdaysByMonth} from \"@/api/drillAnalyze.js\";\nlet { year} = getCurrentDate();\nconst props = defineProps({\n    data: {\n        type: Array,\n        default: () => [],\n    },\n    columns: {\n        type: Array,\n        default: () => [],\n    },\n    modalVisible:{\n        type:Boolean,\n        default:false\n    }\n});\n\nconst dataContent = reactive({\n    columns: JSON.parse(JSON.stringify(differentColumns)),\n    dataSourse:[],\n    loading: false\n});\nconst visible = ref(props.modalVisible);\nconst expandedRowKeys = ref([]);\nconst monthBeforeIcon = ref('caret-right');\nconst monthBeforeValue = ref('');\nconst monthAfterIcon = ref('caret-right');\nconst monthAfterValue = ref('');\nconst QBeforeIcon = ref('caret-right');\nconst QBeforeValue = ref('');\nconst QAfterIcon = ref('caret-right');\nconst QAfterValue = ref('');\nwatch(\n() => props.modalVisible,\n(newVal, oldVal) => {\n    if (newVal) {\n        visible.value = newVal;\n        dataContent.columns = JSON.parse(JSON.stringify(differentColumns));\n        dataContent.dataSourse = dealDifferentData(props.data).arr;\n        expandedRowKeys.value = dealDifferentData(props.data).keyArr;\n    }\n    }\n);\nonBeforeMount(()=>{\n    List.forEach(item=>{\n        let month = 0;\n        if(item.dataIndex.substring(0,5)=='month'){\n            item.titleSlotName = item.dataIndex;\n              const params = {\n                month: `${year}-${month}`,\n            };\n            countWorkdaysByMonth(params)\n            .then(res => {\n                if (res.code === \"200\") {\n                    item.days = res.data;\n                }\n            })\n            .catch(() => {\n                Message.error(\"请求失败\");\n            });\n            }\n    })\n  \n})\nconst emit = defineEmits([\n\"handleClose\"\n]);\nconst expandedChange = rowkeys =>{\n    expandedRowKeys.value = rowkeys;\n}\n// 环差比数据处理\nlet keyArr = [];\nconst dealDifferentData = (arr)=>{\n    let dataIndex1 = '';\n    let dataIndex2 = '';\n    let dataIndex3 = '';\n    let dataIndex4 = '';\n    dataContent.columns.forEach(ele=>{\n        if(ele.titleSlotName ==\"monthBefore\"){\n            dataIndex1 = ele.dataIndex\n        }\n        if(ele.titleSlotName ==\"monthAfter\"){\n            dataIndex2 = ele.dataIndex\n        }\n        if(ele.titleSlotName ==\"QBefore\"){\n            dataIndex3 = ele.dataIndex\n        }if(ele.titleSlotName ==\"QAfter\"){\n            dataIndex4 = ele.dataIndex\n        }\n    })\n    Array.isArray(arr) && arr.forEach((item,index) => {\n        keyArr.push(item.key);\n        if(item[dataIndex2] !=='-' && item[dataIndex1] !=='-' && !item.isRate){\n            item.monthDifferent = Number(item[dataIndex2]-item[dataIndex1]).toFixed(2);\n            item.MonthonMonth = Number((item[dataIndex2]-item[dataIndex1])/item[dataIndex1]).toFixed(2);\n        }else{\n            item.monthDifferent='-'\n            item.MonthonMonth='-'\n        }\n        // 季度数据\n        item.Q1 = Number(item.month1 + item.month2 + item.month3).toFixed(2);\n        item.Q2 = Number(item.month4 + item.month5 + item.month6).toFixed(2);\n        item.Q3 = Number(item.month7 + item.month8 + item.month9).toFixed(2);\n        item.Q4 = Number(item.month10 + item.month11 + item.month12).toFixed(2);\n        if(isNaN(item.Q1)){\n            item.Q1='-'\n        }\n        if(isNaN(item.Q2)){\n            item.Q2='-'\n        }\n        if(isNaN(item.Q3)){\n            item.Q3='-'\n        }\n        if(isNaN(item.Q4)){\n            item.Q4='-'\n        }\n        if(item[dataIndex4] !=='-' && item[dataIndex3] !=='-' && !item.isRate){\n            item.QDifferent = Number(item[dataIndex4]-item[dataIndex3]).toFixed(2);\n            item.QonQ = Number((item[dataIndex4]-item[dataIndex3])/item[dataIndex3]).toFixed(2);\n        }else{\n            item.QDifferent='-'\n            item.QonQ='-'\n        }\n        \n        if(item.children && item.children.length){\n            dealDifferentData(item.children)\n        }\n    })\n    \n    return {arr,keyArr}\n};\n// 时间选择器开关\nconst changeVisible = (e,flag)=>{\n    if(flag =='MB'){\n        if(e){\n                monthBeforeIcon.value = 'caret-down'\n        }else{\n            monthBeforeIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='MA'){\n        if(e){\n                monthAfterIcon.value = 'caret-down'\n        }else{\n            monthAfterIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='QB'){\n        if(e){\n                QBeforeIcon.value = 'caret-down'\n        }else{\n            QBeforeIcon.value = 'caret-right'\n        }\n    }\n    if(flag =='QA'){\n        if(e){\n            QAfterIcon.value = 'caret-down'\n        }else{\n            QAfterIcon.value = 'caret-right'\n        }\n    }\n}\n// 处理月份标题\nconst dealMonthTitle = (e,flag)=>{\n    let str = e.substr(e.length - 2);\n    let num =''\n    if(str.substr(0,1)==0){\n        num = str.substr(1)\n    }else{\n        num = str\n    }\n    props.columns.forEach(item=>{\n        // 确定是month表头\n        if(item.dataIndex.substr(0,5)=='month'){\n            // 选择的月份 == 折叠表格的某个表头\n            if(num == item.dataIndex.substr(5)){\n                // 对应的表头更换\n                dataContent.columns.forEach(ele=>{\n                    if(flag =='MB'){\n                        if(ele.titleSlotName == 'monthBefore'){\n                            ele.dataIndex = item.dataIndex;\n                            ele.title = num +'月';\n                            ele.days = item.days;\n                        }\n                        if(ele.dataIndex =='monthDifferent'){\n                            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                            parts[1] = num; // 替换'-'后的数字  \n                            ele.title = parts.join('-')+'月'; // 将两部分重新组合为字符串，并用'-'连接\n                        }\n                    }\n                    if(flag =='MA'){\n                        if(ele.titleSlotName == 'monthAfter'){\n                            ele.dataIndex = item.dataIndex;\n                            ele.title = num +'月';\n                            ele.days = item.days;\n                        }\n                        if(ele.dataIndex =='monthDifferent'){\n                            const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                            parts[0] = num; // 替换'-'前的数字  \n                            ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n                        }\n                    }\n                })\n            }\n        }\n    })\n    dataContent.dataSourse = dealDifferentData(props.data).arr;\n};\n// 处理季度标题\nconst dealQTitle = (e,flag)=>{\n    let str = e.substr(e.length - 2);\n    let num =''\n    if(str.substr(0,1)==0){\n        num = str.substr(1)\n    }else{\n        num = str\n    }\n    const  QList = [\n        {\n            label:'1',\n            value:'Q1'\n        },\n        {\n            label:'4',\n            value:'Q2'\n        },\n        {\n            label:'7',\n            value:'Q3'\n        },\n        {\n            label:'10',\n            value:'Q4'\n        },\n    ]\n    // 对应的表头更换\n    dataContent.columns.forEach(ele=>{\n        if(flag =='QB'){\n            if(ele.titleSlotName == 'QBefore'){\n                //num对应的Q\n                ele.title = ele.dataIndex = QList.filter(item=>item.label == num)[0].value;\n            }\n            if(ele.dataIndex =='QDifferent'){\n                const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                parts[1] = QList.filter(item=>item.label == num)[0].value; // 替换'-'后的数字\n                ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n            }\n        }\n        if(flag =='QA'){\n            if(ele.titleSlotName == 'QAfter'){\n                ele.title = ele.dataIndex = QList.filter(item=>item.label == num)[0].value;\n            }\n            if(ele.dataIndex =='QDifferent'){\n                const parts = ele.title.split('-'); // 将字符串分割为两部分  \n                parts[0] = QList.filter(item=>item.label == num)[0].value; // 替换'-'前的数字  \n                ele.title = parts.join('-'); // 将两部分重新组合为字符串，并用'-'连接\n            }\n        }\n    })\n    dataContent.dataSourse = dealDifferentData(props.data).arr;\n};\n// 更改时间\nconst changeTime=(e,flag)=>{\n    if(flag == 'MB'){\n        monthBeforeValue.value = e;\n        dealMonthTitle(e,flag);\n    }\n    if(flag == 'MA'){\n        monthAfterValue.value = e;\n        dealMonthTitle(e,flag);\n    }\n    if(flag == 'QA'){\n        QAfterValue.value = e;\n        dealQTitle(e,flag)\n    }\n    if(flag == 'QB'){\n        QBeforeValue.value = e;\n        dealQTitle(e,flag)\n    }\n};\nconst handleClose = ()=>{\n    emit(\"handleClose\", false);\n};\n//单行高亮处理\nconst activeRowClass = (record) => {\n    if(record.raw.isGreenLight){\n        return 'activeRowGreen'\n    }else if(record.raw.isRate){\n        return 'activeRowPurple'\n    }else{\n        return ''\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.activeRowGreen > .arco-table-td) {\n    background-color: rgb(234, 248, 243) !important;\n}\n:deep(.activeRowPurple > .arco-table-td) {\n    background-color: rgb(240, 237, 248) !important;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}